{
    "name": "boundary",
    "displayName": "Boundary",
    "description": "A Pulumi package for creating and managing boundary resources.",
    "keywords": [
        "boundary",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`boundary` Terraform Provider](https://github.com/joerit/terraform-provider-boundary).",
    "repository": "https://github.com/joerit/pulumi-boundary",
    "publisher": "WEWIS Terminator",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/joerit/pulumi-boundary/sdk/go/boundary",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageDescription": "A Pulumi package for creating and managing boundary resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/joerit/terraform-provider-boundary)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-boundary` repo](https://github.com/joerit/pulumi-boundary/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-boundary` repo](https://github.com/joerit/terraform-provider-boundary/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/joerit/terraform-provider-boundary)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-boundary` repo](https://github.com/joerit/pulumi-boundary/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-boundary` repo](https://github.com/joerit/terraform-provider-boundary/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890. If not set, the default auth method for the given scope ID will be used.\n"
            },
            "authMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style or ldap-style auth methods\n"
            },
            "authMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style or ldap-style auth methods\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_login_name instead"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_password instead"
            },
            "pluginExecutionDir": {
                "type": "string",
                "description": "Specifies a directory that the Boundary provider can use to write and execute its built-in plugins.\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "scopeId": {
                "type": "string",
                "description": "The scope ID for the default auth method.\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "defaults": [
            "addr"
        ]
    },
    "types": {
        "boundary:index/getAccountScope:getAccountScope": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentScopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "parentScopeId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "boundary:index/getAuthMethodScope:getAuthMethodScope": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentScopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "parentScopeId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "boundary:index/getGroupScope:getGroupScope": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentScopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "parentScopeId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "boundary:index/getUserScope:getUserScope": {
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parentScopeId": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "type": "object",
            "required": [
                "description",
                "id",
                "name",
                "parentScopeId",
                "type"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the boundary package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890. If not set, the default auth method for the given scope ID will be used.\n"
            },
            "authMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style or ldap-style auth methods\n"
            },
            "authMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style or ldap-style auth methods\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_login_name instead"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_password instead"
            },
            "pluginExecutionDir": {
                "type": "string",
                "description": "Specifies a directory that the Boundary provider can use to write and execute its built-in plugins.\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "scopeId": {
                "type": "string",
                "description": "The scope ID for the default auth method.\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "required": [
            "addr"
        ],
        "inputProperties": {
            "addr": {
                "type": "string",
                "description": "The base url of the Boundary API, e.g. \"http://127.0.0.1:9200\". If not set, it will be read from the \"BOUNDARY_ADDR\" env\nvar.\n"
            },
            "authMethodId": {
                "type": "string",
                "description": "The auth method ID e.g. ampw_1234567890. If not set, the default auth method for the given scope ID will be used.\n"
            },
            "authMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style or ldap-style auth methods\n"
            },
            "authMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style or ldap-style auth methods\n"
            },
            "passwordAuthMethodLoginName": {
                "type": "string",
                "description": "The auth method login name for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_login_name instead"
            },
            "passwordAuthMethodPassword": {
                "type": "string",
                "description": "The auth method password for password-style auth methods\n",
                "deprecationMessage": "Use auth_method_password instead"
            },
            "pluginExecutionDir": {
                "type": "string",
                "description": "Specifies a directory that the Boundary provider can use to write and execute its built-in plugins.\n"
            },
            "recoveryKmsHcl": {
                "type": "string",
                "description": "Can be a heredoc string or a path on disk. If set, the string/file will be parsed as HCL and used with the recovery KMS\nmechanism. While this is set, it will override any other authentication information; the KMS mechanism will always be\nused. See Boundary's KMS docs for examples: https://boundaryproject.io/docs/configuration/kms\n"
            },
            "scopeId": {
                "type": "string",
                "description": "The scope ID for the default auth method.\n"
            },
            "tlsInsecure": {
                "type": "boolean",
                "description": "When set to true, does not validate the Boundary API endpoint certificate\n"
            },
            "token": {
                "type": "string",
                "description": "The Boundary token to use, as a string or path on disk containing just the string. If set, the token read here will be\nused in place of authenticating with the auth method specified in \"auth_method_id\", although the recovery KMS mechanism\nwill still override this. Can also be set with the BOUNDARY_TOKEN environment variable.\n"
            }
        },
        "requiredInputs": [
            "addr"
        ]
    },
    "resources": {
        "boundary:index/account:Account": {
            "description": "Deprecated: use `boundary.AccountPassword` instead.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n"
                }
            },
            "required": [
                "authMethodId",
                "name",
                "type"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Account resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The login name for this account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/accountLdap:AccountLdap": {
            "description": "The account resource allows you to configure a Boundary account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst forumsysLdap = new boundary.AuthMethodLdap(\"forumsys_ldap\", {\n    name: \"forumsys public LDAP\",\n    scopeId: \"global\",\n    urls: [\"ldap://ldap.forumsys.com\"],\n    userDn: \"dc=example,dc=com\",\n    userAttr: \"uid\",\n    groupDn: \"dc=example,dc=com\",\n    bindDn: \"cn=read-only-admin,dc=example,dc=com\",\n    bindPassword: \"password\",\n    state: \"active-public\",\n    enableGroups: true,\n    discoverDn: true,\n});\nconst einstein = new boundary.AccountLdap(\"einstein\", {\n    authMethodId: forumsysLdap.id,\n    loginName: \"einstein\",\n    name: \"einstein\",\n});\nconst einsteinUser = new boundary.User(\"einstein\", {\n    name: \"einstein\",\n    description: \"User resource for einstein\",\n    scopeId: \"global\",\n    accountIds: [einstein.id],\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nforumsys_ldap = boundary.AuthMethodLdap(\"forumsys_ldap\",\n    name=\"forumsys public LDAP\",\n    scope_id=\"global\",\n    urls=[\"ldap://ldap.forumsys.com\"],\n    user_dn=\"dc=example,dc=com\",\n    user_attr=\"uid\",\n    group_dn=\"dc=example,dc=com\",\n    bind_dn=\"cn=read-only-admin,dc=example,dc=com\",\n    bind_password=\"password\",\n    state=\"active-public\",\n    enable_groups=True,\n    discover_dn=True)\neinstein = boundary.AccountLdap(\"einstein\",\n    auth_method_id=forumsys_ldap.id,\n    login_name=\"einstein\",\n    name=\"einstein\")\neinstein_user = boundary.User(\"einstein\",\n    name=\"einstein\",\n    description=\"User resource for einstein\",\n    scope_id=\"global\",\n    account_ids=[einstein.id])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var forumsysLdap = new Boundary.AuthMethodLdap(\"forumsys_ldap\", new()\n    {\n        Name = \"forumsys public LDAP\",\n        ScopeId = \"global\",\n        Urls = new[]\n        {\n            \"ldap://ldap.forumsys.com\",\n        },\n        UserDn = \"dc=example,dc=com\",\n        UserAttr = \"uid\",\n        GroupDn = \"dc=example,dc=com\",\n        BindDn = \"cn=read-only-admin,dc=example,dc=com\",\n        BindPassword = \"password\",\n        State = \"active-public\",\n        EnableGroups = true,\n        DiscoverDn = true,\n    });\n\n    var einstein = new Boundary.AccountLdap(\"einstein\", new()\n    {\n        AuthMethodId = forumsysLdap.Id,\n        LoginName = \"einstein\",\n        Name = \"einstein\",\n    });\n\n    var einsteinUser = new Boundary.User(\"einstein\", new()\n    {\n        Name = \"einstein\",\n        Description = \"User resource for einstein\",\n        ScopeId = \"global\",\n        AccountIds = new[]\n        {\n            einstein.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tforumsysLdap, err := boundary.NewAuthMethodLdap(ctx, \"forumsys_ldap\", \u0026boundary.AuthMethodLdapArgs{\n\t\t\tName:    pulumi.String(\"forumsys public LDAP\"),\n\t\t\tScopeId: pulumi.String(\"global\"),\n\t\t\tUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ldap://ldap.forumsys.com\"),\n\t\t\t},\n\t\t\tUserDn:       pulumi.String(\"dc=example,dc=com\"),\n\t\t\tUserAttr:     pulumi.String(\"uid\"),\n\t\t\tGroupDn:      pulumi.String(\"dc=example,dc=com\"),\n\t\t\tBindDn:       pulumi.String(\"cn=read-only-admin,dc=example,dc=com\"),\n\t\t\tBindPassword: pulumi.String(\"password\"),\n\t\t\tState:        pulumi.String(\"active-public\"),\n\t\t\tEnableGroups: pulumi.Bool(true),\n\t\t\tDiscoverDn:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\teinstein, err := boundary.NewAccountLdap(ctx, \"einstein\", \u0026boundary.AccountLdapArgs{\n\t\t\tAuthMethodId: forumsysLdap.ID(),\n\t\t\tLoginName:    pulumi.String(\"einstein\"),\n\t\t\tName:         pulumi.String(\"einstein\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewUser(ctx, \"einstein\", \u0026boundary.UserArgs{\n\t\t\tName:        pulumi.String(\"einstein\"),\n\t\t\tDescription: pulumi.String(\"User resource for einstein\"),\n\t\t\tScopeId:     pulumi.String(\"global\"),\n\t\t\tAccountIds: pulumi.StringArray{\n\t\t\t\teinstein.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethodLdap;\nimport com.pulumi.boundary.AuthMethodLdapArgs;\nimport com.pulumi.boundary.AccountLdap;\nimport com.pulumi.boundary.AccountLdapArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var forumsysLdap = new AuthMethodLdap(\"forumsysLdap\", AuthMethodLdapArgs.builder()\n            .name(\"forumsys public LDAP\")\n            .scopeId(\"global\")\n            .urls(\"ldap://ldap.forumsys.com\")\n            .userDn(\"dc=example,dc=com\")\n            .userAttr(\"uid\")\n            .groupDn(\"dc=example,dc=com\")\n            .bindDn(\"cn=read-only-admin,dc=example,dc=com\")\n            .bindPassword(\"password\")\n            .state(\"active-public\")\n            .enableGroups(true)\n            .discoverDn(true)\n            .build());\n\n        var einstein = new AccountLdap(\"einstein\", AccountLdapArgs.builder()\n            .authMethodId(forumsysLdap.id())\n            .loginName(\"einstein\")\n            .name(\"einstein\")\n            .build());\n\n        var einsteinUser = new User(\"einsteinUser\", UserArgs.builder()\n            .name(\"einstein\")\n            .description(\"User resource for einstein\")\n            .scopeId(\"global\")\n            .accountIds(einstein.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  forumsysLdap:\n    type: boundary:AuthMethodLdap\n    name: forumsys_ldap\n    properties:\n      name: forumsys public LDAP\n      scopeId: global\n      urls: # the addr of the LDAP server\n        - ldap://ldap.forumsys.com\n      userDn: dc=example,dc=com\n      userAttr: uid\n      groupDn: dc=example,dc=com\n      bindDn: cn=read-only-admin,dc=example,dc=com\n      bindPassword: password\n      state: active-public\n      enableGroups: true # this turns-on the discovery of a user's groups\n      discoverDn: true # this turns-on the discovery of an authenticating user's dn\n  einstein:\n    type: boundary:AccountLdap\n    properties:\n      authMethodId: ${forumsysLdap.id}\n      loginName: einstein\n      name: einstein\n  einsteinUser:\n    type: boundary:User\n    name: einstein\n    properties:\n      name: einstein\n      description: User resource for einstein\n      scopeId: global\n      accountIds:\n        - ${einstein.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/accountLdap:AccountLdap foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "deprecationMessage": "The value for this field will be infered since 'ldap' is the only possible value."
                }
            },
            "required": [
                "authMethodId",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "deprecationMessage": "The value for this field will be infered since 'ldap' is the only possible value.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountLdap resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The login name for this account.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "deprecationMessage": "The value for this field will be infered since 'ldap' is the only possible value.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/accountOidc:AccountOidc": {
            "description": "The account resource allows you to configure a Boundary account.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The OIDC issuer.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The OIDC subject.\n"
                }
            },
            "required": [
                "authMethodId",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The OIDC issuer.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "subject": {
                    "type": "string",
                    "description": "The OIDC subject.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountOidc resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The OIDC issuer.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "subject": {
                        "type": "string",
                        "description": "The OIDC subject.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/accountPassword:AccountPassword": {
            "description": "The account resource allows you to configure a Boundary account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.AuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\nconst jeff = new boundary.AccountPassword(\"jeff\", {\n    authMethodId: password.id,\n    loginName: \"jeff\",\n    password: \"$uper$ecure\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.AuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\njeff = boundary.AccountPassword(\"jeff\",\n    auth_method_id=password.id,\n    login_name=\"jeff\",\n    password=\"$uper$ecure\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.AuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n    var jeff = new Boundary.AccountPassword(\"jeff\", new()\n    {\n        AuthMethodId = password.Id,\n        LoginName = \"jeff\",\n        Password = \"$uper$ecure\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpassword, err := boundary.NewAuthMethod(ctx, \"password\", \u0026boundary.AuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAccountPassword(ctx, \"jeff\", \u0026boundary.AccountPasswordArgs{\n\t\t\tAuthMethodId: password.ID(),\n\t\t\tLoginName:    pulumi.String(\"jeff\"),\n\t\t\tPassword:     pulumi.String(\"$uper$ecure\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethod;\nimport com.pulumi.boundary.AuthMethodArgs;\nimport com.pulumi.boundary.AccountPassword;\nimport com.pulumi.boundary.AccountPasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new AuthMethod(\"password\", AuthMethodArgs.builder()\n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n        var jeff = new AccountPassword(\"jeff\", AccountPasswordArgs.builder()\n            .authMethodId(password.id())\n            .loginName(\"jeff\")\n            .password(\"$uper$ecure\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:AuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n  jeff:\n    type: boundary:AccountPassword\n    properties:\n      authMethodId: ${password.id}\n      loginName: jeff\n      password: $uper$ecure\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/accountPassword:AccountPassword foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "deprecationMessage": "The value for this field will be infered since 'password' is the only possible value."
                }
            },
            "required": [
                "authMethodId",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The account description.\n"
                },
                "loginName": {
                    "type": "string",
                    "description": "The login name for this account.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The account name. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                    "secret": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "deprecationMessage": "The value for this field will be infered since 'password' is the only possible value.",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "authMethodId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AccountPassword resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The account description.\n"
                    },
                    "loginName": {
                        "type": "string",
                        "description": "The login name for this account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The account name. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The account password. Only set on create, changes will not be reflected when updating account.\n",
                        "secret": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "deprecationMessage": "The value for this field will be infered since 'password' is the only possible value.",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/aliasTarget:AliasTarget": {
            "description": "The target alias resource allows you to configure a Boundary target alias.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.HostCatalogStatic(\"foo\", {\n    name: \"test\",\n    description: \"test catalog\",\n    scopeId: project.id,\n});\nconst fooHostStatic = new boundary.HostStatic(\"foo\", {\n    name: \"foo\",\n    hostCatalogId: foo.id,\n    address: \"10.0.0.1\",\n});\nconst bar = new boundary.HostStatic(\"bar\", {\n    name: \"bar\",\n    hostCatalogId: foo.id,\n    address: \"127.0.0.1\",\n});\nconst fooHostSetStatic = new boundary.HostSetStatic(\"foo\", {\n    name: \"foo\",\n    hostCatalogId: foo.id,\n    hostIds: [\n        fooHostStatic.id,\n        bar.id,\n    ],\n});\nconst fooTarget = new boundary.Target(\"foo\", {\n    name: \"foo\",\n    description: \"Foo target\",\n    type: \"tcp\",\n    defaultPort: 22,\n    scopeId: project.id,\n    hostSourceIds: [fooHostSetStatic.id],\n});\nconst exampleAliasTarget = new boundary.AliasTarget(\"example_alias_target\", {\n    name: \"example_alias_target\",\n    description: \"Example alias to target foo using host boundary_host_static.bar\",\n    scopeId: \"global\",\n    value: \"example.bar.foo.boundary\",\n    destinationId: fooTarget.id,\n    authorizeSessionHostId: bar.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.HostCatalogStatic(\"foo\",\n    name=\"test\",\n    description=\"test catalog\",\n    scope_id=project.id)\nfoo_host_static = boundary.HostStatic(\"foo\",\n    name=\"foo\",\n    host_catalog_id=foo.id,\n    address=\"10.0.0.1\")\nbar = boundary.HostStatic(\"bar\",\n    name=\"bar\",\n    host_catalog_id=foo.id,\n    address=\"127.0.0.1\")\nfoo_host_set_static = boundary.HostSetStatic(\"foo\",\n    name=\"foo\",\n    host_catalog_id=foo.id,\n    host_ids=[\n        foo_host_static.id,\n        bar.id,\n    ])\nfoo_target = boundary.Target(\"foo\",\n    name=\"foo\",\n    description=\"Foo target\",\n    type=\"tcp\",\n    default_port=22,\n    scope_id=project.id,\n    host_source_ids=[foo_host_set_static.id])\nexample_alias_target = boundary.AliasTarget(\"example_alias_target\",\n    name=\"example_alias_target\",\n    description=\"Example alias to target foo using host boundary_host_static.bar\",\n    scope_id=\"global\",\n    value=\"example.bar.foo.boundary\",\n    destination_id=foo_target.id,\n    authorize_session_host_id=bar.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.HostCatalogStatic(\"foo\", new()\n    {\n        Name = \"test\",\n        Description = \"test catalog\",\n        ScopeId = project.Id,\n    });\n\n    var fooHostStatic = new Boundary.HostStatic(\"foo\", new()\n    {\n        Name = \"foo\",\n        HostCatalogId = foo.Id,\n        Address = \"10.0.0.1\",\n    });\n\n    var bar = new Boundary.HostStatic(\"bar\", new()\n    {\n        Name = \"bar\",\n        HostCatalogId = foo.Id,\n        Address = \"127.0.0.1\",\n    });\n\n    var fooHostSetStatic = new Boundary.HostSetStatic(\"foo\", new()\n    {\n        Name = \"foo\",\n        HostCatalogId = foo.Id,\n        HostIds = new[]\n        {\n            fooHostStatic.Id,\n            bar.Id,\n        },\n    });\n\n    var fooTarget = new Boundary.Target(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"Foo target\",\n        Type = \"tcp\",\n        DefaultPort = 22,\n        ScopeId = project.Id,\n        HostSourceIds = new[]\n        {\n            fooHostSetStatic.Id,\n        },\n    });\n\n    var exampleAliasTarget = new Boundary.AliasTarget(\"example_alias_target\", new()\n    {\n        Name = \"example_alias_target\",\n        Description = \"Example alias to target foo using host boundary_host_static.bar\",\n        ScopeId = \"global\",\n        Value = \"example.bar.foo.boundary\",\n        DestinationId = fooTarget.Id,\n        AuthorizeSessionHostId = bar.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewHostCatalogStatic(ctx, \"foo\", \u0026boundary.HostCatalogStaticArgs{\n\t\t\tName:        pulumi.String(\"test\"),\n\t\t\tDescription: pulumi.String(\"test catalog\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooHostStatic, err := boundary.NewHostStatic(ctx, \"foo\", \u0026boundary.HostStaticArgs{\n\t\t\tName:          pulumi.String(\"foo\"),\n\t\t\tHostCatalogId: foo.ID(),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := boundary.NewHostStatic(ctx, \"bar\", \u0026boundary.HostStaticArgs{\n\t\t\tName:          pulumi.String(\"bar\"),\n\t\t\tHostCatalogId: foo.ID(),\n\t\t\tAddress:       pulumi.String(\"127.0.0.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooHostSetStatic, err := boundary.NewHostSetStatic(ctx, \"foo\", \u0026boundary.HostSetStaticArgs{\n\t\t\tName:          pulumi.String(\"foo\"),\n\t\t\tHostCatalogId: foo.ID(),\n\t\t\tHostIds: pulumi.StringArray{\n\t\t\t\tfooHostStatic.ID(),\n\t\t\t\tbar.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooTarget, err := boundary.NewTarget(ctx, \"foo\", \u0026boundary.TargetArgs{\n\t\t\tName:        pulumi.String(\"foo\"),\n\t\t\tDescription: pulumi.String(\"Foo target\"),\n\t\t\tType:        pulumi.String(\"tcp\"),\n\t\t\tDefaultPort: pulumi.Int(22),\n\t\t\tScopeId:     project.ID(),\n\t\t\tHostSourceIds: pulumi.StringArray{\n\t\t\t\tfooHostSetStatic.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAliasTarget(ctx, \"example_alias_target\", \u0026boundary.AliasTargetArgs{\n\t\t\tName:                   pulumi.String(\"example_alias_target\"),\n\t\t\tDescription:            pulumi.String(\"Example alias to target foo using host boundary_host_static.bar\"),\n\t\t\tScopeId:                pulumi.String(\"global\"),\n\t\t\tValue:                  pulumi.String(\"example.bar.foo.boundary\"),\n\t\t\tDestinationId:          fooTarget.ID(),\n\t\t\tAuthorizeSessionHostId: bar.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogStatic;\nimport com.pulumi.boundary.HostCatalogStaticArgs;\nimport com.pulumi.boundary.HostStatic;\nimport com.pulumi.boundary.HostStaticArgs;\nimport com.pulumi.boundary.HostSetStatic;\nimport com.pulumi.boundary.HostSetStaticArgs;\nimport com.pulumi.boundary.Target;\nimport com.pulumi.boundary.TargetArgs;\nimport com.pulumi.boundary.AliasTarget;\nimport com.pulumi.boundary.AliasTargetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new HostCatalogStatic(\"foo\", HostCatalogStaticArgs.builder()\n            .name(\"test\")\n            .description(\"test catalog\")\n            .scopeId(project.id())\n            .build());\n\n        var fooHostStatic = new HostStatic(\"fooHostStatic\", HostStaticArgs.builder()\n            .name(\"foo\")\n            .hostCatalogId(foo.id())\n            .address(\"10.0.0.1\")\n            .build());\n\n        var bar = new HostStatic(\"bar\", HostStaticArgs.builder()\n            .name(\"bar\")\n            .hostCatalogId(foo.id())\n            .address(\"127.0.0.1\")\n            .build());\n\n        var fooHostSetStatic = new HostSetStatic(\"fooHostSetStatic\", HostSetStaticArgs.builder()\n            .name(\"foo\")\n            .hostCatalogId(foo.id())\n            .hostIds(            \n                fooHostStatic.id(),\n                bar.id())\n            .build());\n\n        var fooTarget = new Target(\"fooTarget\", TargetArgs.builder()\n            .name(\"foo\")\n            .description(\"Foo target\")\n            .type(\"tcp\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooHostSetStatic.id())\n            .build());\n\n        var exampleAliasTarget = new AliasTarget(\"exampleAliasTarget\", AliasTargetArgs.builder()\n            .name(\"example_alias_target\")\n            .description(\"Example alias to target foo using host boundary_host_static.bar\")\n            .scopeId(\"global\")\n            .value(\"example.bar.foo.boundary\")\n            .destinationId(fooTarget.id())\n            .authorizeSessionHostId(bar.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: global scope\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:HostCatalogStatic\n    properties:\n      name: test\n      description: test catalog\n      scopeId: ${project.id}\n  fooHostStatic:\n    type: boundary:HostStatic\n    name: foo\n    properties:\n      name: foo\n      hostCatalogId: ${foo.id}\n      address: 10.0.0.1\n  bar:\n    type: boundary:HostStatic\n    properties:\n      name: bar\n      hostCatalogId: ${foo.id}\n      address: 127.0.0.1\n  fooHostSetStatic:\n    type: boundary:HostSetStatic\n    name: foo\n    properties:\n      name: foo\n      hostCatalogId: ${foo.id}\n      hostIds:\n        - ${fooHostStatic.id}\n        - ${bar.id}\n  fooTarget:\n    type: boundary:Target\n    name: foo\n    properties:\n      name: foo\n      description: Foo target\n      type: tcp\n      defaultPort: '22'\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooHostSetStatic.id}\n  exampleAliasTarget:\n    type: boundary:AliasTarget\n    name: example_alias_target\n    properties:\n      name: example_alias_target\n      description: Example alias to target foo using host boundary_host_static.bar\n      scopeId: global\n      value: example.bar.foo.boundary\n      destinationId: ${fooTarget.id}\n      authorizeSessionHostId: ${bar.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/aliasTarget:AliasTarget example_alias_target \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "authorizeSessionHostId": {
                    "type": "string",
                    "description": "The host id to pass to Boundary when performing an authorize session action.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The alias description.\n"
                },
                "destinationId": {
                    "type": "string",
                    "description": "The destination of the alias.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The alias name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of alias; hardcoded.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the alias.\n"
                }
            },
            "required": [
                "name",
                "scopeId",
                "value"
            ],
            "inputProperties": {
                "authorizeSessionHostId": {
                    "type": "string",
                    "description": "The host id to pass to Boundary when performing an authorize session action.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The alias description.\n"
                },
                "destinationId": {
                    "type": "string",
                    "description": "The destination of the alias.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The alias name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of alias; hardcoded.\n"
                },
                "value": {
                    "type": "string",
                    "description": "The value of the alias.\n"
                }
            },
            "requiredInputs": [
                "scopeId",
                "value"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AliasTarget resources.\n",
                "properties": {
                    "authorizeSessionHostId": {
                        "type": "string",
                        "description": "The host id to pass to Boundary when performing an authorize session action.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The alias description.\n"
                    },
                    "destinationId": {
                        "type": "string",
                        "description": "The destination of the alias.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The alias name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of alias; hardcoded.\n"
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the alias.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/authMethod:AuthMethod": {
            "description": "The auth method resource allows you to configure a Boundary auth_method.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.AuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.AuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.AuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAuthMethod(ctx, \"password\", \u0026boundary.AuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethod;\nimport com.pulumi.boundary.AuthMethodArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new AuthMethod(\"password\", AuthMethodArgs.builder()\n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:AuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/authMethod:AuthMethod foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n"
                }
            },
            "required": [
                "minLoginNameLength",
                "minPasswordLength",
                "name",
                "scopeId",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n",
                    "deprecationMessage": "Will be removed in favor of using attributes parameter"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthMethod resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "minLoginNameLength": {
                        "type": "integer",
                        "description": "The minimum login name length.\n",
                        "deprecationMessage": "Will be removed in favor of using attributes parameter"
                    },
                    "minPasswordLength": {
                        "type": "integer",
                        "description": "The minimum password length.\n",
                        "deprecationMessage": "Will be removed in favor of using attributes parameter"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/authMethodLdap:AuthMethodLdap": {
            "description": "The LDAP auth method resource allows you to configure a Boundary auth_method_ldap.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst forumsysLdap = new boundary.AuthMethodLdap(\"forumsys_ldap\", {\n    name: \"forumsys public LDAP\",\n    scopeId: \"global\",\n    urls: [\"ldap://ldap.forumsys.com\"],\n    userDn: \"dc=example,dc=com\",\n    userAttr: \"uid\",\n    groupDn: \"dc=example,dc=com\",\n    bindDn: \"cn=read-only-admin,dc=example,dc=com\",\n    bindPassword: \"password\",\n    state: \"active-public\",\n    enableGroups: true,\n    discoverDn: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nforumsys_ldap = boundary.AuthMethodLdap(\"forumsys_ldap\",\n    name=\"forumsys public LDAP\",\n    scope_id=\"global\",\n    urls=[\"ldap://ldap.forumsys.com\"],\n    user_dn=\"dc=example,dc=com\",\n    user_attr=\"uid\",\n    group_dn=\"dc=example,dc=com\",\n    bind_dn=\"cn=read-only-admin,dc=example,dc=com\",\n    bind_password=\"password\",\n    state=\"active-public\",\n    enable_groups=True,\n    discover_dn=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var forumsysLdap = new Boundary.AuthMethodLdap(\"forumsys_ldap\", new()\n    {\n        Name = \"forumsys public LDAP\",\n        ScopeId = \"global\",\n        Urls = new[]\n        {\n            \"ldap://ldap.forumsys.com\",\n        },\n        UserDn = \"dc=example,dc=com\",\n        UserAttr = \"uid\",\n        GroupDn = \"dc=example,dc=com\",\n        BindDn = \"cn=read-only-admin,dc=example,dc=com\",\n        BindPassword = \"password\",\n        State = \"active-public\",\n        EnableGroups = true,\n        DiscoverDn = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAuthMethodLdap(ctx, \"forumsys_ldap\", \u0026boundary.AuthMethodLdapArgs{\n\t\t\tName:    pulumi.String(\"forumsys public LDAP\"),\n\t\t\tScopeId: pulumi.String(\"global\"),\n\t\t\tUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ldap://ldap.forumsys.com\"),\n\t\t\t},\n\t\t\tUserDn:       pulumi.String(\"dc=example,dc=com\"),\n\t\t\tUserAttr:     pulumi.String(\"uid\"),\n\t\t\tGroupDn:      pulumi.String(\"dc=example,dc=com\"),\n\t\t\tBindDn:       pulumi.String(\"cn=read-only-admin,dc=example,dc=com\"),\n\t\t\tBindPassword: pulumi.String(\"password\"),\n\t\t\tState:        pulumi.String(\"active-public\"),\n\t\t\tEnableGroups: pulumi.Bool(true),\n\t\t\tDiscoverDn:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethodLdap;\nimport com.pulumi.boundary.AuthMethodLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var forumsysLdap = new AuthMethodLdap(\"forumsysLdap\", AuthMethodLdapArgs.builder()\n            .name(\"forumsys public LDAP\")\n            .scopeId(\"global\")\n            .urls(\"ldap://ldap.forumsys.com\")\n            .userDn(\"dc=example,dc=com\")\n            .userAttr(\"uid\")\n            .groupDn(\"dc=example,dc=com\")\n            .bindDn(\"cn=read-only-admin,dc=example,dc=com\")\n            .bindPassword(\"password\")\n            .state(\"active-public\")\n            .enableGroups(true)\n            .discoverDn(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  forumsysLdap:\n    type: boundary:AuthMethodLdap\n    name: forumsys_ldap\n    properties:\n      name: forumsys public LDAP\n      scopeId: global\n      urls: # the addr of the LDAP server\n        - ldap://ldap.forumsys.com\n      userDn: dc=example,dc=com\n      userAttr: uid\n      groupDn: dc=example,dc=com\n      bindDn: cn=read-only-admin,dc=example,dc=com\n      bindPassword: password\n      state: active-public\n      enableGroups: true # this turns-on the discovery of a user's groups\n      discoverDn: true # this turns-on the discovery of an authenticating user's dn\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/authMethodLdap:AuthMethodLdap foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "accountAttributeMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account attribute maps fullname and email.\n"
                },
                "anonGroupSearch": {
                    "type": "boolean",
                    "description": "Use anon bind when performing LDAP group searches (optional).\n"
                },
                "bindDn": {
                    "type": "string",
                    "description": "The distinguished name of entry to bind when performing user and group searches (optional).\n"
                },
                "bindPassword": {
                    "type": "string",
                    "description": "The password to use along with bind-dn performing user and group searches (optional).\n"
                },
                "bindPasswordHmac": {
                    "type": "string",
                    "description": "The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).\n"
                },
                "clientCertificateKeyHmac": {
                    "type": "string",
                    "description": "The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "dereferenceAliases": {
                    "type": "string",
                    "description": "Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "discoverDn": {
                    "type": "boolean",
                    "description": "Use anon bind to discover the bind DN of a user (optional).\n"
                },
                "enableGroups": {
                    "type": "boolean",
                    "description": "Find the authenticated user's groups during authentication (optional).\n"
                },
                "groupAttr": {
                    "type": "string",
                    "description": "The attribute that enumerates a user's group membership from entries returned by a group search (optional).\n"
                },
                "groupDn": {
                    "type": "string",
                    "description": "The base DN under which to perform group search.\n"
                },
                "groupFilter": {
                    "type": "string",
                    "description": "A go template used to construct a LDAP group search filter (optional).\n"
                },
                "insecureTls": {
                    "type": "boolean",
                    "description": "Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.\n"
                },
                "maximumPageSize": {
                    "type": "integer",
                    "description": "MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Issue StartTLS command after connecting (optional).\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                },
                "upnDomain": {
                    "type": "string",
                    "description": "The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).\n"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.\n"
                },
                "useTokenGroups": {
                    "type": "boolean",
                    "description": "Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).\n"
                },
                "userAttr": {
                    "type": "string",
                    "description": "The attribute on user entry matching the username passed when authenticating (optional).\n"
                },
                "userDn": {
                    "type": "string",
                    "description": "The base DN under which to perform user search (optional).\n"
                },
                "userFilter": {
                    "type": "string",
                    "description": "A go template used to construct a LDAP user search filter (optional).\n"
                }
            },
            "required": [
                "bindPasswordHmac",
                "clientCertificateKeyHmac",
                "dereferenceAliases",
                "name",
                "scopeId",
                "state"
            ],
            "inputProperties": {
                "accountAttributeMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account attribute maps fullname and email.\n"
                },
                "anonGroupSearch": {
                    "type": "boolean",
                    "description": "Use anon bind when performing LDAP group searches (optional).\n"
                },
                "bindDn": {
                    "type": "string",
                    "description": "The distinguished name of entry to bind when performing user and group searches (optional).\n"
                },
                "bindPassword": {
                    "type": "string",
                    "description": "The password to use along with bind-dn performing user and group searches (optional).\n"
                },
                "bindPasswordHmac": {
                    "type": "string",
                    "description": "The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "certificates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).\n"
                },
                "clientCertificateKeyHmac": {
                    "type": "string",
                    "description": "The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "dereferenceAliases": {
                    "type": "string",
                    "description": "Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "discoverDn": {
                    "type": "boolean",
                    "description": "Use anon bind to discover the bind DN of a user (optional).\n"
                },
                "enableGroups": {
                    "type": "boolean",
                    "description": "Find the authenticated user's groups during authentication (optional).\n"
                },
                "groupAttr": {
                    "type": "string",
                    "description": "The attribute that enumerates a user's group membership from entries returned by a group search (optional).\n"
                },
                "groupDn": {
                    "type": "string",
                    "description": "The base DN under which to perform group search.\n"
                },
                "groupFilter": {
                    "type": "string",
                    "description": "A go template used to construct a LDAP group search filter (optional).\n"
                },
                "insecureTls": {
                    "type": "boolean",
                    "description": "Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.\n"
                },
                "maximumPageSize": {
                    "type": "integer",
                    "description": "MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "startTls": {
                    "type": "boolean",
                    "description": "Issue StartTLS command after connecting (optional).\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                },
                "upnDomain": {
                    "type": "string",
                    "description": "The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).\n"
                },
                "urls": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.\n"
                },
                "useTokenGroups": {
                    "type": "boolean",
                    "description": "Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).\n"
                },
                "userAttr": {
                    "type": "string",
                    "description": "The attribute on user entry matching the username passed when authenticating (optional).\n"
                },
                "userDn": {
                    "type": "string",
                    "description": "The base DN under which to perform user search (optional).\n"
                },
                "userFilter": {
                    "type": "string",
                    "description": "A go template used to construct a LDAP user search filter (optional).\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthMethodLdap resources.\n",
                "properties": {
                    "accountAttributeMaps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Account attribute maps fullname and email.\n"
                    },
                    "anonGroupSearch": {
                        "type": "boolean",
                        "description": "Use anon bind when performing LDAP group searches (optional).\n"
                    },
                    "bindDn": {
                        "type": "string",
                        "description": "The distinguished name of entry to bind when performing user and group searches (optional).\n"
                    },
                    "bindPassword": {
                        "type": "string",
                        "description": "The password to use along with bind-dn performing user and group searches (optional).\n"
                    },
                    "bindPasswordHmac": {
                        "type": "string",
                        "description": "The HMAC of the bind password returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "PEM-encoded X.509 CA certificate in ASN.1 DER form that can be used as a trust anchor when connecting to an LDAP server(optional).  This may be specified multiple times\n"
                    },
                    "clientCertificate": {
                        "type": "string",
                        "description": "PEM-encoded X.509 client certificate in ASN.1 DER form that can be used to authenticate against an LDAP server(optional).\n"
                    },
                    "clientCertificateKey": {
                        "type": "string",
                        "description": "PEM-encoded X.509 client certificate key in PKCS #8, ASN.1 DER form used with the client certificate (optional).\n"
                    },
                    "clientCertificateKeyHmac": {
                        "type": "string",
                        "description": "The HMAC of the client certificate key returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                    },
                    "dereferenceAliases": {
                        "type": "string",
                        "description": "Control how aliases are dereferenced when performing the search. Can be one of: NeverDerefAliases, DerefInSearching, DerefFindingBaseObj, and DerefAlways (optional).\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "discoverDn": {
                        "type": "boolean",
                        "description": "Use anon bind to discover the bind DN of a user (optional).\n"
                    },
                    "enableGroups": {
                        "type": "boolean",
                        "description": "Find the authenticated user's groups during authentication (optional).\n"
                    },
                    "groupAttr": {
                        "type": "string",
                        "description": "The attribute that enumerates a user's group membership from entries returned by a group search (optional).\n"
                    },
                    "groupDn": {
                        "type": "string",
                        "description": "The base DN under which to perform group search.\n"
                    },
                    "groupFilter": {
                        "type": "string",
                        "description": "A go template used to construct a LDAP group search filter (optional).\n"
                    },
                    "insecureTls": {
                        "type": "boolean",
                        "description": "Skip the LDAP server SSL certificate validation (optional) - insecure and use with caution.\n"
                    },
                    "isPrimaryForScope": {
                        "type": "boolean",
                        "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the the user will be automatically created when they login using an LDAP account.\n"
                    },
                    "maximumPageSize": {
                        "type": "integer",
                        "description": "MaximumPageSize specifies a maximum search result size to use when retrieving the authenticated user's groups (optional).\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "startTls": {
                        "type": "boolean",
                        "description": "Issue StartTLS command after connecting (optional).\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Defaults to active-public.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of auth method; hardcoded.\n"
                    },
                    "upnDomain": {
                        "type": "string",
                        "description": "The userPrincipalDomain used to construct the UPN string for the authenticating user (optional).\n"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The LDAP URLs that specify LDAP servers to connect to (required).  May be specified multiple times.\n"
                    },
                    "useTokenGroups": {
                        "type": "boolean",
                        "description": "Use the Active Directory tokenGroups constructed attribute of the user to find the group memberships (optional).\n"
                    },
                    "userAttr": {
                        "type": "string",
                        "description": "The attribute on user entry matching the username passed when authenticating (optional).\n"
                    },
                    "userDn": {
                        "type": "string",
                        "description": "The base DN under which to perform user search (optional).\n"
                    },
                    "userFilter": {
                        "type": "string",
                        "description": "A go template used to construct a LDAP user search filter (optional).\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/authMethodOidc:AuthMethodOidc": {
            "description": "The OIDC auth method resource allows you to configure a Boundary auth_method_oidc.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst vault = new boundary.AuthMethodOidc(\"vault\", {\n    apiUrlPrefix: \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    clientId: \"eieio\",\n    clientSecret: \"hvo_secret_XO\",\n    description: \"My Boundary OIDC Auth Method for Vault\",\n    issuer: \"https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\",\n    scopeId: \"global\",\n    signingAlgorithms: [\"RS256\"],\n    type: \"oidc\",\n});\nconst oidcWithOnePrompt = new boundary.AuthMethodOidc(\"oidc_with_one_prompt\", {\n    apiUrlPrefix: \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    clientId: \"eieio\",\n    clientSecret: \"hvo_secret_XO\",\n    description: \"My Boundary OIDC Auth Method With Prompt\",\n    issuer: \"https://sts.windows.net/TENANT_ID/\",\n    scopeId: \"global\",\n    signingAlgorithms: [\"RS256\"],\n    prompts: [\"select_account\"],\n    type: \"oidc\",\n});\nconst oidcWithMultiplePrompts = new boundary.AuthMethodOidc(\"oidc_with_multiple_prompts\", {\n    apiUrlPrefix: \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    clientId: \"eieio\",\n    clientSecret: \"hvo_secret_XO\",\n    description: \"My Boundary OIDC Auth Method With Multiple Prompts\",\n    issuer: \"https://sts.windows.net/TENANT_ID/\",\n    scopeId: \"global\",\n    signingAlgorithms: [\"RS256\"],\n    prompts: [\n        \"consent\",\n        \"select_account\",\n    ],\n    type: \"oidc\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nvault = boundary.AuthMethodOidc(\"vault\",\n    api_url_prefix=\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    client_id=\"eieio\",\n    client_secret=\"hvo_secret_XO\",\n    description=\"My Boundary OIDC Auth Method for Vault\",\n    issuer=\"https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\",\n    scope_id=\"global\",\n    signing_algorithms=[\"RS256\"],\n    type=\"oidc\")\noidc_with_one_prompt = boundary.AuthMethodOidc(\"oidc_with_one_prompt\",\n    api_url_prefix=\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    client_id=\"eieio\",\n    client_secret=\"hvo_secret_XO\",\n    description=\"My Boundary OIDC Auth Method With Prompt\",\n    issuer=\"https://sts.windows.net/TENANT_ID/\",\n    scope_id=\"global\",\n    signing_algorithms=[\"RS256\"],\n    prompts=[\"select_account\"],\n    type=\"oidc\")\noidc_with_multiple_prompts = boundary.AuthMethodOidc(\"oidc_with_multiple_prompts\",\n    api_url_prefix=\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n    client_id=\"eieio\",\n    client_secret=\"hvo_secret_XO\",\n    description=\"My Boundary OIDC Auth Method With Multiple Prompts\",\n    issuer=\"https://sts.windows.net/TENANT_ID/\",\n    scope_id=\"global\",\n    signing_algorithms=[\"RS256\"],\n    prompts=[\n        \"consent\",\n        \"select_account\",\n    ],\n    type=\"oidc\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var vault = new Boundary.AuthMethodOidc(\"vault\", new()\n    {\n        ApiUrlPrefix = \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n        ClientId = \"eieio\",\n        ClientSecret = \"hvo_secret_XO\",\n        Description = \"My Boundary OIDC Auth Method for Vault\",\n        Issuer = \"https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\",\n        ScopeId = \"global\",\n        SigningAlgorithms = new[]\n        {\n            \"RS256\",\n        },\n        Type = \"oidc\",\n    });\n\n    var oidcWithOnePrompt = new Boundary.AuthMethodOidc(\"oidc_with_one_prompt\", new()\n    {\n        ApiUrlPrefix = \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n        ClientId = \"eieio\",\n        ClientSecret = \"hvo_secret_XO\",\n        Description = \"My Boundary OIDC Auth Method With Prompt\",\n        Issuer = \"https://sts.windows.net/TENANT_ID/\",\n        ScopeId = \"global\",\n        SigningAlgorithms = new[]\n        {\n            \"RS256\",\n        },\n        Prompts = new[]\n        {\n            \"select_account\",\n        },\n        Type = \"oidc\",\n    });\n\n    var oidcWithMultiplePrompts = new Boundary.AuthMethodOidc(\"oidc_with_multiple_prompts\", new()\n    {\n        ApiUrlPrefix = \"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\",\n        ClientId = \"eieio\",\n        ClientSecret = \"hvo_secret_XO\",\n        Description = \"My Boundary OIDC Auth Method With Multiple Prompts\",\n        Issuer = \"https://sts.windows.net/TENANT_ID/\",\n        ScopeId = \"global\",\n        SigningAlgorithms = new[]\n        {\n            \"RS256\",\n        },\n        Prompts = new[]\n        {\n            \"consent\",\n            \"select_account\",\n        },\n        Type = \"oidc\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAuthMethodOidc(ctx, \"vault\", \u0026boundary.AuthMethodOidcArgs{\n\t\t\tApiUrlPrefix: pulumi.String(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\"),\n\t\t\tClientId:     pulumi.String(\"eieio\"),\n\t\t\tClientSecret: pulumi.String(\"hvo_secret_XO\"),\n\t\t\tDescription:  pulumi.String(\"My Boundary OIDC Auth Method for Vault\"),\n\t\t\tIssuer:       pulumi.String(\"https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\"),\n\t\t\tScopeId:      pulumi.String(\"global\"),\n\t\t\tSigningAlgorithms: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"RS256\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"oidc\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAuthMethodOidc(ctx, \"oidc_with_one_prompt\", \u0026boundary.AuthMethodOidcArgs{\n\t\t\tApiUrlPrefix: pulumi.String(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\"),\n\t\t\tClientId:     pulumi.String(\"eieio\"),\n\t\t\tClientSecret: pulumi.String(\"hvo_secret_XO\"),\n\t\t\tDescription:  pulumi.String(\"My Boundary OIDC Auth Method With Prompt\"),\n\t\t\tIssuer:       pulumi.String(\"https://sts.windows.net/TENANT_ID/\"),\n\t\t\tScopeId:      pulumi.String(\"global\"),\n\t\t\tSigningAlgorithms: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"RS256\"),\n\t\t\t},\n\t\t\tPrompts: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"select_account\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"oidc\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewAuthMethodOidc(ctx, \"oidc_with_multiple_prompts\", \u0026boundary.AuthMethodOidcArgs{\n\t\t\tApiUrlPrefix: pulumi.String(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\"),\n\t\t\tClientId:     pulumi.String(\"eieio\"),\n\t\t\tClientSecret: pulumi.String(\"hvo_secret_XO\"),\n\t\t\tDescription:  pulumi.String(\"My Boundary OIDC Auth Method With Multiple Prompts\"),\n\t\t\tIssuer:       pulumi.String(\"https://sts.windows.net/TENANT_ID/\"),\n\t\t\tScopeId:      pulumi.String(\"global\"),\n\t\t\tSigningAlgorithms: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"RS256\"),\n\t\t\t},\n\t\t\tPrompts: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"consent\"),\n\t\t\t\tpulumi.String(\"select_account\"),\n\t\t\t},\n\t\t\tType: pulumi.String(\"oidc\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethodOidc;\nimport com.pulumi.boundary.AuthMethodOidcArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var vault = new AuthMethodOidc(\"vault\", AuthMethodOidcArgs.builder()\n            .apiUrlPrefix(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\")\n            .clientId(\"eieio\")\n            .clientSecret(\"hvo_secret_XO\")\n            .description(\"My Boundary OIDC Auth Method for Vault\")\n            .issuer(\"https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\")\n            .scopeId(\"global\")\n            .signingAlgorithms(\"RS256\")\n            .type(\"oidc\")\n            .build());\n\n        var oidcWithOnePrompt = new AuthMethodOidc(\"oidcWithOnePrompt\", AuthMethodOidcArgs.builder()\n            .apiUrlPrefix(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\")\n            .clientId(\"eieio\")\n            .clientSecret(\"hvo_secret_XO\")\n            .description(\"My Boundary OIDC Auth Method With Prompt\")\n            .issuer(\"https://sts.windows.net/TENANT_ID/\")\n            .scopeId(\"global\")\n            .signingAlgorithms(\"RS256\")\n            .prompts(\"select_account\")\n            .type(\"oidc\")\n            .build());\n\n        var oidcWithMultiplePrompts = new AuthMethodOidc(\"oidcWithMultiplePrompts\", AuthMethodOidcArgs.builder()\n            .apiUrlPrefix(\"https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\")\n            .clientId(\"eieio\")\n            .clientSecret(\"hvo_secret_XO\")\n            .description(\"My Boundary OIDC Auth Method With Multiple Prompts\")\n            .issuer(\"https://sts.windows.net/TENANT_ID/\")\n            .scopeId(\"global\")\n            .signingAlgorithms(\"RS256\")\n            .prompts(            \n                \"consent\",\n                \"select_account\")\n            .type(\"oidc\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  vault:\n    type: boundary:AuthMethodOidc\n    properties:\n      apiUrlPrefix: https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\n      clientId: eieio\n      clientSecret: hvo_secret_XO\n      description: My Boundary OIDC Auth Method for Vault\n      issuer: https://XO-XO-XO-XO-XOXOXO.vault.hashicorp.cloud:8200/v1/identity/oidc/provider/my-provider\n      scopeId: global\n      signingAlgorithms:\n        - RS256\n      type: oidc\n  oidcWithOnePrompt:\n    type: boundary:AuthMethodOidc\n    name: oidc_with_one_prompt\n    properties:\n      apiUrlPrefix: https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\n      clientId: eieio\n      clientSecret: hvo_secret_XO\n      description: My Boundary OIDC Auth Method With Prompt\n      issuer: https://sts.windows.net/TENANT_ID/\n      scopeId: global\n      signingAlgorithms:\n        - RS256\n      prompts:\n        - select_account\n      type: oidc\n  oidcWithMultiplePrompts:\n    type: boundary:AuthMethodOidc\n    name: oidc_with_multiple_prompts\n    properties:\n      apiUrlPrefix: https://XO-XO-XO-XO-XOXOXO.boundary.hashicorp.cloud:9200\n      clientId: eieio\n      clientSecret: hvo_secret_XO\n      description: My Boundary OIDC Auth Method With Multiple Prompts\n      issuer: https://sts.windows.net/TENANT_ID/\n      scopeId: global\n      signingAlgorithms:\n        - RS256\n      prompts:\n        - consent\n        - select_account\n      type: oidc\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/authMethodOidc:AuthMethodOidc foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "accountClaimMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account claim maps for the to_claim of sub.\n"
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Audiences for which the provider responses will be allowed\n"
                },
                "apiUrlPrefix": {
                    "type": "string",
                    "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                },
                "callbackUrl": {
                    "type": "string",
                    "description": "The URL that should be provided to the IdP for callbacks.\n"
                },
                "claimsScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Claims scopes.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID assigned to this auth method from the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n",
                    "secret": true
                },
                "clientSecretHmac": {
                    "type": "string",
                    "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "disableDiscoveredConfigValidation": {
                    "type": "boolean",
                    "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                },
                "idpCaCerts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                },
                "maxAge": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "signingAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                }
            },
            "required": [
                "callbackUrl",
                "clientSecretHmac",
                "name",
                "scopeId",
                "state"
            ],
            "inputProperties": {
                "accountClaimMaps": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account claim maps for the to_claim of sub.\n",
                    "willReplaceOnChanges": true
                },
                "allowedAudiences": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Audiences for which the provider responses will be allowed\n"
                },
                "apiUrlPrefix": {
                    "type": "string",
                    "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                },
                "callbackUrl": {
                    "type": "string",
                    "description": "The URL that should be provided to the IdP for callbacks.\n"
                },
                "claimsScopes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Claims scopes.\n"
                },
                "clientId": {
                    "type": "string",
                    "description": "The client ID assigned to this auth method from the provider.\n"
                },
                "clientSecret": {
                    "type": "string",
                    "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n",
                    "secret": true
                },
                "clientSecretHmac": {
                    "type": "string",
                    "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "disableDiscoveredConfigValidation": {
                    "type": "boolean",
                    "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                },
                "idpCaCerts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                },
                "isPrimaryForScope": {
                    "type": "boolean",
                    "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.\n"
                },
                "issuer": {
                    "type": "string",
                    "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                },
                "maxAge": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "signingAlgorithms": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                },
                "state": {
                    "type": "string",
                    "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of auth method; hardcoded.\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthMethodOidc resources.\n",
                "properties": {
                    "accountClaimMaps": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Account claim maps for the to_claim of sub.\n",
                        "willReplaceOnChanges": true
                    },
                    "allowedAudiences": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Audiences for which the provider responses will be allowed\n"
                    },
                    "apiUrlPrefix": {
                        "type": "string",
                        "description": "The API prefix to use when generating callback URLs for the provider. Should be set to an address at which the provider can reach back to the controller.\n"
                    },
                    "callbackUrl": {
                        "type": "string",
                        "description": "The URL that should be provided to the IdP for callbacks.\n"
                    },
                    "claimsScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Claims scopes.\n"
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The client ID assigned to this auth method from the provider.\n"
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The secret key assigned to this auth method from the provider. Once set, only the hash will be kept and the original value can be removed from configuration.\n",
                        "secret": true
                    },
                    "clientSecretHmac": {
                        "type": "string",
                        "description": "The HMAC of the client secret returned by the Boundary controller, which is used for comparison after initial setting of the value.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "disableDiscoveredConfigValidation": {
                        "type": "boolean",
                        "description": "Disables validation logic ensuring that the OIDC provider's information from its discovery endpoint matches the information here. The validation is only performed at create or update time.\n"
                    },
                    "idpCaCerts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of CA certificates to trust when validating the IdP's token signatures.\n"
                    },
                    "isPrimaryForScope": {
                        "type": "boolean",
                        "description": "When true, makes this auth method the primary auth method for the scope in which it resides. The primary auth method for a scope means the user will be automatically created when they login using an OIDC account.\n"
                    },
                    "issuer": {
                        "type": "string",
                        "description": "The issuer corresponding to the provider, which must match the issuer field in generated tokens.\n"
                    },
                    "maxAge": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "prompts": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The prompts passed to the identity provider to determine whether to prompt the end-user for reauthentication, account selection or consent. Please note the values passed are case-sensitive. The valid values are: `none`, `login`, `consent` and `select_account`.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "signingAlgorithms": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Allowed signing algorithms for the provider's issued tokens.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "Can be one of 'inactive', 'active-private', or 'active-public'. Currently automatically set to active-public.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of auth method; hardcoded.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/authMethodPassword:AuthMethodPassword": {
            "description": "The auth method resource allows you to configure a Boundary auth_method_password.\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The resource type, hardcoded per resource\n"
                }
            },
            "required": [
                "minLoginNameLength",
                "minPasswordLength",
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The auth method description.\n"
                },
                "minLoginNameLength": {
                    "type": "integer",
                    "description": "The minimum login name length.\n"
                },
                "minPasswordLength": {
                    "type": "integer",
                    "description": "The minimum password length.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The auth method name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The resource type, hardcoded per resource\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AuthMethodPassword resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The auth method description.\n"
                    },
                    "minLoginNameLength": {
                        "type": "integer",
                        "description": "The minimum login name length.\n"
                    },
                    "minPasswordLength": {
                        "type": "integer",
                        "description": "The minimum password length.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The auth method name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The resource type, hardcoded per resource\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialJson:CredentialJson": {
            "description": "The json credential resource allows you to congiure a credential using a json object.\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialJson:CredentialJson example_json \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this json credential.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this json credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this json credential. Defaults to the resource name.\n"
                },
                "object": {
                    "type": "string",
                    "description": "The object for the this json credential. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file\n",
                    "secret": true
                },
                "objectHmac": {
                    "type": "string",
                    "description": "The object hmac.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "object",
                "objectHmac"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this json credential.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this json credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this json credential. Defaults to the resource name.\n"
                },
                "object": {
                    "type": "string",
                    "description": "The object for the this json credential. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file\n",
                    "secret": true
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "object"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialJson resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The credential store in which to save this json credential.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this json credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this json credential. Defaults to the resource name.\n"
                    },
                    "object": {
                        "type": "string",
                        "description": "The object for the this json credential. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file\n",
                        "secret": true
                    },
                    "objectHmac": {
                        "type": "string",
                        "description": "The object hmac.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialLibraryVault:CredentialLibraryVault": {
            "description": "The credential library for Vault resource allows you to configure a Boundary credential library for Vault.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.CredentialStoreVault(\"foo\", {\n    name: \"foo\",\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\nconst fooCredentialLibraryVault = new boundary.CredentialLibraryVault(\"foo\", {\n    name: \"foo\",\n    description: \"My first Vault credential library!\",\n    credentialStoreId: foo.id,\n    path: \"my/secret/foo\",\n    httpMethod: \"GET\",\n});\nconst bar = new boundary.CredentialLibraryVault(\"bar\", {\n    name: \"bar\",\n    description: \"My second Vault credential library!\",\n    credentialStoreId: foo.id,\n    path: \"my/secret/bar\",\n    httpMethod: \"POST\",\n    httpRequestBody: `{\n  \"key\": \"Value\",\n}\n`,\n});\nconst baz = new boundary.CredentialLibraryVault(\"baz\", {\n    name: \"baz\",\n    description: \"vault username password credential with mapping overrides\",\n    credentialStoreId: foo.id,\n    path: \"my/secret/baz\",\n    httpMethod: \"GET\",\n    credentialType: \"username_password\",\n    credentialMappingOverrides: {\n        password_attribute: \"alternative_password_label\",\n        username_attribute: \"alternative_username_label\",\n    },\n});\nconst quz = new boundary.CredentialLibraryVault(\"quz\", {\n    name: \"quz\",\n    description: \"vault ssh private key credential with mapping overrides\",\n    credentialStoreId: foo.id,\n    path: \"my/secret/quz\",\n    httpMethod: \"GET\",\n    credentialType: \"ssh_private_key\",\n    credentialMappingOverrides: {\n        private_key_attribute: \"alternative_key_label\",\n        private_key_passphrase_attribute: \"alternative_passphrase_label\",\n        username_attribute: \"alternative_username_label\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.CredentialStoreVault(\"foo\",\n    name=\"foo\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\nfoo_credential_library_vault = boundary.CredentialLibraryVault(\"foo\",\n    name=\"foo\",\n    description=\"My first Vault credential library!\",\n    credential_store_id=foo.id,\n    path=\"my/secret/foo\",\n    http_method=\"GET\")\nbar = boundary.CredentialLibraryVault(\"bar\",\n    name=\"bar\",\n    description=\"My second Vault credential library!\",\n    credential_store_id=foo.id,\n    path=\"my/secret/bar\",\n    http_method=\"POST\",\n    http_request_body=\"\"\"{\n  \"key\": \"Value\",\n}\n\"\"\")\nbaz = boundary.CredentialLibraryVault(\"baz\",\n    name=\"baz\",\n    description=\"vault username password credential with mapping overrides\",\n    credential_store_id=foo.id,\n    path=\"my/secret/baz\",\n    http_method=\"GET\",\n    credential_type=\"username_password\",\n    credential_mapping_overrides={\n        \"password_attribute\": \"alternative_password_label\",\n        \"username_attribute\": \"alternative_username_label\",\n    })\nquz = boundary.CredentialLibraryVault(\"quz\",\n    name=\"quz\",\n    description=\"vault ssh private key credential with mapping overrides\",\n    credential_store_id=foo.id,\n    path=\"my/secret/quz\",\n    http_method=\"GET\",\n    credential_type=\"ssh_private_key\",\n    credential_mapping_overrides={\n        \"private_key_attribute\": \"alternative_key_label\",\n        \"private_key_passphrase_attribute\": \"alternative_passphrase_label\",\n        \"username_attribute\": \"alternative_username_label\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.CredentialStoreVault(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n    var fooCredentialLibraryVault = new Boundary.CredentialLibraryVault(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault credential library!\",\n        CredentialStoreId = foo.Id,\n        Path = \"my/secret/foo\",\n        HttpMethod = \"GET\",\n    });\n\n    var bar = new Boundary.CredentialLibraryVault(\"bar\", new()\n    {\n        Name = \"bar\",\n        Description = \"My second Vault credential library!\",\n        CredentialStoreId = foo.Id,\n        Path = \"my/secret/bar\",\n        HttpMethod = \"POST\",\n        HttpRequestBody = @\"{\n  \"\"key\"\": \"\"Value\"\",\n}\n\",\n    });\n\n    var baz = new Boundary.CredentialLibraryVault(\"baz\", new()\n    {\n        Name = \"baz\",\n        Description = \"vault username password credential with mapping overrides\",\n        CredentialStoreId = foo.Id,\n        Path = \"my/secret/baz\",\n        HttpMethod = \"GET\",\n        CredentialType = \"username_password\",\n        CredentialMappingOverrides = \n        {\n            { \"password_attribute\", \"alternative_password_label\" },\n            { \"username_attribute\", \"alternative_username_label\" },\n        },\n    });\n\n    var quz = new Boundary.CredentialLibraryVault(\"quz\", new()\n    {\n        Name = \"quz\",\n        Description = \"vault ssh private key credential with mapping overrides\",\n        CredentialStoreId = foo.Id,\n        Path = \"my/secret/quz\",\n        HttpMethod = \"GET\",\n        CredentialType = \"ssh_private_key\",\n        CredentialMappingOverrides = \n        {\n            { \"private_key_attribute\", \"alternative_key_label\" },\n            { \"private_key_passphrase_attribute\", \"alternative_passphrase_label\" },\n            { \"username_attribute\", \"alternative_username_label\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewCredentialStoreVault(ctx, \"foo\", \u0026boundary.CredentialStoreVaultArgs{\n\t\t\tName:        pulumi.String(\"foo\"),\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVault(ctx, \"foo\", \u0026boundary.CredentialLibraryVaultArgs{\n\t\t\tName:              pulumi.String(\"foo\"),\n\t\t\tDescription:       pulumi.String(\"My first Vault credential library!\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/foo\"),\n\t\t\tHttpMethod:        pulumi.String(\"GET\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVault(ctx, \"bar\", \u0026boundary.CredentialLibraryVaultArgs{\n\t\t\tName:              pulumi.String(\"bar\"),\n\t\t\tDescription:       pulumi.String(\"My second Vault credential library!\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/bar\"),\n\t\t\tHttpMethod:        pulumi.String(\"POST\"),\n\t\t\tHttpRequestBody:   pulumi.String(\"{\\n  \\\"key\\\": \\\"Value\\\",\\n}\\n\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVault(ctx, \"baz\", \u0026boundary.CredentialLibraryVaultArgs{\n\t\t\tName:              pulumi.String(\"baz\"),\n\t\t\tDescription:       pulumi.String(\"vault username password credential with mapping overrides\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/baz\"),\n\t\t\tHttpMethod:        pulumi.String(\"GET\"),\n\t\t\tCredentialType:    pulumi.String(\"username_password\"),\n\t\t\tCredentialMappingOverrides: pulumi.StringMap{\n\t\t\t\t\"password_attribute\": pulumi.String(\"alternative_password_label\"),\n\t\t\t\t\"username_attribute\": pulumi.String(\"alternative_username_label\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVault(ctx, \"quz\", \u0026boundary.CredentialLibraryVaultArgs{\n\t\t\tName:              pulumi.String(\"quz\"),\n\t\t\tDescription:       pulumi.String(\"vault ssh private key credential with mapping overrides\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/quz\"),\n\t\t\tHttpMethod:        pulumi.String(\"GET\"),\n\t\t\tCredentialType:    pulumi.String(\"ssh_private_key\"),\n\t\t\tCredentialMappingOverrides: pulumi.StringMap{\n\t\t\t\t\"private_key_attribute\":            pulumi.String(\"alternative_key_label\"),\n\t\t\t\t\"private_key_passphrase_attribute\": pulumi.String(\"alternative_passphrase_label\"),\n\t\t\t\t\"username_attribute\":               pulumi.String(\"alternative_username_label\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreVault;\nimport com.pulumi.boundary.CredentialStoreVaultArgs;\nimport com.pulumi.boundary.CredentialLibraryVault;\nimport com.pulumi.boundary.CredentialLibraryVaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new CredentialStoreVault(\"foo\", CredentialStoreVaultArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n        var fooCredentialLibraryVault = new CredentialLibraryVault(\"fooCredentialLibraryVault\", CredentialLibraryVaultArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault credential library!\")\n            .credentialStoreId(foo.id())\n            .path(\"my/secret/foo\")\n            .httpMethod(\"GET\")\n            .build());\n\n        var bar = new CredentialLibraryVault(\"bar\", CredentialLibraryVaultArgs.builder()\n            .name(\"bar\")\n            .description(\"My second Vault credential library!\")\n            .credentialStoreId(foo.id())\n            .path(\"my/secret/bar\")\n            .httpMethod(\"POST\")\n            .httpRequestBody(\"\"\"\n{\n  \"key\": \"Value\",\n}\n            \"\"\")\n            .build());\n\n        var baz = new CredentialLibraryVault(\"baz\", CredentialLibraryVaultArgs.builder()\n            .name(\"baz\")\n            .description(\"vault username password credential with mapping overrides\")\n            .credentialStoreId(foo.id())\n            .path(\"my/secret/baz\")\n            .httpMethod(\"GET\")\n            .credentialType(\"username_password\")\n            .credentialMappingOverrides(Map.ofEntries(\n                Map.entry(\"password_attribute\", \"alternative_password_label\"),\n                Map.entry(\"username_attribute\", \"alternative_username_label\")\n            ))\n            .build());\n\n        var quz = new CredentialLibraryVault(\"quz\", CredentialLibraryVaultArgs.builder()\n            .name(\"quz\")\n            .description(\"vault ssh private key credential with mapping overrides\")\n            .credentialStoreId(foo.id())\n            .path(\"my/secret/quz\")\n            .httpMethod(\"GET\")\n            .credentialType(\"ssh_private_key\")\n            .credentialMappingOverrides(Map.ofEntries(\n                Map.entry(\"private_key_attribute\", \"alternative_key_label\"),\n                Map.entry(\"private_key_passphrase_attribute\", \"alternative_passphrase_label\"),\n                Map.entry(\"username_attribute\", \"alternative_username_label\")\n            ))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:CredentialStoreVault\n    properties:\n      name: foo\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      scopeId: ${project.id}\n  fooCredentialLibraryVault:\n    type: boundary:CredentialLibraryVault\n    name: foo\n    properties:\n      name: foo\n      description: My first Vault credential library!\n      credentialStoreId: ${foo.id}\n      path: my/secret/foo\n      httpMethod: GET\n  bar:\n    type: boundary:CredentialLibraryVault\n    properties:\n      name: bar\n      description: My second Vault credential library!\n      credentialStoreId: ${foo.id}\n      path: my/secret/bar\n      httpMethod: POST\n      httpRequestBody: |\n        {\n          \"key\": \"Value\",\n        }\n  baz:\n    type: boundary:CredentialLibraryVault\n    properties:\n      name: baz\n      description: vault username password credential with mapping overrides\n      credentialStoreId: ${foo.id}\n      path: my/secret/baz\n      httpMethod: GET\n      credentialType: username_password\n      credentialMappingOverrides:\n        password_attribute: alternative_password_label\n        username_attribute: alternative_username_label\n  quz:\n    type: boundary:CredentialLibraryVault\n    properties:\n      name: quz\n      description: vault ssh private key credential with mapping overrides\n      credentialStoreId: ${foo.id}\n      path: my/secret/quz\n      httpMethod: GET\n      credentialType: ssh_private_key\n      credentialMappingOverrides:\n        private_key_attribute: alternative_key_label\n        private_key_passphrase_attribute: alternative_passphrase_label\n        username_attribute: alternative_username_label\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialLibraryVault:CredentialLibraryVault foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "credentialMappingOverrides": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The credential mapping override.\n"
                },
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n"
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of credential the library generates. Cannot be updated on an existing resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                },
                "httpRequestBody": {
                    "type": "string",
                    "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "path"
            ],
            "inputProperties": {
                "credentialMappingOverrides": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "The credential mapping override.\n"
                },
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "credentialType": {
                    "type": "string",
                    "description": "The type of credential the library generates. Cannot be updated on an existing resource.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "httpMethod": {
                    "type": "string",
                    "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                },
                "httpRequestBody": {
                    "type": "string",
                    "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "path"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialLibraryVault resources.\n",
                "properties": {
                    "credentialMappingOverrides": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "The credential mapping override.\n"
                    },
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The ID of the credential store that this library belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "credentialType": {
                        "type": "string",
                        "description": "The type of credential the library generates. Cannot be updated on an existing resource.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The Vault credential library description.\n"
                    },
                    "httpMethod": {
                        "type": "string",
                        "description": "The HTTP method the library uses when requesting credentials from Vault. Defaults to 'GET'\n"
                    },
                    "httpRequestBody": {
                        "type": "string",
                        "description": "The body of the HTTP request the library sends to Vault when requesting credentials. Only valid if `http_method` is set to `POST`.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Vault credential library name. Defaults to the resource name.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path in Vault to request credentials from.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialLibraryVaultSshCertificate:CredentialLibraryVaultSshCertificate": {
            "description": "The credential library for Vault resource allows you to configure a Boundary credential library for Vault.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.CredentialStoreVault(\"foo\", {\n    name: \"foo\",\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\nconst fooCredentialLibraryVaultSshCertificate = new boundary.CredentialLibraryVaultSshCertificate(\"foo\", {\n    name: \"foo\",\n    description: \"My first Vault SSH certificate credential library!\",\n    credentialStoreId: foo.id,\n    path: \"ssh/sign/foo\",\n    username: \"foo\",\n});\nconst bar = new boundary.CredentialLibraryVaultSshCertificate(\"bar\", {\n    name: \"bar\",\n    description: \"My second Vault SSH certificate credential library!\",\n    credentialStoreId: foo.id,\n    path: \"ssh/sign/foo\",\n    username: \"foo\",\n    keyType: \"ecdsa\",\n    keyBits: 384,\n    extensions: {\n        \"permit-pty\": \"\",\n    },\n});\nconst baz = new boundary.CredentialLibraryVaultSshCertificate(\"baz\", {\n    name: \"baz\",\n    description: \"vault \",\n    credentialStoreId: foo.id,\n    path: \"ssh/issue/foo\",\n    username: \"foo\",\n    keyType: \"rsa\",\n    keyBits: 4096,\n    extensions: {\n        \"permit-pty\": \"\",\n        \"permit-X11-forwarding\": \"\",\n    },\n    criticalOptions: {\n        \"force-command\": \"/bin/some_script\",\n    },\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.CredentialStoreVault(\"foo\",\n    name=\"foo\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\nfoo_credential_library_vault_ssh_certificate = boundary.CredentialLibraryVaultSshCertificate(\"foo\",\n    name=\"foo\",\n    description=\"My first Vault SSH certificate credential library!\",\n    credential_store_id=foo.id,\n    path=\"ssh/sign/foo\",\n    username=\"foo\")\nbar = boundary.CredentialLibraryVaultSshCertificate(\"bar\",\n    name=\"bar\",\n    description=\"My second Vault SSH certificate credential library!\",\n    credential_store_id=foo.id,\n    path=\"ssh/sign/foo\",\n    username=\"foo\",\n    key_type=\"ecdsa\",\n    key_bits=384,\n    extensions={\n        \"permit-pty\": \"\",\n    })\nbaz = boundary.CredentialLibraryVaultSshCertificate(\"baz\",\n    name=\"baz\",\n    description=\"vault \",\n    credential_store_id=foo.id,\n    path=\"ssh/issue/foo\",\n    username=\"foo\",\n    key_type=\"rsa\",\n    key_bits=4096,\n    extensions={\n        \"permit-pty\": \"\",\n        \"permit-X11-forwarding\": \"\",\n    },\n    critical_options={\n        \"force-command\": \"/bin/some_script\",\n    })\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.CredentialStoreVault(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n    var fooCredentialLibraryVaultSshCertificate = new Boundary.CredentialLibraryVaultSshCertificate(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault SSH certificate credential library!\",\n        CredentialStoreId = foo.Id,\n        Path = \"ssh/sign/foo\",\n        Username = \"foo\",\n    });\n\n    var bar = new Boundary.CredentialLibraryVaultSshCertificate(\"bar\", new()\n    {\n        Name = \"bar\",\n        Description = \"My second Vault SSH certificate credential library!\",\n        CredentialStoreId = foo.Id,\n        Path = \"ssh/sign/foo\",\n        Username = \"foo\",\n        KeyType = \"ecdsa\",\n        KeyBits = 384,\n        Extensions = \n        {\n            { \"permit-pty\", \"\" },\n        },\n    });\n\n    var baz = new Boundary.CredentialLibraryVaultSshCertificate(\"baz\", new()\n    {\n        Name = \"baz\",\n        Description = \"vault \",\n        CredentialStoreId = foo.Id,\n        Path = \"ssh/issue/foo\",\n        Username = \"foo\",\n        KeyType = \"rsa\",\n        KeyBits = 4096,\n        Extensions = \n        {\n            { \"permit-pty\", \"\" },\n            { \"permit-X11-forwarding\", \"\" },\n        },\n        CriticalOptions = \n        {\n            { \"force-command\", \"/bin/some_script\" },\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewCredentialStoreVault(ctx, \"foo\", \u0026boundary.CredentialStoreVaultArgs{\n\t\t\tName:        pulumi.String(\"foo\"),\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVaultSshCertificate(ctx, \"foo\", \u0026boundary.CredentialLibraryVaultSshCertificateArgs{\n\t\t\tName:              pulumi.String(\"foo\"),\n\t\t\tDescription:       pulumi.String(\"My first Vault SSH certificate credential library!\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"ssh/sign/foo\"),\n\t\t\tUsername:          pulumi.String(\"foo\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVaultSshCertificate(ctx, \"bar\", \u0026boundary.CredentialLibraryVaultSshCertificateArgs{\n\t\t\tName:              pulumi.String(\"bar\"),\n\t\t\tDescription:       pulumi.String(\"My second Vault SSH certificate credential library!\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"ssh/sign/foo\"),\n\t\t\tUsername:          pulumi.String(\"foo\"),\n\t\t\tKeyType:           pulumi.String(\"ecdsa\"),\n\t\t\tKeyBits:           pulumi.Int(384),\n\t\t\tExtensions: pulumi.StringMap{\n\t\t\t\t\"permit-pty\": pulumi.String(\"\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialLibraryVaultSshCertificate(ctx, \"baz\", \u0026boundary.CredentialLibraryVaultSshCertificateArgs{\n\t\t\tName:              pulumi.String(\"baz\"),\n\t\t\tDescription:       pulumi.String(\"vault \"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"ssh/issue/foo\"),\n\t\t\tUsername:          pulumi.String(\"foo\"),\n\t\t\tKeyType:           pulumi.String(\"rsa\"),\n\t\t\tKeyBits:           pulumi.Int(4096),\n\t\t\tExtensions: pulumi.StringMap{\n\t\t\t\t\"permit-pty\":            pulumi.String(\"\"),\n\t\t\t\t\"permit-X11-forwarding\": pulumi.String(\"\"),\n\t\t\t},\n\t\t\tCriticalOptions: pulumi.StringMap{\n\t\t\t\t\"force-command\": pulumi.String(\"/bin/some_script\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreVault;\nimport com.pulumi.boundary.CredentialStoreVaultArgs;\nimport com.pulumi.boundary.CredentialLibraryVaultSshCertificate;\nimport com.pulumi.boundary.CredentialLibraryVaultSshCertificateArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new CredentialStoreVault(\"foo\", CredentialStoreVaultArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n        var fooCredentialLibraryVaultSshCertificate = new CredentialLibraryVaultSshCertificate(\"fooCredentialLibraryVaultSshCertificate\", CredentialLibraryVaultSshCertificateArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault SSH certificate credential library!\")\n            .credentialStoreId(foo.id())\n            .path(\"ssh/sign/foo\")\n            .username(\"foo\")\n            .build());\n\n        var bar = new CredentialLibraryVaultSshCertificate(\"bar\", CredentialLibraryVaultSshCertificateArgs.builder()\n            .name(\"bar\")\n            .description(\"My second Vault SSH certificate credential library!\")\n            .credentialStoreId(foo.id())\n            .path(\"ssh/sign/foo\")\n            .username(\"foo\")\n            .keyType(\"ecdsa\")\n            .keyBits(384)\n            .extensions(Map.of(\"permit-pty\", \"\"))\n            .build());\n\n        var baz = new CredentialLibraryVaultSshCertificate(\"baz\", CredentialLibraryVaultSshCertificateArgs.builder()\n            .name(\"baz\")\n            .description(\"vault \")\n            .credentialStoreId(foo.id())\n            .path(\"ssh/issue/foo\")\n            .username(\"foo\")\n            .keyType(\"rsa\")\n            .keyBits(4096)\n            .extensions(Map.ofEntries(\n                Map.entry(\"permit-pty\", \"\"),\n                Map.entry(\"permit-X11-forwarding\", \"\")\n            ))\n            .criticalOptions(Map.of(\"force-command\", \"/bin/some_script\"))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:CredentialStoreVault\n    properties:\n      name: foo\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      scopeId: ${project.id}\n  fooCredentialLibraryVaultSshCertificate:\n    type: boundary:CredentialLibraryVaultSshCertificate\n    name: foo\n    properties:\n      name: foo\n      description: My first Vault SSH certificate credential library!\n      credentialStoreId: ${foo.id}\n      path: ssh/sign/foo\n      username: foo\n  bar:\n    type: boundary:CredentialLibraryVaultSshCertificate\n    properties:\n      name: bar\n      description: My second Vault SSH certificate credential library!\n      credentialStoreId: ${foo.id}\n      path: ssh/sign/foo\n      username: foo\n      keyType: ecdsa\n      keyBits: 384\n      extensions:\n        permit-pty: \"\"\n  baz:\n    type: boundary:CredentialLibraryVaultSshCertificate\n    properties:\n      name: baz\n      description: 'vault '\n      credentialStoreId: ${foo.id}\n      path: ssh/issue/foo\n      username: foo\n      keyType: rsa\n      keyBits: 4096\n      extensions:\n        permit-pty: \"\"\n        permit-X11-forwarding: \"\"\n      criticalOptions:\n        force-command: /bin/some_script\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialLibraryVaultSshCertificate:CredentialLibraryVaultSshCertificate foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "additionalValidPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Principals to be signed as \"valid_principles\" in addition to username.\n"
                },
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n"
                },
                "criticalOptions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies a map of the critical options that the certificate should be signed for.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies a map of the extensions that the certificate should be signed for.\n"
                },
                "keyBits": {
                    "type": "integer",
                    "description": "Specifies the number of bits to use for the generated keys.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Specifies the key id a certificate should have.\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "Specifies the desired key type; must be ed25519, ecdsa, or rsa.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                },
                "ttl": {
                    "type": "string",
                    "description": "Specifies the requested time to live for a certificate returned from the library.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use with the certificate returned by the library.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "path",
                "username"
            ],
            "inputProperties": {
                "additionalValidPrincipals": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Principals to be signed as \"valid_principles\" in addition to username.\n"
                },
                "credentialStoreId": {
                    "type": "string",
                    "description": "The ID of the credential store that this library belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "criticalOptions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies a map of the critical options that the certificate should be signed for.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential library description.\n"
                },
                "extensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Specifies a map of the extensions that the certificate should be signed for.\n"
                },
                "keyBits": {
                    "type": "integer",
                    "description": "Specifies the number of bits to use for the generated keys.\n"
                },
                "keyId": {
                    "type": "string",
                    "description": "Specifies the key id a certificate should have.\n"
                },
                "keyType": {
                    "type": "string",
                    "description": "Specifies the desired key type; must be ed25519, ecdsa, or rsa.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential library name. Defaults to the resource name.\n"
                },
                "path": {
                    "type": "string",
                    "description": "The path in Vault to request credentials from.\n"
                },
                "ttl": {
                    "type": "string",
                    "description": "Specifies the requested time to live for a certificate returned from the library.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username to use with the certificate returned by the library.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "path",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialLibraryVaultSshCertificate resources.\n",
                "properties": {
                    "additionalValidPrincipals": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Principals to be signed as \"valid_principles\" in addition to username.\n"
                    },
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The ID of the credential store that this library belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "criticalOptions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifies a map of the critical options that the certificate should be signed for.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Vault credential library description.\n"
                    },
                    "extensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Specifies a map of the extensions that the certificate should be signed for.\n"
                    },
                    "keyBits": {
                        "type": "integer",
                        "description": "Specifies the number of bits to use for the generated keys.\n"
                    },
                    "keyId": {
                        "type": "string",
                        "description": "Specifies the key id a certificate should have.\n"
                    },
                    "keyType": {
                        "type": "string",
                        "description": "Specifies the desired key type; must be ed25519, ecdsa, or rsa.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Vault credential library name. Defaults to the resource name.\n"
                    },
                    "path": {
                        "type": "string",
                        "description": "The path in Vault to request credentials from.\n"
                    },
                    "ttl": {
                        "type": "string",
                        "description": "Specifies the requested time to live for a certificate returned from the library.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username to use with the certificate returned by the library.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialSshPrivateKey:CredentialSshPrivateKey": {
            "description": "The SSH private key credential resource allows you to configure a credential using a username, private key and optional passphrase.\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialSshPrivateKey:CredentialSshPrivateKey example_ssh_private_key \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "ID of the credential store this credential belongs to.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of the credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credential. Defaults to the resource name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key associated with the credential.\n",
                    "secret": true
                },
                "privateKeyHmac": {
                    "type": "string",
                    "description": "The private key hmac.\n"
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "description": "The passphrase of the private key associated with the credential.\n",
                    "secret": true
                },
                "privateKeyPassphraseHmac": {
                    "type": "string",
                    "description": "The private key passphrase hmac.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "privateKey",
                "privateKeyHmac",
                "privateKeyPassphraseHmac",
                "username"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "ID of the credential store this credential belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of the credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of the credential. Defaults to the resource name.\n"
                },
                "privateKey": {
                    "type": "string",
                    "description": "The private key associated with the credential.\n",
                    "secret": true
                },
                "privateKeyPassphrase": {
                    "type": "string",
                    "description": "The passphrase of the private key associated with the credential.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username associated with the credential.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "privateKey",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialSshPrivateKey resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "ID of the credential store this credential belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of the credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the credential. Defaults to the resource name.\n"
                    },
                    "privateKey": {
                        "type": "string",
                        "description": "The private key associated with the credential.\n",
                        "secret": true
                    },
                    "privateKeyHmac": {
                        "type": "string",
                        "description": "The private key hmac.\n"
                    },
                    "privateKeyPassphrase": {
                        "type": "string",
                        "description": "The passphrase of the private key associated with the credential.\n",
                        "secret": true
                    },
                    "privateKeyPassphraseHmac": {
                        "type": "string",
                        "description": "The private key passphrase hmac.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username associated with the credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialStoreStatic:CredentialStoreStatic": {
            "description": "The static credential store resource allows you to configure a Boundary static credential store.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.CredentialStoreStatic(\"example\", {\n    name: \"example_static_credential_store\",\n    description: \"My first static credential store!\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.CredentialStoreStatic(\"example\",\n    name=\"example_static_credential_store\",\n    description=\"My first static credential store!\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.CredentialStoreStatic(\"example\", new()\n    {\n        Name = \"example_static_credential_store\",\n        Description = \"My first static credential store!\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialStoreStatic(ctx, \"example\", \u0026boundary.CredentialStoreStaticArgs{\n\t\t\tName:        pulumi.String(\"example_static_credential_store\"),\n\t\t\tDescription: pulumi.String(\"My first static credential store!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreStatic;\nimport com.pulumi.boundary.CredentialStoreStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new CredentialStoreStatic(\"example\", CredentialStoreStaticArgs.builder()\n            .name(\"example_static_credential_store\")\n            .description(\"My first static credential store!\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: global scope\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:CredentialStoreStatic\n    properties:\n      name: example_static_credential_store\n      description: My first static credential store!\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialStoreStatic:CredentialStoreStatic example_static_credential_store \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The static credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The static credential store name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The static credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The static credential store name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialStoreStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The static credential store description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The static credential store name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this credential store.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialStoreVault:CredentialStoreVault": {
            "description": "The credential store for Vault resource allows you to configure a Boundary credential store for Vault.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.CredentialStoreVault(\"example\", {\n    name: \"foo\",\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.CredentialStoreVault(\"example\",\n    name=\"foo\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.CredentialStoreVault(\"example\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialStoreVault(ctx, \"example\", \u0026boundary.CredentialStoreVaultArgs{\n\t\t\tName:        pulumi.String(\"foo\"),\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreVault;\nimport com.pulumi.boundary.CredentialStoreVaultArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new CredentialStoreVault(\"example\", CredentialStoreVaultArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:CredentialStoreVault\n    properties:\n      name: foo\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialStoreVault:CredentialStoreVault foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n",
                    "secret": true
                },
                "clientCertificateKeyHmac": {
                    "type": "string",
                    "description": "The Vault client certificate key hmac.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential store name. Defaults to the resource name.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace within Vault to use.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n"
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Whether or not to skip TLS verification.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A token used for accessing Vault.\n",
                    "secret": true
                },
                "tokenHmac": {
                    "type": "string",
                    "description": "The Vault token hmac.\n"
                },
                "workerFilter": {
                    "type": "string",
                    "description": "HCP Only. A filter used to control which PKI workers can handle Vault requests. This allows the use of private Vault instances with Boundary.\n"
                }
            },
            "required": [
                "address",
                "clientCertificateKeyHmac",
                "name",
                "scopeId",
                "token",
                "tokenHmac"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                },
                "caCert": {
                    "type": "string",
                    "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                },
                "clientCertificate": {
                    "type": "string",
                    "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                },
                "clientCertificateKey": {
                    "type": "string",
                    "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n",
                    "secret": true
                },
                "description": {
                    "type": "string",
                    "description": "The Vault credential store description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The Vault credential store name. Defaults to the resource name.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The namespace within Vault to use.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this credential store.\n",
                    "willReplaceOnChanges": true
                },
                "tlsServerName": {
                    "type": "string",
                    "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                },
                "tlsSkipVerify": {
                    "type": "boolean",
                    "description": "Whether or not to skip TLS verification.\n"
                },
                "token": {
                    "type": "string",
                    "description": "A token used for accessing Vault.\n",
                    "secret": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "HCP Only. A filter used to control which PKI workers can handle Vault requests. This allows the use of private Vault instances with Boundary.\n"
                }
            },
            "requiredInputs": [
                "address",
                "scopeId",
                "token"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialStoreVault resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The address to Vault server. This should be a complete URL such as 'https://127.0.0.1:8200'\n"
                    },
                    "caCert": {
                        "type": "string",
                        "description": "A PEM-encoded CA certificate to verify the Vault server's TLS certificate.\n"
                    },
                    "clientCertificate": {
                        "type": "string",
                        "description": "A PEM-encoded client certificate to use for TLS authentication to the Vault server.\n"
                    },
                    "clientCertificateKey": {
                        "type": "string",
                        "description": "A PEM-encoded private key matching the client certificate from 'client_certificate'.\n",
                        "secret": true
                    },
                    "clientCertificateKeyHmac": {
                        "type": "string",
                        "description": "The Vault client certificate key hmac.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The Vault credential store description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The Vault credential store name. Defaults to the resource name.\n"
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The namespace within Vault to use.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this credential store.\n",
                        "willReplaceOnChanges": true
                    },
                    "tlsServerName": {
                        "type": "string",
                        "description": "Name to use as the SNI host when connecting to Vault via TLS.\n"
                    },
                    "tlsSkipVerify": {
                        "type": "boolean",
                        "description": "Whether or not to skip TLS verification.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "A token used for accessing Vault.\n",
                        "secret": true
                    },
                    "tokenHmac": {
                        "type": "string",
                        "description": "The Vault token hmac.\n"
                    },
                    "workerFilter": {
                        "type": "string",
                        "description": "HCP Only. A filter used to control which PKI workers can handle Vault requests. This allows the use of private Vault instances with Boundary.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/credentialUsernamePassword:CredentialUsernamePassword": {
            "description": "The username/password credential resource allows you to configure a credential using a username and password pair.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"global scope\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.CredentialStoreStatic(\"example\", {\n    name: \"example_static_credential_store\",\n    description: \"My first static credential store!\",\n    scopeId: project.id,\n});\nconst exampleCredentialUsernamePassword = new boundary.CredentialUsernamePassword(\"example\", {\n    name: \"example_username_password\",\n    description: \"My first username password credential!\",\n    credentialStoreId: example.id,\n    username: \"my-username\",\n    password: \"my-password\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"global scope\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.CredentialStoreStatic(\"example\",\n    name=\"example_static_credential_store\",\n    description=\"My first static credential store!\",\n    scope_id=project.id)\nexample_credential_username_password = boundary.CredentialUsernamePassword(\"example\",\n    name=\"example_username_password\",\n    description=\"My first username password credential!\",\n    credential_store_id=example.id,\n    username=\"my-username\",\n    password=\"my-password\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"global scope\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.CredentialStoreStatic(\"example\", new()\n    {\n        Name = \"example_static_credential_store\",\n        Description = \"My first static credential store!\",\n        ScopeId = project.Id,\n    });\n\n    var exampleCredentialUsernamePassword = new Boundary.CredentialUsernamePassword(\"example\", new()\n    {\n        Name = \"example_username_password\",\n        Description = \"My first username password credential!\",\n        CredentialStoreId = example.Id,\n        Username = \"my-username\",\n        Password = \"my-password\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"global scope\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample, err := boundary.NewCredentialStoreStatic(ctx, \"example\", \u0026boundary.CredentialStoreStaticArgs{\n\t\t\tName:        pulumi.String(\"example_static_credential_store\"),\n\t\t\tDescription: pulumi.String(\"My first static credential store!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewCredentialUsernamePassword(ctx, \"example\", \u0026boundary.CredentialUsernamePasswordArgs{\n\t\t\tName:              pulumi.String(\"example_username_password\"),\n\t\t\tDescription:       pulumi.String(\"My first username password credential!\"),\n\t\t\tCredentialStoreId: example.ID(),\n\t\t\tUsername:          pulumi.String(\"my-username\"),\n\t\t\tPassword:          pulumi.String(\"my-password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreStatic;\nimport com.pulumi.boundary.CredentialStoreStaticArgs;\nimport com.pulumi.boundary.CredentialUsernamePassword;\nimport com.pulumi.boundary.CredentialUsernamePasswordArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"global scope\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new CredentialStoreStatic(\"example\", CredentialStoreStaticArgs.builder()\n            .name(\"example_static_credential_store\")\n            .description(\"My first static credential store!\")\n            .scopeId(project.id())\n            .build());\n\n        var exampleCredentialUsernamePassword = new CredentialUsernamePassword(\"exampleCredentialUsernamePassword\", CredentialUsernamePasswordArgs.builder()\n            .name(\"example_username_password\")\n            .description(\"My first username password credential!\")\n            .credentialStoreId(example.id())\n            .username(\"my-username\")\n            .password(\"my-password\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: global scope\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:CredentialStoreStatic\n    properties:\n      name: example_static_credential_store\n      description: My first static credential store!\n      scopeId: ${project.id}\n  exampleCredentialUsernamePassword:\n    type: boundary:CredentialUsernamePassword\n    name: example\n    properties:\n      name: example_username_password\n      description: My first username password credential!\n      credentialStoreId: ${example.id}\n      username: my-username\n      password: my-password\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/credentialUsernamePassword:CredentialUsernamePassword example_username_password \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this username/password credential.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description of this username/password credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this username/password credential. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of this username/password credential.\n",
                    "secret": true
                },
                "passwordHmac": {
                    "type": "string",
                    "description": "The password hmac.\n"
                },
                "username": {
                    "type": "string",
                    "description": "The username of this username/password credential.\n"
                }
            },
            "required": [
                "credentialStoreId",
                "name",
                "password",
                "passwordHmac",
                "username"
            ],
            "inputProperties": {
                "credentialStoreId": {
                    "type": "string",
                    "description": "The credential store in which to save this username/password credential.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The description of this username/password credential.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name of this username/password credential. Defaults to the resource name.\n"
                },
                "password": {
                    "type": "string",
                    "description": "The password of this username/password credential.\n",
                    "secret": true
                },
                "username": {
                    "type": "string",
                    "description": "The username of this username/password credential.\n"
                }
            },
            "requiredInputs": [
                "credentialStoreId",
                "password",
                "username"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CredentialUsernamePassword resources.\n",
                "properties": {
                    "credentialStoreId": {
                        "type": "string",
                        "description": "The credential store in which to save this username/password credential.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The description of this username/password credential.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of this username/password credential. Defaults to the resource name.\n"
                    },
                    "password": {
                        "type": "string",
                        "description": "The password of this username/password credential.\n",
                        "secret": true
                    },
                    "passwordHmac": {
                        "type": "string",
                        "description": "The password hmac.\n"
                    },
                    "username": {
                        "type": "string",
                        "description": "The username of this username/password credential.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/group:Group": {
            "description": "The group resource allows you to configure a Boundary group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst foo = new boundary.User(\"foo\", {\n    description: \"foo user\",\n    scopeId: org.id,\n});\nconst example = new boundary.Group(\"example\", {\n    name: \"My group\",\n    description: \"My first group!\",\n    memberIds: [foo.id],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nfoo = boundary.User(\"foo\",\n    description=\"foo user\",\n    scope_id=org.id)\nexample = boundary.Group(\"example\",\n    name=\"My group\",\n    description=\"My first group!\",\n    member_ids=[foo.id],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var foo = new Boundary.User(\"foo\", new()\n    {\n        Description = \"foo user\",\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.Group(\"example\", new()\n    {\n        Name = \"My group\",\n        Description = \"My first group!\",\n        MemberIds = new[]\n        {\n            foo.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewUser(ctx, \"foo\", \u0026boundary.UserArgs{\n\t\t\tDescription: pulumi.String(\"foo user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewGroup(ctx, \"example\", \u0026boundary.GroupArgs{\n\t\t\tName:        pulumi.String(\"My group\"),\n\t\t\tDescription: pulumi.String(\"My first group!\"),\n\t\t\tMemberIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport com.pulumi.boundary.Group;\nimport com.pulumi.boundary.GroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var foo = new User(\"foo\", UserArgs.builder()\n            .description(\"foo user\")\n            .scopeId(org.id())\n            .build());\n\n        var example = new Group(\"example\", GroupArgs.builder()\n            .name(\"My group\")\n            .description(\"My first group!\")\n            .memberIds(foo.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  foo:\n    type: boundary:User\n    properties:\n      description: foo user\n      scopeId: ${org.id}\n  example:\n    type: boundary:Group\n    properties:\n      name: My group\n      description: My first group!\n      memberIds:\n        - ${foo.id}\n      scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nUsage for project-specific group:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.User(\"foo\", {\n    description: \"foo user\",\n    scopeId: org.id,\n});\nconst example = new boundary.Group(\"example\", {\n    name: \"My group\",\n    description: \"My first group!\",\n    memberIds: [foo.id],\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.User(\"foo\",\n    description=\"foo user\",\n    scope_id=org.id)\nexample = boundary.Group(\"example\",\n    name=\"My group\",\n    description=\"My first group!\",\n    member_ids=[foo.id],\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.User(\"foo\", new()\n    {\n        Description = \"foo user\",\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.Group(\"example\", new()\n    {\n        Name = \"My group\",\n        Description = \"My first group!\",\n        MemberIds = new[]\n        {\n            foo.Id,\n        },\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewUser(ctx, \"foo\", \u0026boundary.UserArgs{\n\t\t\tDescription: pulumi.String(\"foo user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewGroup(ctx, \"example\", \u0026boundary.GroupArgs{\n\t\t\tName:        pulumi.String(\"My group\"),\n\t\t\tDescription: pulumi.String(\"My first group!\"),\n\t\t\tMemberIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t},\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport com.pulumi.boundary.Group;\nimport com.pulumi.boundary.GroupArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new User(\"foo\", UserArgs.builder()\n            .description(\"foo user\")\n            .scopeId(org.id())\n            .build());\n\n        var example = new Group(\"example\", GroupArgs.builder()\n            .name(\"My group\")\n            .description(\"My first group!\")\n            .memberIds(foo.id())\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:User\n    properties:\n      description: foo user\n      scopeId: ${org.id}\n  example:\n    type: boundary:Group\n    properties:\n      name: My group\n      description: My first group!\n      memberIds:\n        - ${foo.id}\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/group:Group foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "memberIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource IDs for group members, these are most likely boundary users.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The group description.\n"
                },
                "memberIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Resource IDs for group members, these are most likely boundary users.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The group name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Group resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The group description.\n"
                    },
                    "memberIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Resource IDs for group members, these are most likely boundary users.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The group name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/host:Host": {
            "description": "Deprecated: use `boundary.HostStatic` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst static = new boundary.HostCatalog(\"static\", {\n    name: \"My catalog\",\n    description: \"My first host catalog!\",\n    type: \"static\",\n    scopeId: project.id,\n});\nconst example = new boundary.Host(\"example\", {\n    type: \"static\",\n    name: \"example_host\",\n    description: \"My first host!\",\n    address: \"10.0.0.1\",\n    hostCatalogId: static.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nstatic = boundary.HostCatalog(\"static\",\n    name=\"My catalog\",\n    description=\"My first host catalog!\",\n    type=\"static\",\n    scope_id=project.id)\nexample = boundary.Host(\"example\",\n    type=\"static\",\n    name=\"example_host\",\n    description=\"My first host!\",\n    address=\"10.0.0.1\",\n    host_catalog_id=static.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var @static = new Boundary.HostCatalog(\"static\", new()\n    {\n        Name = \"My catalog\",\n        Description = \"My first host catalog!\",\n        Type = \"static\",\n        ScopeId = project.Id,\n    });\n\n    var example = new Boundary.Host(\"example\", new()\n    {\n        Type = \"static\",\n        Name = \"example_host\",\n        Description = \"My first host!\",\n        Address = \"10.0.0.1\",\n        HostCatalogId = @static.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstatic, err := boundary.NewHostCatalog(ctx, \"static\", \u0026boundary.HostCatalogArgs{\n\t\t\tName:        pulumi.String(\"My catalog\"),\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tType:        pulumi.String(\"static\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHost(ctx, \"example\", \u0026boundary.HostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"example_host\"),\n\t\t\tDescription:   pulumi.String(\"My first host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t\tHostCatalogId: static.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalog;\nimport com.pulumi.boundary.HostCatalogArgs;\nimport com.pulumi.boundary.Host;\nimport com.pulumi.boundary.HostArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var static_ = new HostCatalog(\"static\", HostCatalogArgs.builder()\n            .name(\"My catalog\")\n            .description(\"My first host catalog!\")\n            .type(\"static\")\n            .scopeId(project.id())\n            .build());\n\n        var example = new Host(\"example\", HostArgs.builder()\n            .type(\"static\")\n            .name(\"example_host\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(static_.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  static:\n    type: boundary:HostCatalog\n    properties:\n      name: My catalog\n      description: My first host catalog!\n      type: static\n      scopeId: ${project.id}\n  example:\n    type: boundary:Host\n    properties:\n      type: static\n      name: example_host\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${static.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/host:Host foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name",
                "type"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Host resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostCatalog:HostCatalog": {
            "description": "Deprecated: use `boundary.HostCatalogStatic` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.HostCatalog(\"example\", {\n    name: \"My catalog\",\n    description: \"My first host catalog!\",\n    type: \"Static\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.HostCatalog(\"example\",\n    name=\"My catalog\",\n    description=\"My first host catalog!\",\n    type=\"Static\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.HostCatalog(\"example\", new()\n    {\n        Name = \"My catalog\",\n        Description = \"My first host catalog!\",\n        Type = \"Static\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHostCatalog(ctx, \"example\", \u0026boundary.HostCatalogArgs{\n\t\t\tName:        pulumi.String(\"My catalog\"),\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tType:        pulumi.String(\"Static\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalog;\nimport com.pulumi.boundary.HostCatalogArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new HostCatalog(\"example\", HostCatalogArgs.builder()\n            .name(\"My catalog\")\n            .description(\"My first host catalog!\")\n            .type(\"Static\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:HostCatalog\n    properties:\n      name: My catalog\n      description: My first host catalog!\n      type: Static\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostCatalog:HostCatalog foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The host catalog type. Only `static` is supported.\n"
                }
            },
            "required": [
                "name",
                "scopeId",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The host catalog type. Only `static` is supported.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostCatalog resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The host catalog type. Only `static` is supported.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostCatalogPlugin:HostCatalogPlugin": {
            "description": "The host catalog resource allows you to configure a Boundary plugin-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\n// For more information about the aws plugin, please visit here:\n// https://github.com/hashicorp/boundary-plugin-host-aws\n//\n// For more information about aws users, please visit here:\n// https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\nconst awsExample = new boundary.HostCatalogPlugin(\"aws_example\", {\n    name: \"My aws catalog\",\n    description: \"My first host catalog!\",\n    scopeId: project.id,\n    pluginName: \"aws\",\n    attributesJson: JSON.stringify({\n        region: \"us-east-1\",\n    }),\n    secretsJson: JSON.stringify({\n        access_key_id: \"aws_access_key_id_value\",\n        secret_access_key: \"aws_secret_access_key_value\",\n    }),\n});\n// For more information about the azure plugin, please visit here:\n// https://github.com/hashicorp/boundary-plugin-host-azure\n//\n// For more information about azure ad applications, please visit here:\n// https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\nconst azureExample = new boundary.HostCatalogPlugin(\"azure_example\", {\n    name: \"My azure catalog\",\n    description: \"My second host catalog!\",\n    scopeId: project.id,\n    pluginName: \"azure\",\n    attributesJson: JSON.stringify({\n        disable_credential_rotation: \"true\",\n        tenant_id: \"ARM_TENANT_ID\",\n        subscription_id: \"ARM_SUBSCRIPTION_ID\",\n        client_id: \"ARM_CLIENT_ID\",\n    }),\n    secretsJson: JSON.stringify({\n        secret_value: \"ARM_CLIENT_SECRET\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\n# For more information about the aws plugin, please visit here:\n# https://github.com/hashicorp/boundary-plugin-host-aws\n#\n# For more information about aws users, please visit here:\n# https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\naws_example = boundary.HostCatalogPlugin(\"aws_example\",\n    name=\"My aws catalog\",\n    description=\"My first host catalog!\",\n    scope_id=project.id,\n    plugin_name=\"aws\",\n    attributes_json=json.dumps({\n        \"region\": \"us-east-1\",\n    }),\n    secrets_json=json.dumps({\n        \"access_key_id\": \"aws_access_key_id_value\",\n        \"secret_access_key\": \"aws_secret_access_key_value\",\n    }))\n# For more information about the azure plugin, please visit here:\n# https://github.com/hashicorp/boundary-plugin-host-azure\n#\n# For more information about azure ad applications, please visit here:\n# https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\nazure_example = boundary.HostCatalogPlugin(\"azure_example\",\n    name=\"My azure catalog\",\n    description=\"My second host catalog!\",\n    scope_id=project.id,\n    plugin_name=\"azure\",\n    attributes_json=json.dumps({\n        \"disable_credential_rotation\": \"true\",\n        \"tenant_id\": \"ARM_TENANT_ID\",\n        \"subscription_id\": \"ARM_SUBSCRIPTION_ID\",\n        \"client_id\": \"ARM_CLIENT_ID\",\n    }),\n    secrets_json=json.dumps({\n        \"secret_value\": \"ARM_CLIENT_SECRET\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    // For more information about the aws plugin, please visit here:\n    // https://github.com/hashicorp/boundary-plugin-host-aws\n    //\n    // For more information about aws users, please visit here:\n    // https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n    var awsExample = new Boundary.HostCatalogPlugin(\"aws_example\", new()\n    {\n        Name = \"My aws catalog\",\n        Description = \"My first host catalog!\",\n        ScopeId = project.Id,\n        PluginName = \"aws\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"region\"] = \"us-east-1\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"access_key_id\"] = \"aws_access_key_id_value\",\n            [\"secret_access_key\"] = \"aws_secret_access_key_value\",\n        }),\n    });\n\n    // For more information about the azure plugin, please visit here:\n    // https://github.com/hashicorp/boundary-plugin-host-azure\n    //\n    // For more information about azure ad applications, please visit here:\n    // https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n    var azureExample = new Boundary.HostCatalogPlugin(\"azure_example\", new()\n    {\n        Name = \"My azure catalog\",\n        Description = \"My second host catalog!\",\n        ScopeId = project.Id,\n        PluginName = \"azure\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"disable_credential_rotation\"] = \"true\",\n            [\"tenant_id\"] = \"ARM_TENANT_ID\",\n            [\"subscription_id\"] = \"ARM_SUBSCRIPTION_ID\",\n            [\"client_id\"] = \"ARM_CLIENT_ID\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"secret_value\"] = \"ARM_CLIENT_SECRET\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"region\": \"us-east-1\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"access_key_id\":     \"aws_access_key_id_value\",\n\t\t\t\"secret_access_key\": \"aws_secret_access_key_value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t// For more information about the aws plugin, please visit here:\n\t\t// https://github.com/hashicorp/boundary-plugin-host-aws\n\t\t//\n\t\t// For more information about aws users, please visit here:\n\t\t// https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n\t\t_, err = boundary.NewHostCatalogPlugin(ctx, \"aws_example\", \u0026boundary.HostCatalogPluginArgs{\n\t\t\tName:           pulumi.String(\"My aws catalog\"),\n\t\t\tDescription:    pulumi.String(\"My first host catalog!\"),\n\t\t\tScopeId:        project.ID(),\n\t\t\tPluginName:     pulumi.String(\"aws\"),\n\t\t\tAttributesJson: pulumi.String(json0),\n\t\t\tSecretsJson:    pulumi.String(json1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"disable_credential_rotation\": \"true\",\n\t\t\t\"tenant_id\":                   \"ARM_TENANT_ID\",\n\t\t\t\"subscription_id\":             \"ARM_SUBSCRIPTION_ID\",\n\t\t\t\"client_id\":                   \"ARM_CLIENT_ID\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\ttmpJSON3, err := json.Marshal(map[string]interface{}{\n\t\t\t\"secret_value\": \"ARM_CLIENT_SECRET\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson3 := string(tmpJSON3)\n\t\t// For more information about the azure plugin, please visit here:\n\t\t// https://github.com/hashicorp/boundary-plugin-host-azure\n\t\t//\n\t\t// For more information about azure ad applications, please visit here:\n\t\t// https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n\t\t_, err = boundary.NewHostCatalogPlugin(ctx, \"azure_example\", \u0026boundary.HostCatalogPluginArgs{\n\t\t\tName:           pulumi.String(\"My azure catalog\"),\n\t\t\tDescription:    pulumi.String(\"My second host catalog!\"),\n\t\t\tScopeId:        project.ID(),\n\t\t\tPluginName:     pulumi.String(\"azure\"),\n\t\t\tAttributesJson: pulumi.String(json2),\n\t\t\tSecretsJson:    pulumi.String(json3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogPlugin;\nimport com.pulumi.boundary.HostCatalogPluginArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        // For more information about the aws plugin, please visit here:\n        // https://github.com/hashicorp/boundary-plugin-host-aws\n        //\n        // For more information about aws users, please visit here:\n        // https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n        var awsExample = new HostCatalogPlugin(\"awsExample\", HostCatalogPluginArgs.builder()\n            .name(\"My aws catalog\")\n            .description(\"My first host catalog!\")\n            .scopeId(project.id())\n            .pluginName(\"aws\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"us-east-1\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"access_key_id\", \"aws_access_key_id_value\"),\n                    jsonProperty(\"secret_access_key\", \"aws_secret_access_key_value\")\n                )))\n            .build());\n\n        // For more information about the azure plugin, please visit here:\n        // https://github.com/hashicorp/boundary-plugin-host-azure\n        //\n        // For more information about azure ad applications, please visit here:\n        // https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n        var azureExample = new HostCatalogPlugin(\"azureExample\", HostCatalogPluginArgs.builder()\n            .name(\"My azure catalog\")\n            .description(\"My second host catalog!\")\n            .scopeId(project.id())\n            .pluginName(\"azure\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"disable_credential_rotation\", \"true\"),\n                    jsonProperty(\"tenant_id\", \"ARM_TENANT_ID\"),\n                    jsonProperty(\"subscription_id\", \"ARM_SUBSCRIPTION_ID\"),\n                    jsonProperty(\"client_id\", \"ARM_CLIENT_ID\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"secret_value\", \"ARM_CLIENT_SECRET\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  # For more information about the aws plugin, please visit here:\n  # https://github.com/hashicorp/boundary-plugin-host-aws\n  #\n  # For more information about aws users, please visit here:\n  # https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n  awsExample:\n    type: boundary:HostCatalogPlugin\n    name: aws_example\n    properties:\n      name: My aws catalog\n      description: My first host catalog!\n      scopeId: ${project.id}\n      pluginName: aws\n      attributesJson:\n        fn::toJSON:\n          region: us-east-1\n      secretsJson:\n        fn::toJSON:\n          access_key_id: aws_access_key_id_value\n          secret_access_key: aws_secret_access_key_value\n  # For more information about the azure plugin, please visit here:\n  # https://github.com/hashicorp/boundary-plugin-host-azure\n  #\n  # For more information about azure ad applications, please visit here:\n  # https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n  azureExample:\n    type: boundary:HostCatalogPlugin\n    name: azure_example\n    properties:\n      name: My azure catalog\n      description: My second host catalog!\n      scopeId: ${project.id}\n      pluginName: azure\n      attributesJson:\n        fn::toJSON:\n          disable_credential_rotation: 'true'\n          tenant_id: ARM_TENANT_ID\n          subscription_id: ARM_SUBSCRIPTION_ID\n          client_id: ARM_CLIENT_ID\n      secretsJson:\n        fn::toJSON:\n          secret_value: ARM_CLIENT_SECRET\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostCatalogPlugin:HostCatalogPlugin foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "internalForceUpdate": {
                    "type": "string",
                    "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                },
                "internalHmacUsedForSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                },
                "internalSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n"
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                },
                "secretsHmac": {
                    "type": "string",
                    "description": "The HMAC'd secrets value returned from the server.\n"
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n",
                    "secret": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "HCP Only. A filter used to control which PKI workers can handle dynamic host catalog requests.\n"
                }
            },
            "required": [
                "internalForceUpdate",
                "internalHmacUsedForSecretsConfigHmac",
                "internalSecretsConfigHmac",
                "name",
                "pluginId",
                "pluginName",
                "scopeId",
                "secretsHmac"
            ],
            "inputProperties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "internalForceUpdate": {
                    "type": "string",
                    "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                },
                "internalHmacUsedForSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                },
                "internalSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                },
                "secretsHmac": {
                    "type": "string",
                    "description": "The HMAC'd secrets value returned from the server.\n"
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n",
                    "secret": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "HCP Only. A filter used to control which PKI workers can handle dynamic host catalog requests.\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostCatalogPlugin resources.\n",
                "properties": {
                    "attributesJson": {
                        "type": "string",
                        "description": "The attributes for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host catalog.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "internalForceUpdate": {
                        "type": "string",
                        "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                    },
                    "internalHmacUsedForSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                    },
                    "internalSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginName": {
                        "type": "string",
                        "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretsHmac": {
                        "type": "string",
                        "description": "The HMAC'd secrets value returned from the server.\n"
                    },
                    "secretsJson": {
                        "type": "string",
                        "description": "The secrets for the host catalog. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.\n",
                        "secret": true
                    },
                    "workerFilter": {
                        "type": "string",
                        "description": "HCP Only. A filter used to control which PKI workers can handle dynamic host catalog requests.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostCatalogStatic:HostCatalogStatic": {
            "description": "The static host catalog resource allows you to configure a Boundary static-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.HostCatalogStatic(\"example\", {\n    name: \"My catalog\",\n    description: \"My first host catalog!\",\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.HostCatalogStatic(\"example\",\n    name=\"My catalog\",\n    description=\"My first host catalog!\",\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.HostCatalogStatic(\"example\", new()\n    {\n        Name = \"My catalog\",\n        Description = \"My first host catalog!\",\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHostCatalogStatic(ctx, \"example\", \u0026boundary.HostCatalogStaticArgs{\n\t\t\tName:        pulumi.String(\"My catalog\"),\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogStatic;\nimport com.pulumi.boundary.HostCatalogStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new HostCatalogStatic(\"example\", HostCatalogStaticArgs.builder()\n            .name(\"My catalog\")\n            .description(\"My first host catalog!\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:HostCatalogStatic\n    properties:\n      name: My catalog\n      description: My first host catalog!\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostCatalogStatic:HostCatalogStatic foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host catalog description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host catalog name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostCatalogStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host catalog description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host catalog name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostSet:HostSet": {
            "description": "Deprecated: use `boundary.HostSetStatic` instead.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst static = new boundary.HostCatalog(\"static\", {\n    type: \"static\",\n    scopeId: project.id,\n});\nconst first = new boundary.Host(\"first\", {\n    type: \"static\",\n    name: \"host_1\",\n    description: \"My first host!\",\n    address: \"10.0.0.1\",\n    hostCatalogId: static.id,\n});\nconst second = new boundary.Host(\"second\", {\n    type: \"static\",\n    name: \"host_2\",\n    description: \"My second host!\",\n    address: \"10.0.0.2\",\n    hostCatalogId: static.id,\n});\nconst web = new boundary.HostSet(\"web\", {\n    hostCatalogId: static.id,\n    type: \"static\",\n    hostIds: [\n        first.id,\n        second.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nstatic = boundary.HostCatalog(\"static\",\n    type=\"static\",\n    scope_id=project.id)\nfirst = boundary.Host(\"first\",\n    type=\"static\",\n    name=\"host_1\",\n    description=\"My first host!\",\n    address=\"10.0.0.1\",\n    host_catalog_id=static.id)\nsecond = boundary.Host(\"second\",\n    type=\"static\",\n    name=\"host_2\",\n    description=\"My second host!\",\n    address=\"10.0.0.2\",\n    host_catalog_id=static.id)\nweb = boundary.HostSet(\"web\",\n    host_catalog_id=static.id,\n    type=\"static\",\n    host_ids=[\n        first.id,\n        second.id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var @static = new Boundary.HostCatalog(\"static\", new()\n    {\n        Type = \"static\",\n        ScopeId = project.Id,\n    });\n\n    var first = new Boundary.Host(\"first\", new()\n    {\n        Type = \"static\",\n        Name = \"host_1\",\n        Description = \"My first host!\",\n        Address = \"10.0.0.1\",\n        HostCatalogId = @static.Id,\n    });\n\n    var second = new Boundary.Host(\"second\", new()\n    {\n        Type = \"static\",\n        Name = \"host_2\",\n        Description = \"My second host!\",\n        Address = \"10.0.0.2\",\n        HostCatalogId = @static.Id,\n    });\n\n    var web = new Boundary.HostSet(\"web\", new()\n    {\n        HostCatalogId = @static.Id,\n        Type = \"static\",\n        HostIds = new[]\n        {\n            first.Id,\n            second.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tstatic, err := boundary.NewHostCatalog(ctx, \"static\", \u0026boundary.HostCatalogArgs{\n\t\t\tType:    pulumi.String(\"static\"),\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfirst, err := boundary.NewHost(ctx, \"first\", \u0026boundary.HostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"host_1\"),\n\t\t\tDescription:   pulumi.String(\"My first host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t\tHostCatalogId: static.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecond, err := boundary.NewHost(ctx, \"second\", \u0026boundary.HostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"host_2\"),\n\t\t\tDescription:   pulumi.String(\"My second host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.2\"),\n\t\t\tHostCatalogId: static.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHostSet(ctx, \"web\", \u0026boundary.HostSetArgs{\n\t\t\tHostCatalogId: static.ID(),\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tHostIds: pulumi.StringArray{\n\t\t\t\tfirst.ID(),\n\t\t\t\tsecond.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalog;\nimport com.pulumi.boundary.HostCatalogArgs;\nimport com.pulumi.boundary.Host;\nimport com.pulumi.boundary.HostArgs;\nimport com.pulumi.boundary.HostSet;\nimport com.pulumi.boundary.HostSetArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var static_ = new HostCatalog(\"static\", HostCatalogArgs.builder()\n            .type(\"static\")\n            .scopeId(project.id())\n            .build());\n\n        var first = new Host(\"first\", HostArgs.builder()\n            .type(\"static\")\n            .name(\"host_1\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(static_.id())\n            .build());\n\n        var second = new Host(\"second\", HostArgs.builder()\n            .type(\"static\")\n            .name(\"host_2\")\n            .description(\"My second host!\")\n            .address(\"10.0.0.2\")\n            .hostCatalogId(static_.id())\n            .build());\n\n        var web = new HostSet(\"web\", HostSetArgs.builder()\n            .hostCatalogId(static_.id())\n            .type(\"static\")\n            .hostIds(            \n                first.id(),\n                second.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  static:\n    type: boundary:HostCatalog\n    properties:\n      type: static\n      scopeId: ${project.id}\n  first:\n    type: boundary:Host\n    properties:\n      type: static\n      name: host_1\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${static.id}\n  second:\n    type: boundary:Host\n    properties:\n      type: static\n      name: host_2\n      description: My second host!\n      address: 10.0.0.2\n      hostCatalogId: ${static.id}\n  web:\n    type: boundary:HostSet\n    properties:\n      hostCatalogId: ${static.id}\n      type: static\n      hostIds:\n        - ${first.id}\n        - ${second.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostSet:HostSet foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name",
                "type"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostSet resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of host IDs contained in this set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostSetPlugin:HostSetPlugin": {
            "description": "The host_set_plugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\n// For more information about the aws plugin, please visit here:\n// https://github.com/hashicorp/boundary-plugin-host-aws\n//\n// For more information about aws users, please visit here:\n// https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\nconst awsExample = new boundary.HostCatalogPlugin(\"aws_example\", {\n    name: \"My aws catalog\",\n    description: \"My first host catalog!\",\n    scopeId: project.id,\n    pluginName: \"aws\",\n    attributesJson: JSON.stringify({\n        region: \"us-east-1\",\n    }),\n    secretsJson: JSON.stringify({\n        access_key_id: \"aws_access_key_id_value\",\n        secret_access_key: \"aws_secret_access_key_value\",\n    }),\n});\nconst web = new boundary.HostSetPlugin(\"web\", {\n    name: \"My web host set plugin\",\n    hostCatalogId: awsExample.id,\n    attributesJson: JSON.stringify({\n        filters: [\"tag:service-type=web\"],\n    }),\n});\nconst foobar = new boundary.HostSetPlugin(\"foobar\", {\n    name: \"My foobar host set plugin\",\n    hostCatalogId: awsExample.id,\n    preferredEndpoints: [\"cidr:54.0.0.0/8\"],\n    attributesJson: JSON.stringify({\n        filters: [\n            \"tag-key=foo\",\n            \"tag-key=bar\",\n        ],\n    }),\n});\nconst launch = new boundary.HostSetPlugin(\"launch\", {\n    name: \"My launch host set plugin\",\n    hostCatalogId: awsExample.id,\n    syncIntervalSeconds: 60,\n    attributesJson: JSON.stringify({\n        filters: [\n            \"tag:development=prod,dev\",\n            \"launch-time=2022-01-04T*\",\n        ],\n    }),\n});\n// For more information about the azure plugin, please visit here:\n// https://github.com/hashicorp/boundary-plugin-host-azure\n//\n// For more information about azure ad applications, please visit here:\n// https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\nconst azureExample = new boundary.HostCatalogPlugin(\"azure_example\", {\n    name: \"My azure catalog\",\n    description: \"My second host catalog!\",\n    scopeId: project.id,\n    pluginName: \"azure\",\n    attributesJson: JSON.stringify({\n        disable_credential_rotation: \"true\",\n        tenant_id: \"ARM_TENANT_ID\",\n        subscription_id: \"ARM_SUBSCRIPTION_ID\",\n        client_id: \"ARM_CLIENT_ID\",\n    }),\n    secretsJson: JSON.stringify({\n        secret_value: \"ARM_CLIENT_SECRET\",\n    }),\n});\nconst database = new boundary.HostSetPlugin(\"database\", {\n    name: \"My database host set plugin\",\n    hostCatalogId: azureExample.id,\n    attributesJson: JSON.stringify({\n        filter: \"tagName eq 'service-type' and tagValue eq 'database'\",\n    }),\n});\nconst foodev = new boundary.HostSetPlugin(\"foodev\", {\n    name: \"My foodev host set plugin\",\n    hostCatalogId: azureExample.id,\n    preferredEndpoints: [\"cidr:54.0.0.0/8\"],\n    syncIntervalSeconds: 60,\n    attributesJson: JSON.stringify({\n        filter: \"tagName eq 'tag-key' and tagValue eq 'foo'\",\n        filter: \"tagName eq 'application' and tagValue eq 'dev'\",\n    }),\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\n# For more information about the aws plugin, please visit here:\n# https://github.com/hashicorp/boundary-plugin-host-aws\n#\n# For more information about aws users, please visit here:\n# https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\naws_example = boundary.HostCatalogPlugin(\"aws_example\",\n    name=\"My aws catalog\",\n    description=\"My first host catalog!\",\n    scope_id=project.id,\n    plugin_name=\"aws\",\n    attributes_json=json.dumps({\n        \"region\": \"us-east-1\",\n    }),\n    secrets_json=json.dumps({\n        \"access_key_id\": \"aws_access_key_id_value\",\n        \"secret_access_key\": \"aws_secret_access_key_value\",\n    }))\nweb = boundary.HostSetPlugin(\"web\",\n    name=\"My web host set plugin\",\n    host_catalog_id=aws_example.id,\n    attributes_json=json.dumps({\n        \"filters\": [\"tag:service-type=web\"],\n    }))\nfoobar = boundary.HostSetPlugin(\"foobar\",\n    name=\"My foobar host set plugin\",\n    host_catalog_id=aws_example.id,\n    preferred_endpoints=[\"cidr:54.0.0.0/8\"],\n    attributes_json=json.dumps({\n        \"filters\": [\n            \"tag-key=foo\",\n            \"tag-key=bar\",\n        ],\n    }))\nlaunch = boundary.HostSetPlugin(\"launch\",\n    name=\"My launch host set plugin\",\n    host_catalog_id=aws_example.id,\n    sync_interval_seconds=60,\n    attributes_json=json.dumps({\n        \"filters\": [\n            \"tag:development=prod,dev\",\n            \"launch-time=2022-01-04T*\",\n        ],\n    }))\n# For more information about the azure plugin, please visit here:\n# https://github.com/hashicorp/boundary-plugin-host-azure\n#\n# For more information about azure ad applications, please visit here:\n# https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\nazure_example = boundary.HostCatalogPlugin(\"azure_example\",\n    name=\"My azure catalog\",\n    description=\"My second host catalog!\",\n    scope_id=project.id,\n    plugin_name=\"azure\",\n    attributes_json=json.dumps({\n        \"disable_credential_rotation\": \"true\",\n        \"tenant_id\": \"ARM_TENANT_ID\",\n        \"subscription_id\": \"ARM_SUBSCRIPTION_ID\",\n        \"client_id\": \"ARM_CLIENT_ID\",\n    }),\n    secrets_json=json.dumps({\n        \"secret_value\": \"ARM_CLIENT_SECRET\",\n    }))\ndatabase = boundary.HostSetPlugin(\"database\",\n    name=\"My database host set plugin\",\n    host_catalog_id=azure_example.id,\n    attributes_json=json.dumps({\n        \"filter\": \"tagName eq 'service-type' and tagValue eq 'database'\",\n    }))\nfoodev = boundary.HostSetPlugin(\"foodev\",\n    name=\"My foodev host set plugin\",\n    host_catalog_id=azure_example.id,\n    preferred_endpoints=[\"cidr:54.0.0.0/8\"],\n    sync_interval_seconds=60,\n    attributes_json=json.dumps({\n        \"filter\": \"tagName eq 'tag-key' and tagValue eq 'foo'\",\n        \"filter\": \"tagName eq 'application' and tagValue eq 'dev'\",\n    }))\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    // For more information about the aws plugin, please visit here:\n    // https://github.com/hashicorp/boundary-plugin-host-aws\n    //\n    // For more information about aws users, please visit here:\n    // https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n    var awsExample = new Boundary.HostCatalogPlugin(\"aws_example\", new()\n    {\n        Name = \"My aws catalog\",\n        Description = \"My first host catalog!\",\n        ScopeId = project.Id,\n        PluginName = \"aws\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"region\"] = \"us-east-1\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"access_key_id\"] = \"aws_access_key_id_value\",\n            [\"secret_access_key\"] = \"aws_secret_access_key_value\",\n        }),\n    });\n\n    var web = new Boundary.HostSetPlugin(\"web\", new()\n    {\n        Name = \"My web host set plugin\",\n        HostCatalogId = awsExample.Id,\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"filters\"] = new[]\n            {\n                \"tag:service-type=web\",\n            },\n        }),\n    });\n\n    var foobar = new Boundary.HostSetPlugin(\"foobar\", new()\n    {\n        Name = \"My foobar host set plugin\",\n        HostCatalogId = awsExample.Id,\n        PreferredEndpoints = new[]\n        {\n            \"cidr:54.0.0.0/8\",\n        },\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"filters\"] = new[]\n            {\n                \"tag-key=foo\",\n                \"tag-key=bar\",\n            },\n        }),\n    });\n\n    var launch = new Boundary.HostSetPlugin(\"launch\", new()\n    {\n        Name = \"My launch host set plugin\",\n        HostCatalogId = awsExample.Id,\n        SyncIntervalSeconds = 60,\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"filters\"] = new[]\n            {\n                \"tag:development=prod,dev\",\n                \"launch-time=2022-01-04T*\",\n            },\n        }),\n    });\n\n    // For more information about the azure plugin, please visit here:\n    // https://github.com/hashicorp/boundary-plugin-host-azure\n    //\n    // For more information about azure ad applications, please visit here:\n    // https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n    var azureExample = new Boundary.HostCatalogPlugin(\"azure_example\", new()\n    {\n        Name = \"My azure catalog\",\n        Description = \"My second host catalog!\",\n        ScopeId = project.Id,\n        PluginName = \"azure\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"disable_credential_rotation\"] = \"true\",\n            [\"tenant_id\"] = \"ARM_TENANT_ID\",\n            [\"subscription_id\"] = \"ARM_SUBSCRIPTION_ID\",\n            [\"client_id\"] = \"ARM_CLIENT_ID\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"secret_value\"] = \"ARM_CLIENT_SECRET\",\n        }),\n    });\n\n    var database = new Boundary.HostSetPlugin(\"database\", new()\n    {\n        Name = \"My database host set plugin\",\n        HostCatalogId = azureExample.Id,\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"filter\"] = \"tagName eq 'service-type' and tagValue eq 'database'\",\n        }),\n    });\n\n    var foodev = new Boundary.HostSetPlugin(\"foodev\", new()\n    {\n        Name = \"My foodev host set plugin\",\n        HostCatalogId = azureExample.Id,\n        PreferredEndpoints = new[]\n        {\n            \"cidr:54.0.0.0/8\",\n        },\n        SyncIntervalSeconds = 60,\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"filter\"] = \"tagName eq 'tag-key' and tagValue eq 'foo'\",\n            [\"filter\"] = \"tagName eq 'application' and tagValue eq 'dev'\",\n        }),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"region\": \"us-east-1\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"access_key_id\":     \"aws_access_key_id_value\",\n\t\t\t\"secret_access_key\": \"aws_secret_access_key_value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t// For more information about the aws plugin, please visit here:\n\t\t// https://github.com/hashicorp/boundary-plugin-host-aws\n\t\t//\n\t\t// For more information about aws users, please visit here:\n\t\t// https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n\t\tawsExample, err := boundary.NewHostCatalogPlugin(ctx, \"aws_example\", \u0026boundary.HostCatalogPluginArgs{\n\t\t\tName:           pulumi.String(\"My aws catalog\"),\n\t\t\tDescription:    pulumi.String(\"My first host catalog!\"),\n\t\t\tScopeId:        project.ID(),\n\t\t\tPluginName:     pulumi.String(\"aws\"),\n\t\t\tAttributesJson: pulumi.String(json0),\n\t\t\tSecretsJson:    pulumi.String(json1),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"filters\": []string{\n\t\t\t\t\"tag:service-type=web\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\t_, err = boundary.NewHostSetPlugin(ctx, \"web\", \u0026boundary.HostSetPluginArgs{\n\t\t\tName:           pulumi.String(\"My web host set plugin\"),\n\t\t\tHostCatalogId:  awsExample.ID(),\n\t\t\tAttributesJson: pulumi.String(json2),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON3, err := json.Marshal(map[string]interface{}{\n\t\t\t\"filters\": []string{\n\t\t\t\t\"tag-key=foo\",\n\t\t\t\t\"tag-key=bar\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson3 := string(tmpJSON3)\n\t\t_, err = boundary.NewHostSetPlugin(ctx, \"foobar\", \u0026boundary.HostSetPluginArgs{\n\t\t\tName:          pulumi.String(\"My foobar host set plugin\"),\n\t\t\tHostCatalogId: awsExample.ID(),\n\t\t\tPreferredEndpoints: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"cidr:54.0.0.0/8\"),\n\t\t\t},\n\t\t\tAttributesJson: pulumi.String(json3),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON4, err := json.Marshal(map[string]interface{}{\n\t\t\t\"filters\": []string{\n\t\t\t\t\"tag:development=prod,dev\",\n\t\t\t\t\"launch-time=2022-01-04T*\",\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson4 := string(tmpJSON4)\n\t\t_, err = boundary.NewHostSetPlugin(ctx, \"launch\", \u0026boundary.HostSetPluginArgs{\n\t\t\tName:                pulumi.String(\"My launch host set plugin\"),\n\t\t\tHostCatalogId:       awsExample.ID(),\n\t\t\tSyncIntervalSeconds: pulumi.Int(60),\n\t\t\tAttributesJson:      pulumi.String(json4),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON5, err := json.Marshal(map[string]interface{}{\n\t\t\t\"disable_credential_rotation\": \"true\",\n\t\t\t\"tenant_id\":                   \"ARM_TENANT_ID\",\n\t\t\t\"subscription_id\":             \"ARM_SUBSCRIPTION_ID\",\n\t\t\t\"client_id\":                   \"ARM_CLIENT_ID\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson5 := string(tmpJSON5)\n\t\ttmpJSON6, err := json.Marshal(map[string]interface{}{\n\t\t\t\"secret_value\": \"ARM_CLIENT_SECRET\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson6 := string(tmpJSON6)\n\t\t// For more information about the azure plugin, please visit here:\n\t\t// https://github.com/hashicorp/boundary-plugin-host-azure\n\t\t//\n\t\t// For more information about azure ad applications, please visit here:\n\t\t// https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n\t\tazureExample, err := boundary.NewHostCatalogPlugin(ctx, \"azure_example\", \u0026boundary.HostCatalogPluginArgs{\n\t\t\tName:           pulumi.String(\"My azure catalog\"),\n\t\t\tDescription:    pulumi.String(\"My second host catalog!\"),\n\t\t\tScopeId:        project.ID(),\n\t\t\tPluginName:     pulumi.String(\"azure\"),\n\t\t\tAttributesJson: pulumi.String(json5),\n\t\t\tSecretsJson:    pulumi.String(json6),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON7, err := json.Marshal(map[string]interface{}{\n\t\t\t\"filter\": \"tagName eq 'service-type' and tagValue eq 'database'\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson7 := string(tmpJSON7)\n\t\t_, err = boundary.NewHostSetPlugin(ctx, \"database\", \u0026boundary.HostSetPluginArgs{\n\t\t\tName:           pulumi.String(\"My database host set plugin\"),\n\t\t\tHostCatalogId:  azureExample.ID(),\n\t\t\tAttributesJson: pulumi.String(json7),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON8, err := json.Marshal(map[string]interface{}{\n\t\t\t\"filter\": \"tagName eq 'tag-key' and tagValue eq 'foo'\",\n\t\t\t\"filter\": \"tagName eq 'application' and tagValue eq 'dev'\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson8 := string(tmpJSON8)\n\t\t_, err = boundary.NewHostSetPlugin(ctx, \"foodev\", \u0026boundary.HostSetPluginArgs{\n\t\t\tName:          pulumi.String(\"My foodev host set plugin\"),\n\t\t\tHostCatalogId: azureExample.ID(),\n\t\t\tPreferredEndpoints: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"cidr:54.0.0.0/8\"),\n\t\t\t},\n\t\t\tSyncIntervalSeconds: pulumi.Int(60),\n\t\t\tAttributesJson:      pulumi.String(json8),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogPlugin;\nimport com.pulumi.boundary.HostCatalogPluginArgs;\nimport com.pulumi.boundary.HostSetPlugin;\nimport com.pulumi.boundary.HostSetPluginArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        // For more information about the aws plugin, please visit here:\n        // https://github.com/hashicorp/boundary-plugin-host-aws\n        //\n        // For more information about aws users, please visit here:\n        // https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n        var awsExample = new HostCatalogPlugin(\"awsExample\", HostCatalogPluginArgs.builder()\n            .name(\"My aws catalog\")\n            .description(\"My first host catalog!\")\n            .scopeId(project.id())\n            .pluginName(\"aws\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"us-east-1\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"access_key_id\", \"aws_access_key_id_value\"),\n                    jsonProperty(\"secret_access_key\", \"aws_secret_access_key_value\")\n                )))\n            .build());\n\n        var web = new HostSetPlugin(\"web\", HostSetPluginArgs.builder()\n            .name(\"My web host set plugin\")\n            .hostCatalogId(awsExample.id())\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"filters\", jsonArray(\"tag:service-type=web\"))\n                )))\n            .build());\n\n        var foobar = new HostSetPlugin(\"foobar\", HostSetPluginArgs.builder()\n            .name(\"My foobar host set plugin\")\n            .hostCatalogId(awsExample.id())\n            .preferredEndpoints(\"cidr:54.0.0.0/8\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"filters\", jsonArray(\n                        \"tag-key=foo\", \n                        \"tag-key=bar\"\n                    ))\n                )))\n            .build());\n\n        var launch = new HostSetPlugin(\"launch\", HostSetPluginArgs.builder()\n            .name(\"My launch host set plugin\")\n            .hostCatalogId(awsExample.id())\n            .syncIntervalSeconds(60)\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"filters\", jsonArray(\n                        \"tag:development=prod,dev\", \n                        \"launch-time=2022-01-04T*\"\n                    ))\n                )))\n            .build());\n\n        // For more information about the azure plugin, please visit here:\n        // https://github.com/hashicorp/boundary-plugin-host-azure\n        //\n        // For more information about azure ad applications, please visit here:\n        // https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n        var azureExample = new HostCatalogPlugin(\"azureExample\", HostCatalogPluginArgs.builder()\n            .name(\"My azure catalog\")\n            .description(\"My second host catalog!\")\n            .scopeId(project.id())\n            .pluginName(\"azure\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"disable_credential_rotation\", \"true\"),\n                    jsonProperty(\"tenant_id\", \"ARM_TENANT_ID\"),\n                    jsonProperty(\"subscription_id\", \"ARM_SUBSCRIPTION_ID\"),\n                    jsonProperty(\"client_id\", \"ARM_CLIENT_ID\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"secret_value\", \"ARM_CLIENT_SECRET\")\n                )))\n            .build());\n\n        var database = new HostSetPlugin(\"database\", HostSetPluginArgs.builder()\n            .name(\"My database host set plugin\")\n            .hostCatalogId(azureExample.id())\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"filter\", \"tagName eq 'service-type' and tagValue eq 'database'\")\n                )))\n            .build());\n\n        var foodev = new HostSetPlugin(\"foodev\", HostSetPluginArgs.builder()\n            .name(\"My foodev host set plugin\")\n            .hostCatalogId(azureExample.id())\n            .preferredEndpoints(\"cidr:54.0.0.0/8\")\n            .syncIntervalSeconds(60)\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"filter\", \"tagName eq 'tag-key' and tagValue eq 'foo'\"),\n                    jsonProperty(\"filter\", \"tagName eq 'application' and tagValue eq 'dev'\")\n                )))\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  # For more information about the aws plugin, please visit here:\n  # https://github.com/hashicorp/boundary-plugin-host-aws\n  #\n  # For more information about aws users, please visit here:\n  # https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges\n  awsExample:\n    type: boundary:HostCatalogPlugin\n    name: aws_example\n    properties:\n      name: My aws catalog\n      description: My first host catalog!\n      scopeId: ${project.id}\n      pluginName: aws\n      attributesJson:\n        fn::toJSON:\n          region: us-east-1\n      secretsJson:\n        fn::toJSON:\n          access_key_id: aws_access_key_id_value\n          secret_access_key: aws_secret_access_key_value\n  web:\n    type: boundary:HostSetPlugin\n    properties:\n      name: My web host set plugin\n      hostCatalogId: ${awsExample.id}\n      attributesJson:\n        fn::toJSON:\n          filters:\n            - tag:service-type=web\n  foobar:\n    type: boundary:HostSetPlugin\n    properties:\n      name: My foobar host set plugin\n      hostCatalogId: ${awsExample.id}\n      preferredEndpoints:\n        - cidr:54.0.0.0/8\n      attributesJson:\n        fn::toJSON:\n          filters:\n            - tag-key=foo\n            - tag-key=bar\n  launch:\n    type: boundary:HostSetPlugin\n    properties:\n      name: My launch host set plugin\n      hostCatalogId: ${awsExample.id}\n      syncIntervalSeconds: 60\n      attributesJson:\n        fn::toJSON:\n          filters:\n            - tag:development=prod,dev\n            - launch-time=2022-01-04T*\n  # For more information about the azure plugin, please visit here:\n  # https://github.com/hashicorp/boundary-plugin-host-azure\n  #\n  # For more information about azure ad applications, please visit here:\n  # https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1\n  azureExample:\n    type: boundary:HostCatalogPlugin\n    name: azure_example\n    properties:\n      name: My azure catalog\n      description: My second host catalog!\n      scopeId: ${project.id}\n      pluginName: azure\n      attributesJson:\n        fn::toJSON:\n          disable_credential_rotation: 'true'\n          tenant_id: ARM_TENANT_ID\n          subscription_id: ARM_SUBSCRIPTION_ID\n          client_id: ARM_CLIENT_ID\n      secretsJson:\n        fn::toJSON:\n          secret_value: ARM_CLIENT_SECRET\n  database:\n    type: boundary:HostSetPlugin\n    properties:\n      name: My database host set plugin\n      hostCatalogId: ${azureExample.id}\n      attributesJson:\n        fn::toJSON:\n          filter: tagName eq 'service-type' and tagValue eq 'database'\n  foodev:\n    type: boundary:HostSetPlugin\n    properties:\n      name: My foodev host set plugin\n      hostCatalogId: ${azureExample.id}\n      preferredEndpoints:\n        - cidr:54.0.0.0/8\n      syncIntervalSeconds: 60\n      attributesJson:\n        fn::toJSON:\n          filter: tagName eq 'tag-key' and tagValue eq 'foo'\n          filter: tagName eq 'application' and tagValue eq 'dev'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostSetPlugin:HostSetPlugin foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "preferredEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ordered list of preferred endpoints.\n"
                },
                "syncIntervalSeconds": {
                    "type": "integer",
                    "description": "The value to set for the sync interval seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "preferredEndpoints": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The ordered list of preferred endpoints.\n"
                },
                "syncIntervalSeconds": {
                    "type": "integer",
                    "description": "The value to set for the sync interval seconds.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostSetPlugin resources.\n",
                "properties": {
                    "attributesJson": {
                        "type": "string",
                        "description": "The attributes for the host set. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the host set.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "preferredEndpoints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The ordered list of preferred endpoints.\n"
                    },
                    "syncIntervalSeconds": {
                        "type": "integer",
                        "description": "The value to set for the sync interval seconds.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostSetStatic:HostSetStatic": {
            "description": "The host_set_static resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.HostCatalogStatic(\"example\", {scopeId: project.id});\nconst first = new boundary.HostStatic(\"first\", {\n    name: \"host_1\",\n    description: \"My first host!\",\n    address: \"10.0.0.1\",\n    hostCatalogId: example.id,\n});\nconst second = new boundary.HostStatic(\"second\", {\n    name: \"host_2\",\n    description: \"My second host!\",\n    address: \"10.0.0.2\",\n    hostCatalogId: example.id,\n});\nconst web = new boundary.HostSetStatic(\"web\", {\n    hostCatalogId: example.id,\n    hostIds: [\n        first.id,\n        second.id,\n    ],\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.HostCatalogStatic(\"example\", scope_id=project.id)\nfirst = boundary.HostStatic(\"first\",\n    name=\"host_1\",\n    description=\"My first host!\",\n    address=\"10.0.0.1\",\n    host_catalog_id=example.id)\nsecond = boundary.HostStatic(\"second\",\n    name=\"host_2\",\n    description=\"My second host!\",\n    address=\"10.0.0.2\",\n    host_catalog_id=example.id)\nweb = boundary.HostSetStatic(\"web\",\n    host_catalog_id=example.id,\n    host_ids=[\n        first.id,\n        second.id,\n    ])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.HostCatalogStatic(\"example\", new()\n    {\n        ScopeId = project.Id,\n    });\n\n    var first = new Boundary.HostStatic(\"first\", new()\n    {\n        Name = \"host_1\",\n        Description = \"My first host!\",\n        Address = \"10.0.0.1\",\n        HostCatalogId = example.Id,\n    });\n\n    var second = new Boundary.HostStatic(\"second\", new()\n    {\n        Name = \"host_2\",\n        Description = \"My second host!\",\n        Address = \"10.0.0.2\",\n        HostCatalogId = example.Id,\n    });\n\n    var web = new Boundary.HostSetStatic(\"web\", new()\n    {\n        HostCatalogId = example.Id,\n        HostIds = new[]\n        {\n            first.Id,\n            second.Id,\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample, err := boundary.NewHostCatalogStatic(ctx, \"example\", \u0026boundary.HostCatalogStaticArgs{\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfirst, err := boundary.NewHostStatic(ctx, \"first\", \u0026boundary.HostStaticArgs{\n\t\t\tName:          pulumi.String(\"host_1\"),\n\t\t\tDescription:   pulumi.String(\"My first host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t\tHostCatalogId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tsecond, err := boundary.NewHostStatic(ctx, \"second\", \u0026boundary.HostStaticArgs{\n\t\t\tName:          pulumi.String(\"host_2\"),\n\t\t\tDescription:   pulumi.String(\"My second host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.2\"),\n\t\t\tHostCatalogId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHostSetStatic(ctx, \"web\", \u0026boundary.HostSetStaticArgs{\n\t\t\tHostCatalogId: example.ID(),\n\t\t\tHostIds: pulumi.StringArray{\n\t\t\t\tfirst.ID(),\n\t\t\t\tsecond.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogStatic;\nimport com.pulumi.boundary.HostCatalogStaticArgs;\nimport com.pulumi.boundary.HostStatic;\nimport com.pulumi.boundary.HostStaticArgs;\nimport com.pulumi.boundary.HostSetStatic;\nimport com.pulumi.boundary.HostSetStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new HostCatalogStatic(\"example\", HostCatalogStaticArgs.builder()\n            .scopeId(project.id())\n            .build());\n\n        var first = new HostStatic(\"first\", HostStaticArgs.builder()\n            .name(\"host_1\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(example.id())\n            .build());\n\n        var second = new HostStatic(\"second\", HostStaticArgs.builder()\n            .name(\"host_2\")\n            .description(\"My second host!\")\n            .address(\"10.0.0.2\")\n            .hostCatalogId(example.id())\n            .build());\n\n        var web = new HostSetStatic(\"web\", HostSetStaticArgs.builder()\n            .hostCatalogId(example.id())\n            .hostIds(            \n                first.id(),\n                second.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:HostCatalogStatic\n    properties:\n      scopeId: ${project.id}\n  first:\n    type: boundary:HostStatic\n    properties:\n      name: host_1\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${example.id}\n  second:\n    type: boundary:HostStatic\n    properties:\n      name: host_2\n      description: My second host!\n      address: 10.0.0.2\n      hostCatalogId: ${example.id}\n  web:\n    type: boundary:HostSetStatic\n    properties:\n      hostCatalogId: ${example.id}\n      hostIds:\n        - ${first.id}\n        - ${second.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostSetStatic:HostSetStatic foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n"
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The host set description.\n"
                },
                "hostCatalogId": {
                    "type": "string",
                    "description": "The catalog for the host set.\n",
                    "willReplaceOnChanges": true
                },
                "hostIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of host IDs contained in this set.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The host set name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostSetStatic resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The host set description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string",
                        "description": "The catalog for the host set.\n",
                        "willReplaceOnChanges": true
                    },
                    "hostIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of host IDs contained in this set.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host set name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/hostStatic:HostStatic": {
            "description": "The static host resource allows you to configure a Boundary static host. Hosts are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst example = new boundary.HostCatalogStatic(\"example\", {\n    name: \"My catalog\",\n    description: \"My first host catalog!\",\n    scopeId: project.id,\n});\nconst exampleHostStatic = new boundary.HostStatic(\"example\", {\n    name: \"example_host\",\n    description: \"My first host!\",\n    address: \"10.0.0.1\",\n    hostCatalogId: example.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nexample = boundary.HostCatalogStatic(\"example\",\n    name=\"My catalog\",\n    description=\"My first host catalog!\",\n    scope_id=project.id)\nexample_host_static = boundary.HostStatic(\"example\",\n    name=\"example_host\",\n    description=\"My first host!\",\n    address=\"10.0.0.1\",\n    host_catalog_id=example.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var example = new Boundary.HostCatalogStatic(\"example\", new()\n    {\n        Name = \"My catalog\",\n        Description = \"My first host catalog!\",\n        ScopeId = project.Id,\n    });\n\n    var exampleHostStatic = new Boundary.HostStatic(\"example\", new()\n    {\n        Name = \"example_host\",\n        Description = \"My first host!\",\n        Address = \"10.0.0.1\",\n        HostCatalogId = example.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\texample, err := boundary.NewHostCatalogStatic(ctx, \"example\", \u0026boundary.HostCatalogStaticArgs{\n\t\t\tName:        pulumi.String(\"My catalog\"),\n\t\t\tDescription: pulumi.String(\"My first host catalog!\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewHostStatic(ctx, \"example\", \u0026boundary.HostStaticArgs{\n\t\t\tName:          pulumi.String(\"example_host\"),\n\t\t\tDescription:   pulumi.String(\"My first host!\"),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t\tHostCatalogId: example.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.HostCatalogStatic;\nimport com.pulumi.boundary.HostCatalogStaticArgs;\nimport com.pulumi.boundary.HostStatic;\nimport com.pulumi.boundary.HostStaticArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var example = new HostCatalogStatic(\"example\", HostCatalogStaticArgs.builder()\n            .name(\"My catalog\")\n            .description(\"My first host catalog!\")\n            .scopeId(project.id())\n            .build());\n\n        var exampleHostStatic = new HostStatic(\"exampleHostStatic\", HostStaticArgs.builder()\n            .name(\"example_host\")\n            .description(\"My first host!\")\n            .address(\"10.0.0.1\")\n            .hostCatalogId(example.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  example:\n    type: boundary:HostCatalogStatic\n    properties:\n      name: My catalog\n      description: My first host catalog!\n      scopeId: ${project.id}\n  exampleHostStatic:\n    type: boundary:HostStatic\n    name: example\n    properties:\n      name: example_host\n      description: My first host!\n      address: 10.0.0.1\n      hostCatalogId: ${example.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/hostStatic:HostStatic foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n"
                }
            },
            "required": [
                "hostCatalogId",
                "name"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The host description.\n"
                },
                "hostCatalogId": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "description": "The host name. Defaults to the resource name.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of host\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hostCatalogId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HostStatic resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The static address of the host resource as `\u003cIP\u003e` (note: port assignment occurs in the target resource definition, do not add :port here) or a domain name.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The host description.\n"
                    },
                    "hostCatalogId": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string",
                        "description": "The host name. Defaults to the resource name.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of host\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/managedGroup:ManagedGroup": {
            "description": "The managed group resource allows you to configure a Boundary group.\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "required": [
                "authMethodId",
                "filter",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "filter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "requiredInputs": [
                "authMethodId",
                "filter"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedGroup resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The managed group description.\n"
                    },
                    "filter": {
                        "type": "string",
                        "description": "Boolean expression to filter the workers for this managed group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The managed group name. Defaults to the resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/managedGroupLdap:ManagedGroupLdap": {
            "description": "The managed group resource allows you to configure a Boundary group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst forumsysLdap = new boundary.AuthMethodLdap(\"forumsys_ldap\", {\n    name: \"forumsys public LDAP\",\n    scopeId: \"global\",\n    urls: [\"ldap://ldap.forumsys.com\"],\n    userDn: \"dc=example,dc=com\",\n    userAttr: \"uid\",\n    groupDn: \"dc=example,dc=com\",\n    bindDn: \"cn=read-only-admin,dc=example,dc=com\",\n    bindPassword: \"password\",\n    state: \"active-public\",\n    enableGroups: true,\n    discoverDn: true,\n});\nconst forumsysScientists = new boundary.ManagedGroupLdap(\"forumsys_scientists\", {\n    name: \"scientists\",\n    description: \"forumsys scientists managed group\",\n    authMethodId: forumsysLdap.id,\n    groupNames: [\"Scientists\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nforumsys_ldap = boundary.AuthMethodLdap(\"forumsys_ldap\",\n    name=\"forumsys public LDAP\",\n    scope_id=\"global\",\n    urls=[\"ldap://ldap.forumsys.com\"],\n    user_dn=\"dc=example,dc=com\",\n    user_attr=\"uid\",\n    group_dn=\"dc=example,dc=com\",\n    bind_dn=\"cn=read-only-admin,dc=example,dc=com\",\n    bind_password=\"password\",\n    state=\"active-public\",\n    enable_groups=True,\n    discover_dn=True)\nforumsys_scientists = boundary.ManagedGroupLdap(\"forumsys_scientists\",\n    name=\"scientists\",\n    description=\"forumsys scientists managed group\",\n    auth_method_id=forumsys_ldap.id,\n    group_names=[\"Scientists\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var forumsysLdap = new Boundary.AuthMethodLdap(\"forumsys_ldap\", new()\n    {\n        Name = \"forumsys public LDAP\",\n        ScopeId = \"global\",\n        Urls = new[]\n        {\n            \"ldap://ldap.forumsys.com\",\n        },\n        UserDn = \"dc=example,dc=com\",\n        UserAttr = \"uid\",\n        GroupDn = \"dc=example,dc=com\",\n        BindDn = \"cn=read-only-admin,dc=example,dc=com\",\n        BindPassword = \"password\",\n        State = \"active-public\",\n        EnableGroups = true,\n        DiscoverDn = true,\n    });\n\n    var forumsysScientists = new Boundary.ManagedGroupLdap(\"forumsys_scientists\", new()\n    {\n        Name = \"scientists\",\n        Description = \"forumsys scientists managed group\",\n        AuthMethodId = forumsysLdap.Id,\n        GroupNames = new[]\n        {\n            \"Scientists\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tforumsysLdap, err := boundary.NewAuthMethodLdap(ctx, \"forumsys_ldap\", \u0026boundary.AuthMethodLdapArgs{\n\t\t\tName:    pulumi.String(\"forumsys public LDAP\"),\n\t\t\tScopeId: pulumi.String(\"global\"),\n\t\t\tUrls: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ldap://ldap.forumsys.com\"),\n\t\t\t},\n\t\t\tUserDn:       pulumi.String(\"dc=example,dc=com\"),\n\t\t\tUserAttr:     pulumi.String(\"uid\"),\n\t\t\tGroupDn:      pulumi.String(\"dc=example,dc=com\"),\n\t\t\tBindDn:       pulumi.String(\"cn=read-only-admin,dc=example,dc=com\"),\n\t\t\tBindPassword: pulumi.String(\"password\"),\n\t\t\tState:        pulumi.String(\"active-public\"),\n\t\t\tEnableGroups: pulumi.Bool(true),\n\t\t\tDiscoverDn:   pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewManagedGroupLdap(ctx, \"forumsys_scientists\", \u0026boundary.ManagedGroupLdapArgs{\n\t\t\tName:         pulumi.String(\"scientists\"),\n\t\t\tDescription:  pulumi.String(\"forumsys scientists managed group\"),\n\t\t\tAuthMethodId: forumsysLdap.ID(),\n\t\t\tGroupNames: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"Scientists\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethodLdap;\nimport com.pulumi.boundary.AuthMethodLdapArgs;\nimport com.pulumi.boundary.ManagedGroupLdap;\nimport com.pulumi.boundary.ManagedGroupLdapArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var forumsysLdap = new AuthMethodLdap(\"forumsysLdap\", AuthMethodLdapArgs.builder()\n            .name(\"forumsys public LDAP\")\n            .scopeId(\"global\")\n            .urls(\"ldap://ldap.forumsys.com\")\n            .userDn(\"dc=example,dc=com\")\n            .userAttr(\"uid\")\n            .groupDn(\"dc=example,dc=com\")\n            .bindDn(\"cn=read-only-admin,dc=example,dc=com\")\n            .bindPassword(\"password\")\n            .state(\"active-public\")\n            .enableGroups(true)\n            .discoverDn(true)\n            .build());\n\n        var forumsysScientists = new ManagedGroupLdap(\"forumsysScientists\", ManagedGroupLdapArgs.builder()\n            .name(\"scientists\")\n            .description(\"forumsys scientists managed group\")\n            .authMethodId(forumsysLdap.id())\n            .groupNames(\"Scientists\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  forumsysLdap:\n    type: boundary:AuthMethodLdap\n    name: forumsys_ldap\n    properties:\n      name: forumsys public LDAP\n      scopeId: global\n      urls: # the addr of the LDAP server\n        - ldap://ldap.forumsys.com\n      userDn: dc=example,dc=com\n      userAttr: uid\n      groupDn: dc=example,dc=com\n      bindDn: cn=read-only-admin,dc=example,dc=com\n      bindPassword: password\n      state: active-public\n      enableGroups: true # this turns-on the discovery of a user's groups\n      discoverDn: true # this turns-on the discovery of an authenticating user's dn\n  forumsysScientists:\n    type: boundary:ManagedGroupLdap\n    name: forumsys_scientists\n    properties:\n      name: scientists\n      description: forumsys scientists managed group\n      authMethodId: ${forumsysLdap.id}\n      groupNames:\n        - Scientists\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/managedGroupLdap:ManagedGroupLdap foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "groupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of groups that make up the managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "required": [
                "authMethodId",
                "groupNames",
                "name"
            ],
            "inputProperties": {
                "authMethodId": {
                    "type": "string",
                    "description": "The resource ID for the auth method.\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "The managed group description.\n"
                },
                "groupNames": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of groups that make up the managed group.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The managed group name. Defaults to the resource name.\n"
                }
            },
            "requiredInputs": [
                "authMethodId",
                "groupNames"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ManagedGroupLdap resources.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The resource ID for the auth method.\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The managed group description.\n"
                    },
                    "groupNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of groups that make up the managed group.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The managed group name. Defaults to the resource name.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/policyStorage:PolicyStorage": {
            "description": "The storage policy resource allows you to configure a Boundary storage policy. Storage policies allow an admin to configure how long session recordings must be stored and when to delete them. Storage policies must be applied to the global scope or an org scope in order to take effect.\n",
            "properties": {
                "deleteAfterDays": {
                    "type": "integer",
                    "description": "The number of days after which a session recording will be automatically deleted. Defaults to 0: never automatically delete. However, delete*after*days and retain*for*days cannot both be 0.\n"
                },
                "deleteAfterOverridable": {
                    "type": "boolean",
                    "description": "Whether or not the associated delete*after*days value can be overridden by org scopes. Note: if the associated delete*after*days value is 0, overridable is ignored\n"
                },
                "description": {
                    "type": "string",
                    "description": "The policy description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name. Defaults to the resource name.\n"
                },
                "retainForDays": {
                    "type": "integer",
                    "description": "The number of days a session recording is required to be stored. Defaults to 0: allow deletions at any time. However, retain*for*days and delete*after*days cannot both be 0.\n"
                },
                "retainForOverridable": {
                    "type": "boolean",
                    "description": "Whether or not the associated retain*for*days value can be overridden by org scopes. Note: if the associated retain*for*days value is 0, overridable is ignored.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this policy.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "deleteAfterDays": {
                    "type": "integer",
                    "description": "The number of days after which a session recording will be automatically deleted. Defaults to 0: never automatically delete. However, delete*after*days and retain*for*days cannot both be 0.\n"
                },
                "deleteAfterOverridable": {
                    "type": "boolean",
                    "description": "Whether or not the associated delete*after*days value can be overridden by org scopes. Note: if the associated delete*after*days value is 0, overridable is ignored\n"
                },
                "description": {
                    "type": "string",
                    "description": "The policy description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The policy name. Defaults to the resource name.\n"
                },
                "retainForDays": {
                    "type": "integer",
                    "description": "The number of days a session recording is required to be stored. Defaults to 0: allow deletions at any time. However, retain*for*days and delete*after*days cannot both be 0.\n"
                },
                "retainForOverridable": {
                    "type": "boolean",
                    "description": "Whether or not the associated retain*for*days value can be overridden by org scopes. Note: if the associated retain*for*days value is 0, overridable is ignored.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this policy.\n"
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PolicyStorage resources.\n",
                "properties": {
                    "deleteAfterDays": {
                        "type": "integer",
                        "description": "The number of days after which a session recording will be automatically deleted. Defaults to 0: never automatically delete. However, delete*after*days and retain*for*days cannot both be 0.\n"
                    },
                    "deleteAfterOverridable": {
                        "type": "boolean",
                        "description": "Whether or not the associated delete*after*days value can be overridden by org scopes. Note: if the associated delete*after*days value is 0, overridable is ignored\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The policy description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The policy name. Defaults to the resource name.\n"
                    },
                    "retainForDays": {
                        "type": "integer",
                        "description": "The number of days a session recording is required to be stored. Defaults to 0: allow deletions at any time. However, retain*for*days and delete*after*days cannot both be 0.\n"
                    },
                    "retainForOverridable": {
                        "type": "boolean",
                        "description": "Whether or not the associated retain*for*days value can be overridden by org scopes. Note: if the associated retain*for*days value is 0, overridable is ignored.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this policy.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/role:Role": {
            "description": "The role resource allows you to configure a Boundary role.\n\n## Example Usage\n\nBasic usage:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst example = new boundary.Role(\"example\", {\n    name: \"My role\",\n    description: \"My first role!\",\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nexample = boundary.Role(\"example\",\n    name=\"My role\",\n    description=\"My first role!\",\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var example = new Boundary.Role(\"example\", new()\n    {\n        Name = \"My role\",\n        Description = \"My first role!\",\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewRole(ctx, \"example\", \u0026boundary.RoleArgs{\n\t\t\tName:        pulumi.String(\"My role\"),\n\t\t\tDescription: pulumi.String(\"My first role!\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.Role;\nimport com.pulumi.boundary.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var example = new Role(\"example\", RoleArgs.builder()\n            .name(\"My role\")\n            .description(\"My first role!\")\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  example:\n    type: boundary:Role\n    properties:\n      name: My role\n      description: My first role!\n      scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nUsage with a user resource:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst foo = new boundary.User(\"foo\", {\n    name: \"User 1\",\n    scopeId: org.id,\n});\nconst bar = new boundary.User(\"bar\", {\n    name: \"User 2\",\n    scopeId: org.id,\n});\nconst example = new boundary.Role(\"example\", {\n    name: \"My role\",\n    description: \"My first role!\",\n    principalIds: [\n        foo.id,\n        bar.id,\n    ],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nfoo = boundary.User(\"foo\",\n    name=\"User 1\",\n    scope_id=org.id)\nbar = boundary.User(\"bar\",\n    name=\"User 2\",\n    scope_id=org.id)\nexample = boundary.Role(\"example\",\n    name=\"My role\",\n    description=\"My first role!\",\n    principal_ids=[\n        foo.id,\n        bar.id,\n    ],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var foo = new Boundary.User(\"foo\", new()\n    {\n        Name = \"User 1\",\n        ScopeId = org.Id,\n    });\n\n    var bar = new Boundary.User(\"bar\", new()\n    {\n        Name = \"User 2\",\n        ScopeId = org.Id,\n    });\n\n    var example = new Boundary.Role(\"example\", new()\n    {\n        Name = \"My role\",\n        Description = \"My first role!\",\n        PrincipalIds = new[]\n        {\n            foo.Id,\n            bar.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewUser(ctx, \"foo\", \u0026boundary.UserArgs{\n\t\t\tName:    pulumi.String(\"User 1\"),\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := boundary.NewUser(ctx, \"bar\", \u0026boundary.UserArgs{\n\t\t\tName:    pulumi.String(\"User 2\"),\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewRole(ctx, \"example\", \u0026boundary.RoleArgs{\n\t\t\tName:        pulumi.String(\"My role\"),\n\t\t\tDescription: pulumi.String(\"My first role!\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\tfoo.ID(),\n\t\t\t\tbar.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport com.pulumi.boundary.Role;\nimport com.pulumi.boundary.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var foo = new User(\"foo\", UserArgs.builder()\n            .name(\"User 1\")\n            .scopeId(org.id())\n            .build());\n\n        var bar = new User(\"bar\", UserArgs.builder()\n            .name(\"User 2\")\n            .scopeId(org.id())\n            .build());\n\n        var example = new Role(\"example\", RoleArgs.builder()\n            .name(\"My role\")\n            .description(\"My first role!\")\n            .principalIds(            \n                foo.id(),\n                bar.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  foo:\n    type: boundary:User\n    properties:\n      name: User 1\n      scopeId: ${org.id}\n  bar:\n    type: boundary:User\n    properties:\n      name: User 2\n      scopeId: ${org.id}\n  example:\n    type: boundary:Role\n    properties:\n      name: My role\n      description: My first role!\n      principalIds:\n        - ${foo.id}\n        - ${bar.id}\n      scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nUsage with user and grants resource:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst readonly = new boundary.User(\"readonly\", {\n    name: \"readonly\",\n    description: \"A readonly user\",\n    scopeId: org.id,\n});\nconst readonlyRole = new boundary.Role(\"readonly\", {\n    name: \"readonly\",\n    description: \"A readonly role\",\n    principalIds: [readonly.id],\n    grantStrings: [\"ids=*;type=*;actions=read\"],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nreadonly = boundary.User(\"readonly\",\n    name=\"readonly\",\n    description=\"A readonly user\",\n    scope_id=org.id)\nreadonly_role = boundary.Role(\"readonly\",\n    name=\"readonly\",\n    description=\"A readonly role\",\n    principal_ids=[readonly.id],\n    grant_strings=[\"ids=*;type=*;actions=read\"],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var @readonly = new Boundary.User(\"readonly\", new()\n    {\n        Name = \"readonly\",\n        Description = \"A readonly user\",\n        ScopeId = org.Id,\n    });\n\n    var readonlyRole = new Boundary.Role(\"readonly\", new()\n    {\n        Name = \"readonly\",\n        Description = \"A readonly role\",\n        PrincipalIds = new[]\n        {\n            @readonly.Id,\n        },\n        GrantStrings = new[]\n        {\n            \"ids=*;type=*;actions=read\",\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treadonly, err := boundary.NewUser(ctx, \"readonly\", \u0026boundary.UserArgs{\n\t\t\tName:        pulumi.String(\"readonly\"),\n\t\t\tDescription: pulumi.String(\"A readonly user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewRole(ctx, \"readonly\", \u0026boundary.RoleArgs{\n\t\t\tName:        pulumi.String(\"readonly\"),\n\t\t\tDescription: pulumi.String(\"A readonly role\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\treadonly.ID(),\n\t\t\t},\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ids=*;type=*;actions=read\"),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport com.pulumi.boundary.Role;\nimport com.pulumi.boundary.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var readonly = new User(\"readonly\", UserArgs.builder()\n            .name(\"readonly\")\n            .description(\"A readonly user\")\n            .scopeId(org.id())\n            .build());\n\n        var readonlyRole = new Role(\"readonlyRole\", RoleArgs.builder()\n            .name(\"readonly\")\n            .description(\"A readonly role\")\n            .principalIds(readonly.id())\n            .grantStrings(\"ids=*;type=*;actions=read\")\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  readonly:\n    type: boundary:User\n    properties:\n      name: readonly\n      description: A readonly user\n      scopeId: ${org.id}\n  readonlyRole:\n    type: boundary:Role\n    name: readonly\n    properties:\n      name: readonly\n      description: A readonly role\n      principalIds:\n        - ${readonly.id}\n      grantStrings:\n        - ids=*;type=*;actions=read\n      scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nUsage for a project-specific role:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst readonly = new boundary.User(\"readonly\", {\n    name: \"readonly\",\n    description: \"A readonly user\",\n    scopeId: org.id,\n});\nconst readonlyRole = new boundary.Role(\"readonly\", {\n    name: \"readonly\",\n    description: \"A readonly role\",\n    principalIds: [readonly.id],\n    grantStrings: [\"ids=*;type=*;actions=read\"],\n    scopeId: project.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nreadonly = boundary.User(\"readonly\",\n    name=\"readonly\",\n    description=\"A readonly user\",\n    scope_id=org.id)\nreadonly_role = boundary.Role(\"readonly\",\n    name=\"readonly\",\n    description=\"A readonly role\",\n    principal_ids=[readonly.id],\n    grant_strings=[\"ids=*;type=*;actions=read\"],\n    scope_id=project.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var @readonly = new Boundary.User(\"readonly\", new()\n    {\n        Name = \"readonly\",\n        Description = \"A readonly user\",\n        ScopeId = org.Id,\n    });\n\n    var readonlyRole = new Boundary.Role(\"readonly\", new()\n    {\n        Name = \"readonly\",\n        Description = \"A readonly role\",\n        PrincipalIds = new[]\n        {\n            @readonly.Id,\n        },\n        GrantStrings = new[]\n        {\n            \"ids=*;type=*;actions=read\",\n        },\n        ScopeId = project.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treadonly, err := boundary.NewUser(ctx, \"readonly\", \u0026boundary.UserArgs{\n\t\t\tName:        pulumi.String(\"readonly\"),\n\t\t\tDescription: pulumi.String(\"A readonly user\"),\n\t\t\tScopeId:     org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewRole(ctx, \"readonly\", \u0026boundary.RoleArgs{\n\t\t\tName:        pulumi.String(\"readonly\"),\n\t\t\tDescription: pulumi.String(\"A readonly role\"),\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\treadonly.ID(),\n\t\t\t},\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ids=*;type=*;actions=read\"),\n\t\t\t},\n\t\t\tScopeId: project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport com.pulumi.boundary.Role;\nimport com.pulumi.boundary.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var readonly = new User(\"readonly\", UserArgs.builder()\n            .name(\"readonly\")\n            .description(\"A readonly user\")\n            .scopeId(org.id())\n            .build());\n\n        var readonlyRole = new Role(\"readonlyRole\", RoleArgs.builder()\n            .name(\"readonly\")\n            .description(\"A readonly role\")\n            .principalIds(readonly.id())\n            .grantStrings(\"ids=*;type=*;actions=read\")\n            .scopeId(project.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  readonly:\n    type: boundary:User\n    properties:\n      name: readonly\n      description: A readonly user\n      scopeId: ${org.id}\n  readonlyRole:\n    type: boundary:Role\n    name: readonly\n    properties:\n      name: readonly\n      description: A readonly role\n      principalIds:\n        - ${readonly.id}\n      grantStrings:\n        - ids=*;type=*;actions=read\n      scopeId: ${project.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/role:Role foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "description": {
                    "type": "string",
                    "description": "The role description.\n"
                },
                "grantScopeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of scopes for which the grants in this role should apply, which can include the special values \"this\", \"children\", or \"descendants\"\n"
                },
                "grantStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of stringified grants for the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name. Defaults to the resource name.\n"
                },
                "principalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "grantScopeIds",
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The role description.\n"
                },
                "grantScopeIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of scopes for which the grants in this role should apply, which can include the special values \"this\", \"children\", or \"descendants\"\n"
                },
                "grantStrings": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of stringified grants for the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The role name. Defaults to the resource name.\n"
                },
                "principalIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "The role description.\n"
                    },
                    "grantScopeIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of scopes for which the grants in this role should apply, which can include the special values \"this\", \"children\", or \"descendants\"\n"
                    },
                    "grantStrings": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of stringified grants for the role.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The role name. Defaults to the resource name.\n"
                    },
                    "principalIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of principal (user or group) IDs to add as principals on the role.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/scope:Scope": {
            "description": "The scope resource allows you to configure a Boundary scope.\n\n## Example Usage\n\nCreating the global scope:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst global = new boundary.Scope(\"global\", {\n    globalScope: true,\n    scopeId: \"global\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\nglobal_ = boundary.Scope(\"global\",\n    global_scope=True,\n    scope_id=\"global\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @global = new Boundary.Scope(\"global\", new()\n    {\n        GlobalScope = true,\n        ScopeId = \"global\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"global\", \u0026boundary.ScopeArgs{\n\t\t\tGlobalScope: pulumi.Bool(true),\n\t\t\tScopeId:     pulumi.String(\"global\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var global = new Scope(\"global\", ScopeArgs.builder()\n            .globalScope(true)\n            .scopeId(\"global\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  global:\n    type: boundary:Scope\n    properties:\n      globalScope: true\n      scopeId: global\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nCreating an organization scope within global:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nCreating an project scope within an organization:\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org[\"id\"],\n    auto_create_admin_role=True)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             pulumi.Any(org.Id),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\nCreating an organization scope with a managed role for administration (auto create role set false):\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n});\nconst orgAdmin = new boundary.Role(\"org_admin\", {\n    scopeId: global.id,\n    grantScopeIds: [org.id],\n    grantStrings: [\"ids=*;type=*;actions=*\"],\n    principalIds: [\"u_auth\"],\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"])\norg_admin = boundary.Role(\"org_admin\",\n    scope_id=global_[\"id\"],\n    grant_scope_ids=[org.id],\n    grant_strings=[\"ids=*;type=*;actions=*\"],\n    principal_ids=[\"u_auth\"])\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n    });\n\n    var orgAdmin = new Boundary.Role(\"org_admin\", new()\n    {\n        ScopeId = @global.Id,\n        GrantScopeIds = new[]\n        {\n            org.Id,\n        },\n        GrantStrings = new[]\n        {\n            \"ids=*;type=*;actions=*\",\n        },\n        PrincipalIds = new[]\n        {\n            \"u_auth\",\n        },\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:        pulumi.String(\"organization_one\"),\n\t\t\tDescription: pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:     pulumi.Any(global.Id),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewRole(ctx, \"org_admin\", \u0026boundary.RoleArgs{\n\t\t\tScopeId: pulumi.Any(global.Id),\n\t\t\tGrantScopeIds: pulumi.StringArray{\n\t\t\t\torg.ID(),\n\t\t\t},\n\t\t\tGrantStrings: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"ids=*;type=*;actions=*\"),\n\t\t\t},\n\t\t\tPrincipalIds: pulumi.StringArray{\n\t\t\t\tpulumi.String(\"u_auth\"),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.Role;\nimport com.pulumi.boundary.RoleArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .build());\n\n        var orgAdmin = new Role(\"orgAdmin\", RoleArgs.builder()\n            .scopeId(global.id())\n            .grantScopeIds(org.id())\n            .grantStrings(\"ids=*;type=*;actions=*\")\n            .principalIds(\"u_auth\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n  orgAdmin:\n    type: boundary:Role\n    name: org_admin\n    properties:\n      scopeId: ${global.id}\n      grantScopeIds:\n        - ${org.id}\n      grantStrings:\n        - ids=*;type=*;actions=*\n      principalIds:\n        - u_auth\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/scope:Scope foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "autoCreateAdminRole": {
                    "type": "boolean"
                },
                "autoCreateDefaultRole": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The scope description.\n"
                },
                "globalScope": {
                    "type": "boolean",
                    "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The scope name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID containing the sub scope resource.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "autoCreateAdminRole": {
                    "type": "boolean"
                },
                "autoCreateDefaultRole": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string",
                    "description": "The scope description.\n"
                },
                "globalScope": {
                    "type": "boolean",
                    "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The scope name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID containing the sub scope resource.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Scope resources.\n",
                "properties": {
                    "autoCreateAdminRole": {
                        "type": "boolean"
                    },
                    "autoCreateDefaultRole": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string",
                        "description": "The scope description.\n"
                    },
                    "globalScope": {
                        "type": "boolean",
                        "description": "Indicates that the scope containing this value is the global scope, which triggers some specialized behavior to allow it to be imported and managed.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The scope name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID containing the sub scope resource.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/scopePolicyAttachment:ScopePolicyAttachment": {
            "properties": {
                "policyId": {
                    "type": "string"
                },
                "scopeId": {
                    "type": "string"
                }
            },
            "required": [
                "policyId",
                "scopeId"
            ],
            "inputProperties": {
                "policyId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "scopeId": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "policyId",
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ScopePolicyAttachment resources.\n",
                "properties": {
                    "policyId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "scopeId": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/storageBucket:StorageBucket": {
            "description": "The storage bucket resource allows you to configure a Boundary storage bucket. A storage bucket can only belong to the Global scope or an Org scope. At this time, the only supported storage for storage buckets is AWS S3. This feature requires Boundary Enterprise or Boundary HCP.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst awsStaticCredentialsExample = new boundary.StorageBucket(\"aws_static_credentials_example\", {\n    name: \"My aws storage bucket with static credentials\",\n    description: \"My first storage bucket!\",\n    scopeId: org.id,\n    pluginName: \"aws\",\n    bucketName: \"mybucket\",\n    attributesJson: JSON.stringify({\n        region: \"us-east-1\",\n    }),\n    secretsJson: JSON.stringify({\n        access_key_id: \"aws_access_key_id_value\",\n        secret_access_key: \"aws_secret_access_key_value\",\n    }),\n    workerFilter: \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n});\nconst awsDynamicCredentialsExample = new boundary.StorageBucket(\"aws_dynamic_credentials_example\", {\n    name: \"My aws storage bucket with dynamic credentials\",\n    description: \"My first storage bucket!\",\n    scopeId: org.id,\n    pluginName: \"aws\",\n    bucketName: \"mybucket\",\n    attributesJson: JSON.stringify({\n        region: \"us-east-1\",\n        role_arn: \"arn:aws:iam::123456789012:role/S3Access\",\n        disable_credential_rotation: \"true\",\n    }),\n    workerFilter: \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_[\"id\"],\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\naws_static_credentials_example = boundary.StorageBucket(\"aws_static_credentials_example\",\n    name=\"My aws storage bucket with static credentials\",\n    description=\"My first storage bucket!\",\n    scope_id=org.id,\n    plugin_name=\"aws\",\n    bucket_name=\"mybucket\",\n    attributes_json=json.dumps({\n        \"region\": \"us-east-1\",\n    }),\n    secrets_json=json.dumps({\n        \"access_key_id\": \"aws_access_key_id_value\",\n        \"secret_access_key\": \"aws_secret_access_key_value\",\n    }),\n    worker_filter=\"\\\"pki\\\" in \\\"/tags/type\\\"\")\naws_dynamic_credentials_example = boundary.StorageBucket(\"aws_dynamic_credentials_example\",\n    name=\"My aws storage bucket with dynamic credentials\",\n    description=\"My first storage bucket!\",\n    scope_id=org.id,\n    plugin_name=\"aws\",\n    bucket_name=\"mybucket\",\n    attributes_json=json.dumps({\n        \"region\": \"us-east-1\",\n        \"role_arn\": \"arn:aws:iam::123456789012:role/S3Access\",\n        \"disable_credential_rotation\": \"true\",\n    }),\n    worker_filter=\"\\\"pki\\\" in \\\"/tags/type\\\"\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var awsStaticCredentialsExample = new Boundary.StorageBucket(\"aws_static_credentials_example\", new()\n    {\n        Name = \"My aws storage bucket with static credentials\",\n        Description = \"My first storage bucket!\",\n        ScopeId = org.Id,\n        PluginName = \"aws\",\n        BucketName = \"mybucket\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"region\"] = \"us-east-1\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"access_key_id\"] = \"aws_access_key_id_value\",\n            [\"secret_access_key\"] = \"aws_secret_access_key_value\",\n        }),\n        WorkerFilter = \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n    });\n\n    var awsDynamicCredentialsExample = new Boundary.StorageBucket(\"aws_dynamic_credentials_example\", new()\n    {\n        Name = \"My aws storage bucket with dynamic credentials\",\n        Description = \"My first storage bucket!\",\n        ScopeId = org.Id,\n        PluginName = \"aws\",\n        BucketName = \"mybucket\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"region\"] = \"us-east-1\",\n            [\"role_arn\"] = \"arn:aws:iam::123456789012:role/S3Access\",\n            [\"disable_credential_rotation\"] = \"true\",\n        }),\n        WorkerFilter = \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.Any(global.Id),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"region\": \"us-east-1\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"access_key_id\":     \"aws_access_key_id_value\",\n\t\t\t\"secret_access_key\": \"aws_secret_access_key_value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\t_, err = boundary.NewStorageBucket(ctx, \"aws_static_credentials_example\", \u0026boundary.StorageBucketArgs{\n\t\t\tName:           pulumi.String(\"My aws storage bucket with static credentials\"),\n\t\t\tDescription:    pulumi.String(\"My first storage bucket!\"),\n\t\t\tScopeId:        org.ID(),\n\t\t\tPluginName:     pulumi.String(\"aws\"),\n\t\t\tBucketName:     pulumi.String(\"mybucket\"),\n\t\t\tAttributesJson: pulumi.String(json0),\n\t\t\tSecretsJson:    pulumi.String(json1),\n\t\t\tWorkerFilter:   pulumi.String(\"\\\"pki\\\" in \\\"/tags/type\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON2, err := json.Marshal(map[string]interface{}{\n\t\t\t\"region\":                      \"us-east-1\",\n\t\t\t\"role_arn\":                    \"arn:aws:iam::123456789012:role/S3Access\",\n\t\t\t\"disable_credential_rotation\": \"true\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson2 := string(tmpJSON2)\n\t\t_, err = boundary.NewStorageBucket(ctx, \"aws_dynamic_credentials_example\", \u0026boundary.StorageBucketArgs{\n\t\t\tName:           pulumi.String(\"My aws storage bucket with dynamic credentials\"),\n\t\t\tDescription:    pulumi.String(\"My first storage bucket!\"),\n\t\t\tScopeId:        org.ID(),\n\t\t\tPluginName:     pulumi.String(\"aws\"),\n\t\t\tBucketName:     pulumi.String(\"mybucket\"),\n\t\t\tAttributesJson: pulumi.String(json2),\n\t\t\tWorkerFilter:   pulumi.String(\"\\\"pki\\\" in \\\"/tags/type\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.StorageBucket;\nimport com.pulumi.boundary.StorageBucketArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var awsStaticCredentialsExample = new StorageBucket(\"awsStaticCredentialsExample\", StorageBucketArgs.builder()\n            .name(\"My aws storage bucket with static credentials\")\n            .description(\"My first storage bucket!\")\n            .scopeId(org.id())\n            .pluginName(\"aws\")\n            .bucketName(\"mybucket\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"us-east-1\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"access_key_id\", \"aws_access_key_id_value\"),\n                    jsonProperty(\"secret_access_key\", \"aws_secret_access_key_value\")\n                )))\n            .workerFilter(\"\\\"pki\\\" in \\\"/tags/type\\\"\")\n            .build());\n\n        var awsDynamicCredentialsExample = new StorageBucket(\"awsDynamicCredentialsExample\", StorageBucketArgs.builder()\n            .name(\"My aws storage bucket with dynamic credentials\")\n            .description(\"My first storage bucket!\")\n            .scopeId(org.id())\n            .pluginName(\"aws\")\n            .bucketName(\"mybucket\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"us-east-1\"),\n                    jsonProperty(\"role_arn\", \"arn:aws:iam::123456789012:role/S3Access\"),\n                    jsonProperty(\"disable_credential_rotation\", \"true\")\n                )))\n            .workerFilter(\"\\\"pki\\\" in \\\"/tags/type\\\"\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  awsStaticCredentialsExample:\n    type: boundary:StorageBucket\n    name: aws_static_credentials_example\n    properties:\n      name: My aws storage bucket with static credentials\n      description: My first storage bucket!\n      scopeId: ${org.id}\n      pluginName: aws\n      bucketName: mybucket\n      attributesJson:\n        fn::toJSON:\n          region: us-east-1\n      secretsJson:\n        fn::toJSON:\n          access_key_id: aws_access_key_id_value\n          secret_access_key: aws_secret_access_key_value\n      workerFilter: '\"pki\" in \"/tags/type\"'\n  awsDynamicCredentialsExample:\n    type: boundary:StorageBucket\n    name: aws_dynamic_credentials_example\n    properties:\n      name: My aws storage bucket with dynamic credentials\n      description: My first storage bucket!\n      scopeId: ${org.id}\n      pluginName: aws\n      bucketName: mybucket\n      attributesJson:\n        fn::toJSON:\n          region: us-east-1\n          role_arn: arn:aws:iam::123456789012:role/S3Access\n          disable_credential_rotation: 'true'\n      workerFilter: '\"pki\" in \"/tags/type\"'\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/storageBucket:StorageBucket foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the storage bucket. The \"region\" attribute field is required when creating an AWS storage bucket. Values are either encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the storage bucket.\n"
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket within the external object store service.\n"
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "The prefix used to organize the data held within the external object store.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The storage bucket description.\n"
                },
                "internalForceUpdate": {
                    "type": "string",
                    "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                },
                "internalHmacUsedForSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                },
                "internalSecretsConfigHmac": {
                    "type": "string",
                    "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The storage bucket name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n"
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this storage bucket.\n"
                },
                "secretsHmac": {
                    "type": "string",
                    "description": "The HMAC'd secrets value returned from the server.\n"
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the storage bucket. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the storage bucket; this allows injecting secrets for one call, then removing them for storage.\n",
                    "secret": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Filters to the worker(s) that can handle requests for this storage bucket. The filter must match an existing worker in order to create a storage bucket.\n"
                }
            },
            "required": [
                "bucketName",
                "internalForceUpdate",
                "internalHmacUsedForSecretsConfigHmac",
                "internalSecretsConfigHmac",
                "name",
                "pluginId",
                "scopeId",
                "secretsHmac",
                "workerFilter"
            ],
            "inputProperties": {
                "attributesJson": {
                    "type": "string",
                    "description": "The attributes for the storage bucket. The \"region\" attribute field is required when creating an AWS storage bucket. Values are either encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the storage bucket.\n"
                },
                "bucketName": {
                    "type": "string",
                    "description": "The name of the bucket within the external object store service.\n"
                },
                "bucketPrefix": {
                    "type": "string",
                    "description": "The prefix used to organize the data held within the external object store.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The storage bucket description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The storage bucket name. Defaults to the resource name.\n"
                },
                "pluginId": {
                    "type": "string",
                    "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "pluginName": {
                    "type": "string",
                    "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                    "willReplaceOnChanges": true
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for this storage bucket.\n",
                    "willReplaceOnChanges": true
                },
                "secretsJson": {
                    "type": "string",
                    "description": "The secrets for the storage bucket. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the storage bucket; this allows injecting secrets for one call, then removing them for storage.\n",
                    "secret": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Filters to the worker(s) that can handle requests for this storage bucket. The filter must match an existing worker in order to create a storage bucket.\n"
                }
            },
            "requiredInputs": [
                "bucketName",
                "scopeId",
                "workerFilter"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering StorageBucket resources.\n",
                "properties": {
                    "attributesJson": {
                        "type": "string",
                        "description": "The attributes for the storage bucket. The \"region\" attribute field is required when creating an AWS storage bucket. Values are either encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" or remove the block to clear all attributes in the storage bucket.\n"
                    },
                    "bucketName": {
                        "type": "string",
                        "description": "The name of the bucket within the external object store service.\n"
                    },
                    "bucketPrefix": {
                        "type": "string",
                        "description": "The prefix used to organize the data held within the external object store.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The storage bucket description.\n"
                    },
                    "internalForceUpdate": {
                        "type": "string",
                        "description": "Internal only. Used to force update so that we can always check the value of secrets.\n"
                    },
                    "internalHmacUsedForSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.\n"
                    },
                    "internalSecretsConfigHmac": {
                        "type": "string",
                        "description": "Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The storage bucket name. Defaults to the resource name.\n"
                    },
                    "pluginId": {
                        "type": "string",
                        "description": "The ID of the plugin that should back the resource. This or plugin_name must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "pluginName": {
                        "type": "string",
                        "description": "The name of the plugin that should back the resource. This or plugin_id must be defined.\n",
                        "willReplaceOnChanges": true
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for this storage bucket.\n",
                        "willReplaceOnChanges": true
                    },
                    "secretsHmac": {
                        "type": "string",
                        "description": "The HMAC'd secrets value returned from the server.\n"
                    },
                    "secretsJson": {
                        "type": "string",
                        "description": "The secrets for the storage bucket. Either values encoded with the \"jsonencode\" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string \"null\" to clear any existing values. NOTE: Unlike \"attributes_json\", removing this block will NOT clear secrets from the storage bucket; this allows injecting secrets for one call, then removing them for storage.\n",
                        "secret": true
                    },
                    "workerFilter": {
                        "type": "string",
                        "description": "Filters to the worker(s) that can handle requests for this storage bucket. The filter must match an existing worker in order to create a storage bucket.\n"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/target:Target": {
            "description": "The target resource allows you to configure a Boundary target.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst global = new boundary.Scope(\"global\", {\n    globalScope: true,\n    scopeId: \"global\",\n});\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: global.id,\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst project = new boundary.Scope(\"project\", {\n    name: \"project_one\",\n    description: \"My first scope!\",\n    scopeId: org.id,\n    autoCreateAdminRole: true,\n});\nconst foo = new boundary.CredentialStoreVault(\"foo\", {\n    name: \"vault_store\",\n    description: \"My first Vault credential store!\",\n    address: \"http://127.0.0.1:8200\",\n    token: \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scopeId: project.id,\n});\nconst fooCredentialLibraryVault = new boundary.CredentialLibraryVault(\"foo\", {\n    name: \"foo\",\n    description: \"My first Vault credential library!\",\n    credentialStoreId: foo.id,\n    path: \"my/secret/foo\",\n    httpMethod: \"GET\",\n    credentialType: \"username_password\",\n});\nconst fooHostCatalog = new boundary.HostCatalog(\"foo\", {\n    name: \"test\",\n    description: \"test catalog\",\n    scopeId: project.id,\n    type: \"static\",\n});\nconst fooHost = new boundary.Host(\"foo\", {\n    type: \"static\",\n    name: \"foo\",\n    hostCatalogId: fooHostCatalog.id,\n    address: \"10.0.0.1\",\n});\nconst bar = new boundary.Host(\"bar\", {\n    type: \"static\",\n    name: \"bar\",\n    hostCatalogId: fooHostCatalog.id,\n    address: \"10.0.0.1\",\n});\nconst fooHostSet = new boundary.HostSet(\"foo\", {\n    type: \"static\",\n    name: \"foo\",\n    hostCatalogId: fooHostCatalog.id,\n    hostIds: [\n        fooHost.id,\n        bar.id,\n    ],\n});\nconst awsExample = new boundary.StorageBucket(\"aws_example\", {\n    name: \"My aws storage bucket\",\n    description: \"My first storage bucket!\",\n    scopeId: org.id,\n    pluginName: \"aws\",\n    bucketName: \"mybucket\",\n    attributesJson: JSON.stringify({\n        region: \"us-east-1\",\n    }),\n    secretsJson: JSON.stringify({\n        access_key_id: \"aws_access_key_id_value\",\n        secret_access_key: \"aws_secret_access_key_value\",\n    }),\n    workerFilter: \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n});\nconst fooTarget = new boundary.Target(\"foo\", {\n    name: \"foo\",\n    description: \"Foo target\",\n    type: \"tcp\",\n    defaultPort: 22,\n    scopeId: project.id,\n    hostSourceIds: [fooHostSet.id],\n    brokeredCredentialSourceIds: [fooCredentialLibraryVault.id],\n});\nconst sshFoo = new boundary.Target(\"ssh_foo\", {\n    name: \"ssh_foo\",\n    description: \"Ssh target\",\n    type: \"ssh\",\n    defaultPort: 22,\n    scopeId: project.id,\n    hostSourceIds: [fooHostSet.id],\n    injectedApplicationCredentialSourceIds: [fooCredentialLibraryVault.id],\n});\nconst sshSessionRecordingFoo = new boundary.Target(\"ssh_session_recording_foo\", {\n    name: \"ssh_foo\",\n    description: \"Ssh target\",\n    type: \"ssh\",\n    defaultPort: 22,\n    scopeId: project.id,\n    hostSourceIds: [fooHostSet.id],\n    injectedApplicationCredentialSourceIds: [fooCredentialLibraryVault.id],\n    enableSessionRecording: true,\n    storageBucketId: awsExample,\n});\nconst addressFoo = new boundary.Target(\"address_foo\", {\n    name: \"address_foo\",\n    description: \"Foo target with an address\",\n    type: \"tcp\",\n    defaultPort: 22,\n    scopeId: project.id,\n    address: \"127.0.0.1\",\n});\n```\n```python\nimport pulumi\nimport json\nimport pulumi_boundary as boundary\n\nglobal_ = boundary.Scope(\"global\",\n    global_scope=True,\n    scope_id=\"global\")\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=global_.id,\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\nproject = boundary.Scope(\"project\",\n    name=\"project_one\",\n    description=\"My first scope!\",\n    scope_id=org.id,\n    auto_create_admin_role=True)\nfoo = boundary.CredentialStoreVault(\"foo\",\n    name=\"vault_store\",\n    description=\"My first Vault credential store!\",\n    address=\"http://127.0.0.1:8200\",\n    token=\"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n    scope_id=project.id)\nfoo_credential_library_vault = boundary.CredentialLibraryVault(\"foo\",\n    name=\"foo\",\n    description=\"My first Vault credential library!\",\n    credential_store_id=foo.id,\n    path=\"my/secret/foo\",\n    http_method=\"GET\",\n    credential_type=\"username_password\")\nfoo_host_catalog = boundary.HostCatalog(\"foo\",\n    name=\"test\",\n    description=\"test catalog\",\n    scope_id=project.id,\n    type=\"static\")\nfoo_host = boundary.Host(\"foo\",\n    type=\"static\",\n    name=\"foo\",\n    host_catalog_id=foo_host_catalog.id,\n    address=\"10.0.0.1\")\nbar = boundary.Host(\"bar\",\n    type=\"static\",\n    name=\"bar\",\n    host_catalog_id=foo_host_catalog.id,\n    address=\"10.0.0.1\")\nfoo_host_set = boundary.HostSet(\"foo\",\n    type=\"static\",\n    name=\"foo\",\n    host_catalog_id=foo_host_catalog.id,\n    host_ids=[\n        foo_host.id,\n        bar.id,\n    ])\naws_example = boundary.StorageBucket(\"aws_example\",\n    name=\"My aws storage bucket\",\n    description=\"My first storage bucket!\",\n    scope_id=org.id,\n    plugin_name=\"aws\",\n    bucket_name=\"mybucket\",\n    attributes_json=json.dumps({\n        \"region\": \"us-east-1\",\n    }),\n    secrets_json=json.dumps({\n        \"access_key_id\": \"aws_access_key_id_value\",\n        \"secret_access_key\": \"aws_secret_access_key_value\",\n    }),\n    worker_filter=\"\\\"pki\\\" in \\\"/tags/type\\\"\")\nfoo_target = boundary.Target(\"foo\",\n    name=\"foo\",\n    description=\"Foo target\",\n    type=\"tcp\",\n    default_port=22,\n    scope_id=project.id,\n    host_source_ids=[foo_host_set.id],\n    brokered_credential_source_ids=[foo_credential_library_vault.id])\nssh_foo = boundary.Target(\"ssh_foo\",\n    name=\"ssh_foo\",\n    description=\"Ssh target\",\n    type=\"ssh\",\n    default_port=22,\n    scope_id=project.id,\n    host_source_ids=[foo_host_set.id],\n    injected_application_credential_source_ids=[foo_credential_library_vault.id])\nssh_session_recording_foo = boundary.Target(\"ssh_session_recording_foo\",\n    name=\"ssh_foo\",\n    description=\"Ssh target\",\n    type=\"ssh\",\n    default_port=22,\n    scope_id=project.id,\n    host_source_ids=[foo_host_set.id],\n    injected_application_credential_source_ids=[foo_credential_library_vault.id],\n    enable_session_recording=True,\n    storage_bucket_id=aws_example)\naddress_foo = boundary.Target(\"address_foo\",\n    name=\"address_foo\",\n    description=\"Foo target with an address\",\n    type=\"tcp\",\n    default_port=22,\n    scope_id=project.id,\n    address=\"127.0.0.1\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text.Json;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var @global = new Boundary.Scope(\"global\", new()\n    {\n        GlobalScope = true,\n        ScopeId = \"global\",\n    });\n\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = @global.Id,\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var project = new Boundary.Scope(\"project\", new()\n    {\n        Name = \"project_one\",\n        Description = \"My first scope!\",\n        ScopeId = org.Id,\n        AutoCreateAdminRole = true,\n    });\n\n    var foo = new Boundary.CredentialStoreVault(\"foo\", new()\n    {\n        Name = \"vault_store\",\n        Description = \"My first Vault credential store!\",\n        Address = \"http://127.0.0.1:8200\",\n        Token = \"s.0ufRo6XEGU2jOqnIr7OlFYP5\",\n        ScopeId = project.Id,\n    });\n\n    var fooCredentialLibraryVault = new Boundary.CredentialLibraryVault(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"My first Vault credential library!\",\n        CredentialStoreId = foo.Id,\n        Path = \"my/secret/foo\",\n        HttpMethod = \"GET\",\n        CredentialType = \"username_password\",\n    });\n\n    var fooHostCatalog = new Boundary.HostCatalog(\"foo\", new()\n    {\n        Name = \"test\",\n        Description = \"test catalog\",\n        ScopeId = project.Id,\n        Type = \"static\",\n    });\n\n    var fooHost = new Boundary.Host(\"foo\", new()\n    {\n        Type = \"static\",\n        Name = \"foo\",\n        HostCatalogId = fooHostCatalog.Id,\n        Address = \"10.0.0.1\",\n    });\n\n    var bar = new Boundary.Host(\"bar\", new()\n    {\n        Type = \"static\",\n        Name = \"bar\",\n        HostCatalogId = fooHostCatalog.Id,\n        Address = \"10.0.0.1\",\n    });\n\n    var fooHostSet = new Boundary.HostSet(\"foo\", new()\n    {\n        Type = \"static\",\n        Name = \"foo\",\n        HostCatalogId = fooHostCatalog.Id,\n        HostIds = new[]\n        {\n            fooHost.Id,\n            bar.Id,\n        },\n    });\n\n    var awsExample = new Boundary.StorageBucket(\"aws_example\", new()\n    {\n        Name = \"My aws storage bucket\",\n        Description = \"My first storage bucket!\",\n        ScopeId = org.Id,\n        PluginName = \"aws\",\n        BucketName = \"mybucket\",\n        AttributesJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"region\"] = \"us-east-1\",\n        }),\n        SecretsJson = JsonSerializer.Serialize(new Dictionary\u003cstring, object?\u003e\n        {\n            [\"access_key_id\"] = \"aws_access_key_id_value\",\n            [\"secret_access_key\"] = \"aws_secret_access_key_value\",\n        }),\n        WorkerFilter = \"\\\"pki\\\" in \\\"/tags/type\\\"\",\n    });\n\n    var fooTarget = new Boundary.Target(\"foo\", new()\n    {\n        Name = \"foo\",\n        Description = \"Foo target\",\n        Type = \"tcp\",\n        DefaultPort = 22,\n        ScopeId = project.Id,\n        HostSourceIds = new[]\n        {\n            fooHostSet.Id,\n        },\n        BrokeredCredentialSourceIds = new[]\n        {\n            fooCredentialLibraryVault.Id,\n        },\n    });\n\n    var sshFoo = new Boundary.Target(\"ssh_foo\", new()\n    {\n        Name = \"ssh_foo\",\n        Description = \"Ssh target\",\n        Type = \"ssh\",\n        DefaultPort = 22,\n        ScopeId = project.Id,\n        HostSourceIds = new[]\n        {\n            fooHostSet.Id,\n        },\n        InjectedApplicationCredentialSourceIds = new[]\n        {\n            fooCredentialLibraryVault.Id,\n        },\n    });\n\n    var sshSessionRecordingFoo = new Boundary.Target(\"ssh_session_recording_foo\", new()\n    {\n        Name = \"ssh_foo\",\n        Description = \"Ssh target\",\n        Type = \"ssh\",\n        DefaultPort = 22,\n        ScopeId = project.Id,\n        HostSourceIds = new[]\n        {\n            fooHostSet.Id,\n        },\n        InjectedApplicationCredentialSourceIds = new[]\n        {\n            fooCredentialLibraryVault.Id,\n        },\n        EnableSessionRecording = true,\n        StorageBucketId = awsExample,\n    });\n\n    var addressFoo = new Boundary.Target(\"address_foo\", new()\n    {\n        Name = \"address_foo\",\n        Description = \"Foo target with an address\",\n        Type = \"tcp\",\n        DefaultPort = 22,\n        ScopeId = project.Id,\n        Address = \"127.0.0.1\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"encoding/json\"\n\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\tglobal, err := boundary.NewScope(ctx, \"global\", \u0026boundary.ScopeArgs{\n\t\t\tGlobalScope: pulumi.Bool(true),\n\t\t\tScopeId:     pulumi.String(\"global\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               global.ID(),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tproject, err := boundary.NewScope(ctx, \"project\", \u0026boundary.ScopeArgs{\n\t\t\tName:                pulumi.String(\"project_one\"),\n\t\t\tDescription:         pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:             org.ID(),\n\t\t\tAutoCreateAdminRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfoo, err := boundary.NewCredentialStoreVault(ctx, \"foo\", \u0026boundary.CredentialStoreVaultArgs{\n\t\t\tName:        pulumi.String(\"vault_store\"),\n\t\t\tDescription: pulumi.String(\"My first Vault credential store!\"),\n\t\t\tAddress:     pulumi.String(\"http://127.0.0.1:8200\"),\n\t\t\tToken:       pulumi.String(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\"),\n\t\t\tScopeId:     project.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooCredentialLibraryVault, err := boundary.NewCredentialLibraryVault(ctx, \"foo\", \u0026boundary.CredentialLibraryVaultArgs{\n\t\t\tName:              pulumi.String(\"foo\"),\n\t\t\tDescription:       pulumi.String(\"My first Vault credential library!\"),\n\t\t\tCredentialStoreId: foo.ID(),\n\t\t\tPath:              pulumi.String(\"my/secret/foo\"),\n\t\t\tHttpMethod:        pulumi.String(\"GET\"),\n\t\t\tCredentialType:    pulumi.String(\"username_password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooHostCatalog, err := boundary.NewHostCatalog(ctx, \"foo\", \u0026boundary.HostCatalogArgs{\n\t\t\tName:        pulumi.String(\"test\"),\n\t\t\tDescription: pulumi.String(\"test catalog\"),\n\t\t\tScopeId:     project.ID(),\n\t\t\tType:        pulumi.String(\"static\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooHost, err := boundary.NewHost(ctx, \"foo\", \u0026boundary.HostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"foo\"),\n\t\t\tHostCatalogId: fooHostCatalog.ID(),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tbar, err := boundary.NewHost(ctx, \"bar\", \u0026boundary.HostArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"bar\"),\n\t\t\tHostCatalogId: fooHostCatalog.ID(),\n\t\t\tAddress:       pulumi.String(\"10.0.0.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tfooHostSet, err := boundary.NewHostSet(ctx, \"foo\", \u0026boundary.HostSetArgs{\n\t\t\tType:          pulumi.String(\"static\"),\n\t\t\tName:          pulumi.String(\"foo\"),\n\t\t\tHostCatalogId: fooHostCatalog.ID(),\n\t\t\tHostIds: pulumi.StringArray{\n\t\t\t\tfooHost.ID(),\n\t\t\t\tbar.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\ttmpJSON0, err := json.Marshal(map[string]interface{}{\n\t\t\t\"region\": \"us-east-1\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson0 := string(tmpJSON0)\n\t\ttmpJSON1, err := json.Marshal(map[string]interface{}{\n\t\t\t\"access_key_id\":     \"aws_access_key_id_value\",\n\t\t\t\"secret_access_key\": \"aws_secret_access_key_value\",\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjson1 := string(tmpJSON1)\n\t\tawsExample, err := boundary.NewStorageBucket(ctx, \"aws_example\", \u0026boundary.StorageBucketArgs{\n\t\t\tName:           pulumi.String(\"My aws storage bucket\"),\n\t\t\tDescription:    pulumi.String(\"My first storage bucket!\"),\n\t\t\tScopeId:        org.ID(),\n\t\t\tPluginName:     pulumi.String(\"aws\"),\n\t\t\tBucketName:     pulumi.String(\"mybucket\"),\n\t\t\tAttributesJson: pulumi.String(json0),\n\t\t\tSecretsJson:    pulumi.String(json1),\n\t\t\tWorkerFilter:   pulumi.String(\"\\\"pki\\\" in \\\"/tags/type\\\"\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewTarget(ctx, \"foo\", \u0026boundary.TargetArgs{\n\t\t\tName:        pulumi.String(\"foo\"),\n\t\t\tDescription: pulumi.String(\"Foo target\"),\n\t\t\tType:        pulumi.String(\"tcp\"),\n\t\t\tDefaultPort: pulumi.Int(22),\n\t\t\tScopeId:     project.ID(),\n\t\t\tHostSourceIds: pulumi.StringArray{\n\t\t\t\tfooHostSet.ID(),\n\t\t\t},\n\t\t\tBrokeredCredentialSourceIds: pulumi.StringArray{\n\t\t\t\tfooCredentialLibraryVault.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewTarget(ctx, \"ssh_foo\", \u0026boundary.TargetArgs{\n\t\t\tName:        pulumi.String(\"ssh_foo\"),\n\t\t\tDescription: pulumi.String(\"Ssh target\"),\n\t\t\tType:        pulumi.String(\"ssh\"),\n\t\t\tDefaultPort: pulumi.Int(22),\n\t\t\tScopeId:     project.ID(),\n\t\t\tHostSourceIds: pulumi.StringArray{\n\t\t\t\tfooHostSet.ID(),\n\t\t\t},\n\t\t\tInjectedApplicationCredentialSourceIds: pulumi.StringArray{\n\t\t\t\tfooCredentialLibraryVault.ID(),\n\t\t\t},\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewTarget(ctx, \"ssh_session_recording_foo\", \u0026boundary.TargetArgs{\n\t\t\tName:        pulumi.String(\"ssh_foo\"),\n\t\t\tDescription: pulumi.String(\"Ssh target\"),\n\t\t\tType:        pulumi.String(\"ssh\"),\n\t\t\tDefaultPort: pulumi.Int(22),\n\t\t\tScopeId:     project.ID(),\n\t\t\tHostSourceIds: pulumi.StringArray{\n\t\t\t\tfooHostSet.ID(),\n\t\t\t},\n\t\t\tInjectedApplicationCredentialSourceIds: pulumi.StringArray{\n\t\t\t\tfooCredentialLibraryVault.ID(),\n\t\t\t},\n\t\t\tEnableSessionRecording: pulumi.Bool(true),\n\t\t\tStorageBucketId:        awsExample,\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewTarget(ctx, \"address_foo\", \u0026boundary.TargetArgs{\n\t\t\tName:        pulumi.String(\"address_foo\"),\n\t\t\tDescription: pulumi.String(\"Foo target with an address\"),\n\t\t\tType:        pulumi.String(\"tcp\"),\n\t\t\tDefaultPort: pulumi.Int(22),\n\t\t\tScopeId:     project.ID(),\n\t\t\tAddress:     pulumi.String(\"127.0.0.1\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.CredentialStoreVault;\nimport com.pulumi.boundary.CredentialStoreVaultArgs;\nimport com.pulumi.boundary.CredentialLibraryVault;\nimport com.pulumi.boundary.CredentialLibraryVaultArgs;\nimport com.pulumi.boundary.HostCatalog;\nimport com.pulumi.boundary.HostCatalogArgs;\nimport com.pulumi.boundary.Host;\nimport com.pulumi.boundary.HostArgs;\nimport com.pulumi.boundary.HostSet;\nimport com.pulumi.boundary.HostSetArgs;\nimport com.pulumi.boundary.StorageBucket;\nimport com.pulumi.boundary.StorageBucketArgs;\nimport com.pulumi.boundary.Target;\nimport com.pulumi.boundary.TargetArgs;\nimport static com.pulumi.codegen.internal.Serialization.*;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var global = new Scope(\"global\", ScopeArgs.builder()\n            .globalScope(true)\n            .scopeId(\"global\")\n            .build());\n\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(global.id())\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var project = new Scope(\"project\", ScopeArgs.builder()\n            .name(\"project_one\")\n            .description(\"My first scope!\")\n            .scopeId(org.id())\n            .autoCreateAdminRole(true)\n            .build());\n\n        var foo = new CredentialStoreVault(\"foo\", CredentialStoreVaultArgs.builder()\n            .name(\"vault_store\")\n            .description(\"My first Vault credential store!\")\n            .address(\"http://127.0.0.1:8200\")\n            .token(\"s.0ufRo6XEGU2jOqnIr7OlFYP5\")\n            .scopeId(project.id())\n            .build());\n\n        var fooCredentialLibraryVault = new CredentialLibraryVault(\"fooCredentialLibraryVault\", CredentialLibraryVaultArgs.builder()\n            .name(\"foo\")\n            .description(\"My first Vault credential library!\")\n            .credentialStoreId(foo.id())\n            .path(\"my/secret/foo\")\n            .httpMethod(\"GET\")\n            .credentialType(\"username_password\")\n            .build());\n\n        var fooHostCatalog = new HostCatalog(\"fooHostCatalog\", HostCatalogArgs.builder()\n            .name(\"test\")\n            .description(\"test catalog\")\n            .scopeId(project.id())\n            .type(\"static\")\n            .build());\n\n        var fooHost = new Host(\"fooHost\", HostArgs.builder()\n            .type(\"static\")\n            .name(\"foo\")\n            .hostCatalogId(fooHostCatalog.id())\n            .address(\"10.0.0.1\")\n            .build());\n\n        var bar = new Host(\"bar\", HostArgs.builder()\n            .type(\"static\")\n            .name(\"bar\")\n            .hostCatalogId(fooHostCatalog.id())\n            .address(\"10.0.0.1\")\n            .build());\n\n        var fooHostSet = new HostSet(\"fooHostSet\", HostSetArgs.builder()\n            .type(\"static\")\n            .name(\"foo\")\n            .hostCatalogId(fooHostCatalog.id())\n            .hostIds(            \n                fooHost.id(),\n                bar.id())\n            .build());\n\n        var awsExample = new StorageBucket(\"awsExample\", StorageBucketArgs.builder()\n            .name(\"My aws storage bucket\")\n            .description(\"My first storage bucket!\")\n            .scopeId(org.id())\n            .pluginName(\"aws\")\n            .bucketName(\"mybucket\")\n            .attributesJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"region\", \"us-east-1\")\n                )))\n            .secretsJson(serializeJson(\n                jsonObject(\n                    jsonProperty(\"access_key_id\", \"aws_access_key_id_value\"),\n                    jsonProperty(\"secret_access_key\", \"aws_secret_access_key_value\")\n                )))\n            .workerFilter(\"\\\"pki\\\" in \\\"/tags/type\\\"\")\n            .build());\n\n        var fooTarget = new Target(\"fooTarget\", TargetArgs.builder()\n            .name(\"foo\")\n            .description(\"Foo target\")\n            .type(\"tcp\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooHostSet.id())\n            .brokeredCredentialSourceIds(fooCredentialLibraryVault.id())\n            .build());\n\n        var sshFoo = new Target(\"sshFoo\", TargetArgs.builder()\n            .name(\"ssh_foo\")\n            .description(\"Ssh target\")\n            .type(\"ssh\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooHostSet.id())\n            .injectedApplicationCredentialSourceIds(fooCredentialLibraryVault.id())\n            .build());\n\n        var sshSessionRecordingFoo = new Target(\"sshSessionRecordingFoo\", TargetArgs.builder()\n            .name(\"ssh_foo\")\n            .description(\"Ssh target\")\n            .type(\"ssh\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .hostSourceIds(fooHostSet.id())\n            .injectedApplicationCredentialSourceIds(fooCredentialLibraryVault.id())\n            .enableSessionRecording(true)\n            .storageBucketId(awsExample)\n            .build());\n\n        var addressFoo = new Target(\"addressFoo\", TargetArgs.builder()\n            .name(\"address_foo\")\n            .description(\"Foo target with an address\")\n            .type(\"tcp\")\n            .defaultPort(\"22\")\n            .scopeId(project.id())\n            .address(\"127.0.0.1\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  global:\n    type: boundary:Scope\n    properties:\n      globalScope: true\n      scopeId: global\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: ${global.id}\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  project:\n    type: boundary:Scope\n    properties:\n      name: project_one\n      description: My first scope!\n      scopeId: ${org.id}\n      autoCreateAdminRole: true\n  foo:\n    type: boundary:CredentialStoreVault\n    properties:\n      name: vault_store\n      description: My first Vault credential store!\n      address: http://127.0.0.1:8200\n      token: s.0ufRo6XEGU2jOqnIr7OlFYP5\n      scopeId: ${project.id}\n  fooCredentialLibraryVault:\n    type: boundary:CredentialLibraryVault\n    name: foo\n    properties:\n      name: foo\n      description: My first Vault credential library!\n      credentialStoreId: ${foo.id}\n      path: my/secret/foo\n      httpMethod: GET\n      credentialType: username_password\n  fooHostCatalog:\n    type: boundary:HostCatalog\n    name: foo\n    properties:\n      name: test\n      description: test catalog\n      scopeId: ${project.id}\n      type: static\n  fooHost:\n    type: boundary:Host\n    name: foo\n    properties:\n      type: static\n      name: foo\n      hostCatalogId: ${fooHostCatalog.id}\n      address: 10.0.0.1\n  bar:\n    type: boundary:Host\n    properties:\n      type: static\n      name: bar\n      hostCatalogId: ${fooHostCatalog.id}\n      address: 10.0.0.1\n  fooHostSet:\n    type: boundary:HostSet\n    name: foo\n    properties:\n      type: static\n      name: foo\n      hostCatalogId: ${fooHostCatalog.id}\n      hostIds:\n        - ${fooHost.id}\n        - ${bar.id}\n  awsExample:\n    type: boundary:StorageBucket\n    name: aws_example\n    properties:\n      name: My aws storage bucket\n      description: My first storage bucket!\n      scopeId: ${org.id}\n      pluginName: aws\n      bucketName: mybucket\n      attributesJson:\n        fn::toJSON:\n          region: us-east-1\n      secretsJson:\n        fn::toJSON:\n          access_key_id: aws_access_key_id_value\n          secret_access_key: aws_secret_access_key_value\n      workerFilter: '\"pki\" in \"/tags/type\"'\n  fooTarget:\n    type: boundary:Target\n    name: foo\n    properties:\n      name: foo\n      description: Foo target\n      type: tcp\n      defaultPort: '22'\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooHostSet.id}\n      brokeredCredentialSourceIds:\n        - ${fooCredentialLibraryVault.id}\n  sshFoo:\n    type: boundary:Target\n    name: ssh_foo\n    properties:\n      name: ssh_foo\n      description: Ssh target\n      type: ssh\n      defaultPort: '22'\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooHostSet.id}\n      injectedApplicationCredentialSourceIds:\n        - ${fooCredentialLibraryVault.id}\n  sshSessionRecordingFoo:\n    type: boundary:Target\n    name: ssh_session_recording_foo\n    properties:\n      name: ssh_foo\n      description: Ssh target\n      type: ssh\n      defaultPort: '22'\n      scopeId: ${project.id}\n      hostSourceIds:\n        - ${fooHostSet.id}\n      injectedApplicationCredentialSourceIds:\n        - ${fooCredentialLibraryVault.id}\n      enableSessionRecording: true\n      storageBucketId: ${awsExample}\n  addressFoo:\n    type: boundary:Target\n    name: address_foo\n    properties:\n      name: address_foo\n      description: Foo target with an address\n      type: tcp\n      defaultPort: '22'\n      scopeId: ${project.id}\n      address: 127.0.0.1\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/target:Target foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "Optionally, a valid network address to connect to for this target. Cannot be used alongside host*source*ids.\n"
                },
                "brokeredCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of brokered credential source ID's.\n"
                },
                "defaultClientPort": {
                    "type": "integer",
                    "description": "The default client port for this target.\n"
                },
                "defaultPort": {
                    "type": "integer",
                    "description": "The default port for this target.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The target description.\n"
                },
                "egressWorkerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers used to access this target\n"
                },
                "enableSessionRecording": {
                    "type": "boolean",
                    "description": "HCP/Ent Only. Enable sessions recording for this target. Only applicable for SSH targets.\n"
                },
                "hostSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host source ID's. Cannot be used alongside address.\n"
                },
                "ingressWorkerFilter": {
                    "type": "string",
                    "description": "HCP Only. Boolean expression to filter the workers a user will connect to when initiating a session against this target\n"
                },
                "injectedApplicationCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of injected application credential source ID's.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The target name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                },
                "sessionConnectionLimit": {
                    "type": "integer"
                },
                "sessionMaxSeconds": {
                    "type": "integer"
                },
                "storageBucketId": {
                    "type": "string",
                    "description": "HCP/Ent Only. Storage bucket for this target. Only applicable for SSH targets.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The target resource type.\n"
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this target\n",
                    "deprecationMessage": "Deprecated. Use `egress_worker_filter` and `ingress_worker_filter` instead"
                }
            },
            "required": [
                "name",
                "scopeId",
                "sessionConnectionLimit",
                "sessionMaxSeconds",
                "type"
            ],
            "inputProperties": {
                "address": {
                    "type": "string",
                    "description": "Optionally, a valid network address to connect to for this target. Cannot be used alongside host*source*ids.\n"
                },
                "brokeredCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of brokered credential source ID's.\n"
                },
                "defaultClientPort": {
                    "type": "integer",
                    "description": "The default client port for this target.\n"
                },
                "defaultPort": {
                    "type": "integer",
                    "description": "The default port for this target.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The target description.\n"
                },
                "egressWorkerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers used to access this target\n"
                },
                "enableSessionRecording": {
                    "type": "boolean",
                    "description": "HCP/Ent Only. Enable sessions recording for this target. Only applicable for SSH targets.\n"
                },
                "hostSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of host source ID's. Cannot be used alongside address.\n"
                },
                "ingressWorkerFilter": {
                    "type": "string",
                    "description": "HCP Only. Boolean expression to filter the workers a user will connect to when initiating a session against this target\n"
                },
                "injectedApplicationCredentialSourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of injected application credential source ID's.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The target name. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                },
                "sessionConnectionLimit": {
                    "type": "integer"
                },
                "sessionMaxSeconds": {
                    "type": "integer"
                },
                "storageBucketId": {
                    "type": "string",
                    "description": "HCP/Ent Only. Storage bucket for this target. Only applicable for SSH targets.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The target resource type.\n",
                    "willReplaceOnChanges": true
                },
                "workerFilter": {
                    "type": "string",
                    "description": "Boolean expression to filter the workers for this target\n",
                    "deprecationMessage": "Deprecated. Use `egress_worker_filter` and `ingress_worker_filter` instead"
                }
            },
            "requiredInputs": [
                "scopeId",
                "type"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Target resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "Optionally, a valid network address to connect to for this target. Cannot be used alongside host*source*ids.\n"
                    },
                    "brokeredCredentialSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of brokered credential source ID's.\n"
                    },
                    "defaultClientPort": {
                        "type": "integer",
                        "description": "The default client port for this target.\n"
                    },
                    "defaultPort": {
                        "type": "integer",
                        "description": "The default port for this target.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The target description.\n"
                    },
                    "egressWorkerFilter": {
                        "type": "string",
                        "description": "Boolean expression to filter the workers used to access this target\n"
                    },
                    "enableSessionRecording": {
                        "type": "boolean",
                        "description": "HCP/Ent Only. Enable sessions recording for this target. Only applicable for SSH targets.\n"
                    },
                    "hostSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of host source ID's. Cannot be used alongside address.\n"
                    },
                    "ingressWorkerFilter": {
                        "type": "string",
                        "description": "HCP Only. Boolean expression to filter the workers a user will connect to when initiating a session against this target\n"
                    },
                    "injectedApplicationCredentialSourceIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of injected application credential source ID's.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The target name. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    },
                    "sessionConnectionLimit": {
                        "type": "integer"
                    },
                    "sessionMaxSeconds": {
                        "type": "integer"
                    },
                    "storageBucketId": {
                        "type": "string",
                        "description": "HCP/Ent Only. Storage bucket for this target. Only applicable for SSH targets.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The target resource type.\n",
                        "willReplaceOnChanges": true
                    },
                    "workerFilter": {
                        "type": "string",
                        "description": "Boolean expression to filter the workers for this target\n",
                        "deprecationMessage": "Deprecated. Use `egress_worker_filter` and `ingress_worker_filter` instead"
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/user:User": {
            "description": "The user resource allows you to configure a Boundary user.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst org = new boundary.Scope(\"org\", {\n    name: \"organization_one\",\n    description: \"My first scope!\",\n    scopeId: \"global\",\n    autoCreateAdminRole: true,\n    autoCreateDefaultRole: true,\n});\nconst password = new boundary.AuthMethod(\"password\", {\n    scopeId: org.id,\n    type: \"password\",\n});\nconst jeff = new boundary.AccountPassword(\"jeff\", {\n    authMethodId: password.id,\n    type: \"password\",\n    loginName: \"jeff\",\n    password: \"$uper$ecure\",\n});\nconst jeffUser = new boundary.User(\"jeff\", {\n    name: \"jeff\",\n    description: \"Jeff's user resource\",\n    accountIds: [jeff.id],\n    scopeId: org.id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\norg = boundary.Scope(\"org\",\n    name=\"organization_one\",\n    description=\"My first scope!\",\n    scope_id=\"global\",\n    auto_create_admin_role=True,\n    auto_create_default_role=True)\npassword = boundary.AuthMethod(\"password\",\n    scope_id=org.id,\n    type=\"password\")\njeff = boundary.AccountPassword(\"jeff\",\n    auth_method_id=password.id,\n    type=\"password\",\n    login_name=\"jeff\",\n    password=\"$uper$ecure\")\njeff_user = boundary.User(\"jeff\",\n    name=\"jeff\",\n    description=\"Jeff's user resource\",\n    account_ids=[jeff.id],\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var org = new Boundary.Scope(\"org\", new()\n    {\n        Name = \"organization_one\",\n        Description = \"My first scope!\",\n        ScopeId = \"global\",\n        AutoCreateAdminRole = true,\n        AutoCreateDefaultRole = true,\n    });\n\n    var password = new Boundary.AuthMethod(\"password\", new()\n    {\n        ScopeId = org.Id,\n        Type = \"password\",\n    });\n\n    var jeff = new Boundary.AccountPassword(\"jeff\", new()\n    {\n        AuthMethodId = password.Id,\n        Type = \"password\",\n        LoginName = \"jeff\",\n        Password = \"$uper$ecure\",\n    });\n\n    var jeffUser = new Boundary.User(\"jeff\", new()\n    {\n        Name = \"jeff\",\n        Description = \"Jeff's user resource\",\n        AccountIds = new[]\n        {\n            jeff.Id,\n        },\n        ScopeId = org.Id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\torg, err := boundary.NewScope(ctx, \"org\", \u0026boundary.ScopeArgs{\n\t\t\tName:                  pulumi.String(\"organization_one\"),\n\t\t\tDescription:           pulumi.String(\"My first scope!\"),\n\t\t\tScopeId:               pulumi.String(\"global\"),\n\t\t\tAutoCreateAdminRole:   pulumi.Bool(true),\n\t\t\tAutoCreateDefaultRole: pulumi.Bool(true),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tpassword, err := boundary.NewAuthMethod(ctx, \"password\", \u0026boundary.AuthMethodArgs{\n\t\t\tScopeId: org.ID(),\n\t\t\tType:    pulumi.String(\"password\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\tjeff, err := boundary.NewAccountPassword(ctx, \"jeff\", \u0026boundary.AccountPasswordArgs{\n\t\t\tAuthMethodId: password.ID(),\n\t\t\tType:         pulumi.String(\"password\"),\n\t\t\tLoginName:    pulumi.String(\"jeff\"),\n\t\t\tPassword:     pulumi.String(\"$uper$ecure\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.NewUser(ctx, \"jeff\", \u0026boundary.UserArgs{\n\t\t\tName:        pulumi.String(\"jeff\"),\n\t\t\tDescription: pulumi.String(\"Jeff's user resource\"),\n\t\t\tAccountIds: pulumi.StringArray{\n\t\t\t\tjeff.ID(),\n\t\t\t},\n\t\t\tScopeId: org.ID(),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Scope;\nimport com.pulumi.boundary.ScopeArgs;\nimport com.pulumi.boundary.AuthMethod;\nimport com.pulumi.boundary.AuthMethodArgs;\nimport com.pulumi.boundary.AccountPassword;\nimport com.pulumi.boundary.AccountPasswordArgs;\nimport com.pulumi.boundary.User;\nimport com.pulumi.boundary.UserArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var org = new Scope(\"org\", ScopeArgs.builder()\n            .name(\"organization_one\")\n            .description(\"My first scope!\")\n            .scopeId(\"global\")\n            .autoCreateAdminRole(true)\n            .autoCreateDefaultRole(true)\n            .build());\n\n        var password = new AuthMethod(\"password\", AuthMethodArgs.builder()\n            .scopeId(org.id())\n            .type(\"password\")\n            .build());\n\n        var jeff = new AccountPassword(\"jeff\", AccountPasswordArgs.builder()\n            .authMethodId(password.id())\n            .type(\"password\")\n            .loginName(\"jeff\")\n            .password(\"$uper$ecure\")\n            .build());\n\n        var jeffUser = new User(\"jeffUser\", UserArgs.builder()\n            .name(\"jeff\")\n            .description(\"Jeff's user resource\")\n            .accountIds(jeff.id())\n            .scopeId(org.id())\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  org:\n    type: boundary:Scope\n    properties:\n      name: organization_one\n      description: My first scope!\n      scopeId: global\n      autoCreateAdminRole: true\n      autoCreateDefaultRole: true\n  password:\n    type: boundary:AuthMethod\n    properties:\n      scopeId: ${org.id}\n      type: password\n  jeff:\n    type: boundary:AccountPassword\n    properties:\n      authMethodId: ${password.id}\n      type: password\n      loginName: jeff\n      password: $uper$ecure\n  jeffUser:\n    type: boundary:User\n    name: jeff\n    properties:\n      name: jeff\n      description: Jeff's user resource\n      accountIds:\n        - ${jeff.id}\n      scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/user:User foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account ID's to associate with this user resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The user description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The username. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n"
                }
            },
            "required": [
                "name",
                "scopeId"
            ],
            "inputProperties": {
                "accountIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Account ID's to associate with this user resource.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The user description.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The username. Defaults to the resource name.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "scopeId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering User resources.\n",
                "properties": {
                    "accountIds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Account ID's to associate with this user resource.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The user description.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The username. Defaults to the resource name.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults to the provider's `default_scope` if unset.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "boundary:index/worker:Worker": {
            "description": "The resource allows you to create a self-managed worker object.\n\n## Example Usage\n\n### Controller-led worker\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst controllerLed = new boundary.Worker(\"controller_led\", {\n    scopeId: \"global\",\n    name: \"controller-led-worker-1\",\n    description: \"self managed worker with controller led auth\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\ncontroller_led = boundary.Worker(\"controller_led\",\n    scope_id=\"global\",\n    name=\"controller-led-worker-1\",\n    description=\"self managed worker with controller led auth\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var controllerLed = new Boundary.Worker(\"controller_led\", new()\n    {\n        ScopeId = \"global\",\n        Name = \"controller-led-worker-1\",\n        Description = \"self managed worker with controller led auth\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewWorker(ctx, \"controller_led\", \u0026boundary.WorkerArgs{\n\t\t\tScopeId:     pulumi.String(\"global\"),\n\t\t\tName:        pulumi.String(\"controller-led-worker-1\"),\n\t\t\tDescription: pulumi.String(\"self managed worker with controller led auth\"),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Worker;\nimport com.pulumi.boundary.WorkerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var controllerLed = new Worker(\"controllerLed\", WorkerArgs.builder()\n            .scopeId(\"global\")\n            .name(\"controller-led-worker-1\")\n            .description(\"self managed worker with controller led auth\")\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  controllerLed:\n    type: boundary:Worker\n    name: controller_led\n    properties:\n      scopeId: global\n      name: controller-led-worker-1\n      description: self managed worker with controller led auth\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n### Worker-led worker\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\nconst workerLed = new boundary.Worker(\"worker_led\", {\n    scopeId: \"global\",\n    name: \"worker-led-worker-1\",\n    description: \"self managed worker with worker led auth\",\n    workerGeneratedAuthToken: workerGeneratedAuthToken,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\nworker_led = boundary.Worker(\"worker_led\",\n    scope_id=\"global\",\n    name=\"worker-led-worker-1\",\n    description=\"self managed worker with worker led auth\",\n    worker_generated_auth_token=worker_generated_auth_token)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    var workerLed = new Boundary.Worker(\"worker_led\", new()\n    {\n        ScopeId = \"global\",\n        Name = \"worker-led-worker-1\",\n        Description = \"self managed worker with worker led auth\",\n        WorkerGeneratedAuthToken = workerGeneratedAuthToken,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t_, err := boundary.NewWorker(ctx, \"worker_led\", \u0026boundary.WorkerArgs{\n\t\t\tScopeId:                  pulumi.String(\"global\"),\n\t\t\tName:                     pulumi.String(\"worker-led-worker-1\"),\n\t\t\tDescription:              pulumi.String(\"self managed worker with worker led auth\"),\n\t\t\tWorkerGeneratedAuthToken: pulumi.Any(workerGeneratedAuthToken),\n\t\t})\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.Worker;\nimport com.pulumi.boundary.WorkerArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        var workerLed = new Worker(\"workerLed\", WorkerArgs.builder()\n            .scopeId(\"global\")\n            .name(\"worker-led-worker-1\")\n            .description(\"self managed worker with worker led auth\")\n            .workerGeneratedAuthToken(workerGeneratedAuthToken)\n            .build());\n\n    }\n}\n```\n```yaml\nresources:\n  workerLed:\n    type: boundary:Worker\n    name: worker_led\n    properties:\n      scopeId: global\n      name: worker-led-worker-1\n      description: self managed worker with worker led auth\n      workerGeneratedAuthToken: ${workerGeneratedAuthToken}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n\n## Import\n\n```sh\n$ pulumi import boundary:index/worker:Worker foo \u003cmy-id\u003e\n```\n\n",
            "properties": {
                "address": {
                    "type": "string",
                    "description": "The accessible address of the self managed worker.\n"
                },
                "authorizedActions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of actions that the worker is entitled to perform.\n"
                },
                "controllerGeneratedActivationToken": {
                    "type": "string",
                    "description": "A single use token generated by the controller to be passed to the self-managed worker.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The description for the worker.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the worker.\n"
                },
                "releaseVersion": {
                    "type": "integer",
                    "description": "The version of the Boundary binary running on the self managed worker.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for the worker. Defaults to `global`.\n"
                },
                "workerGeneratedAuthToken": {
                    "type": "string",
                    "description": "The worker authentication token required to register the worker for the worker-led authentication flow. Leaving this blank will result in a controller generated token.\n"
                }
            },
            "required": [
                "address",
                "authorizedActions",
                "controllerGeneratedActivationToken",
                "name",
                "releaseVersion"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "The description for the worker.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The name for the worker.\n"
                },
                "scopeId": {
                    "type": "string",
                    "description": "The scope for the worker. Defaults to `global`.\n"
                },
                "workerGeneratedAuthToken": {
                    "type": "string",
                    "description": "The worker authentication token required to register the worker for the worker-led authentication flow. Leaving this blank will result in a controller generated token.\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Worker resources.\n",
                "properties": {
                    "address": {
                        "type": "string",
                        "description": "The accessible address of the self managed worker.\n"
                    },
                    "authorizedActions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of actions that the worker is entitled to perform.\n"
                    },
                    "controllerGeneratedActivationToken": {
                        "type": "string",
                        "description": "A single use token generated by the controller to be passed to the self-managed worker.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The description for the worker.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name for the worker.\n"
                    },
                    "releaseVersion": {
                        "type": "integer",
                        "description": "The version of the Boundary binary running on the self managed worker.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope for the worker. Defaults to `global`.\n"
                    },
                    "workerGeneratedAuthToken": {
                        "type": "string",
                        "description": "The worker authentication token required to register the worker for the worker-led authentication flow. Leaving this blank will result in a controller generated token.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "boundary:index/getAccount:getAccount": {
            "description": "The boundary.Account data source allows you to find a Boundary account.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\n// Retrieve the ID of a Boundary account\nconst admin = boundary.getAccount({\n    name: \"admin\",\n    authMethodId: \"ampw_1234567890\",\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\n# Retrieve the ID of a Boundary account\nadmin = boundary.get_account(name=\"admin\",\n    auth_method_id=\"ampw_1234567890\")\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve the ID of a Boundary account\n    var admin = Boundary.GetAccount.Invoke(new()\n    {\n        Name = \"admin\",\n        AuthMethodId = \"ampw_1234567890\",\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve the ID of a Boundary account\n\t\t_, err := boundary.LookupAccount(ctx, \u0026boundary.LookupAccountArgs{\n\t\t\tName:         \"admin\",\n\t\t\tAuthMethodId: \"ampw_1234567890\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryFunctions;\nimport com.pulumi.boundary.inputs.GetAccountArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve the ID of a Boundary account\n        final var admin = BoundaryFunctions.getAccount(GetAccountArgs.builder()\n            .name(\"admin\")\n            .authMethodId(\"ampw_1234567890\")\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # Retrieve the ID of a Boundary account\n  admin:\n    fn::invoke:\n      function: boundary:getAccount\n      arguments:\n        name: admin\n        authMethodId: ampw_1234567890\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAccount.\n",
                "properties": {
                    "authMethodId": {
                        "type": "string",
                        "description": "The auth method ID that will be queried for the account.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the account to retrieve.\n"
                    }
                },
                "type": "object",
                "required": [
                    "authMethodId",
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAccount.\n",
                "properties": {
                    "authMethodId": {
                        "description": "The auth method ID that will be queried for the account.\n",
                        "type": "string"
                    },
                    "description": {
                        "description": "The description of the retrieved account.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the retrieved account.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the account to retrieve.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/types/boundary:index/getAccountScope:getAccountScope"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "The type of the account\n",
                        "type": "string"
                    }
                },
                "required": [
                    "authMethodId",
                    "description",
                    "id",
                    "name",
                    "scopes",
                    "type"
                ],
                "type": "object"
            }
        },
        "boundary:index/getAuthMethod:getAuthMethod": {
            "description": "The boundary.AuthMethod data source allows you to find a Boundary auth method.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAuthMethod.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the auth method to retrieve.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAuthMethod.\n",
                "properties": {
                    "description": {
                        "description": "The description of the retrieved auth method.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the retrieved auth method.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the auth method to retrieve.\n",
                        "type": "string"
                    },
                    "scopeId": {
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/types/boundary:index/getAuthMethodScope:getAuthMethodScope"
                        },
                        "type": "array"
                    },
                    "type": {
                        "description": "The type of the auth method\n",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name",
                    "scopes",
                    "type"
                ],
                "type": "object"
            }
        },
        "boundary:index/getGroup:getGroup": {
            "description": "The boundary.Group data source allows you to find a Boundary group.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\n// Retrieve a user from the global scope\nconst globalGroup = boundary.getGroup({\n    name: \"admin\",\n});\n// User from an org scope\nconst org = boundary.getScope({\n    name: \"org\",\n    scopeId: \"global\",\n});\nconst orgGroup = org.then(org =\u003e boundary.getGroup({\n    name: \"username\",\n    scopeId: org.id,\n}));\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\n# Retrieve a user from the global scope\nglobal_group = boundary.get_group(name=\"admin\")\n# User from an org scope\norg = boundary.get_scope(name=\"org\",\n    scope_id=\"global\")\norg_group = boundary.get_group(name=\"username\",\n    scope_id=org.id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve a user from the global scope\n    var globalGroup = Boundary.GetGroup.Invoke(new()\n    {\n        Name = \"admin\",\n    });\n\n    // User from an org scope\n    var org = Boundary.GetScope.Invoke(new()\n    {\n        Name = \"org\",\n        ScopeId = \"global\",\n    });\n\n    var orgGroup = Boundary.GetGroup.Invoke(new()\n    {\n        Name = \"username\",\n        ScopeId = org.Apply(getScopeResult =\u003e getScopeResult.Id),\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve a user from the global scope\n\t\t_, err := boundary.LookupGroup(ctx, \u0026boundary.LookupGroupArgs{\n\t\t\tName: \"admin\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t// User from an org scope\n\t\torg, err := boundary.LookupScope(ctx, \u0026boundary.LookupScopeArgs{\n\t\t\tName:    \"org\",\n\t\t\tScopeId: \"global\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.LookupGroup(ctx, \u0026boundary.LookupGroupArgs{\n\t\t\tName:    \"username\",\n\t\t\tScopeId: pulumi.StringRef(org.Id),\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryFunctions;\nimport com.pulumi.boundary.inputs.GetGroupArgs;\nimport com.pulumi.boundary.inputs.GetScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve a user from the global scope\n        final var globalGroup = BoundaryFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"admin\")\n            .build());\n\n        // User from an org scope\n        final var org = BoundaryFunctions.getScope(GetScopeArgs.builder()\n            .name(\"org\")\n            .scopeId(\"global\")\n            .build());\n\n        final var orgGroup = BoundaryFunctions.getGroup(GetGroupArgs.builder()\n            .name(\"username\")\n            .scopeId(org.applyValue(getScopeResult -\u003e getScopeResult.id()))\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # Retrieve a user from the global scope\n  globalGroup:\n    fn::invoke:\n      function: boundary:getGroup\n      arguments:\n        name: admin\n  # User from an org scope\n  org:\n    fn::invoke:\n      function: boundary:getScope\n      arguments:\n        name: org\n        scopeId: global\n  orgGroup:\n    fn::invoke:\n      function: boundary:getGroup\n      arguments:\n        name: username\n        scopeId: ${org.id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getGroup.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the group to retrieve.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getGroup.\n",
                "properties": {
                    "description": {
                        "description": "The description of the retrieved group.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the retrieved group.\n",
                        "type": "string"
                    },
                    "memberIds": {
                        "description": "Resource IDs for group members, these are most likely boundary users.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "name": {
                        "description": "The name of the group to retrieve.\n",
                        "type": "string"
                    },
                    "scopeId": {
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/types/boundary:index/getGroupScope:getGroupScope"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "memberIds",
                    "name",
                    "scopes"
                ],
                "type": "object"
            }
        },
        "boundary:index/getScope:getScope": {
            "description": "The scope data source allows you to discover an existing Boundary scope by name.\nPlease note that the Global scope will always have an id of \"global\", and does not need to be discovered with this data source.\n\n## Example Usage\n\n\u003c!--Start PulumiCodeChooser --\u003e\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as boundary from \"@pulumi/boundary\";\n\n// Retrieve the ID of a Boundary project\nconst org = boundary.getScope({\n    name: \"SecOps\",\n    scopeId: \"global\",\n});\nconst project = boundary.getScope({\n    name: \"2111\",\n    scopeId: id,\n});\n```\n```python\nimport pulumi\nimport pulumi_boundary as boundary\n\n# Retrieve the ID of a Boundary project\norg = boundary.get_scope(name=\"SecOps\",\n    scope_id=\"global\")\nproject = boundary.get_scope(name=\"2111\",\n    scope_id=id)\n```\n```csharp\nusing System.Collections.Generic;\nusing System.Linq;\nusing Pulumi;\nusing Boundary = Pulumi.Boundary;\n\nreturn await Deployment.RunAsync(() =\u003e \n{\n    // Retrieve the ID of a Boundary project\n    var org = Boundary.GetScope.Invoke(new()\n    {\n        Name = \"SecOps\",\n        ScopeId = \"global\",\n    });\n\n    var project = Boundary.GetScope.Invoke(new()\n    {\n        Name = \"2111\",\n        ScopeId = id,\n    });\n\n});\n```\n```go\npackage main\n\nimport (\n\t\"github.com/joerit/pulumi-boundary/sdk/go/boundary\"\n\t\"github.com/pulumi/pulumi/sdk/v3/go/pulumi\"\n)\n\nfunc main() {\n\tpulumi.Run(func(ctx *pulumi.Context) error {\n\t\t// Retrieve the ID of a Boundary project\n\t\t_, err := boundary.LookupScope(ctx, \u0026boundary.LookupScopeArgs{\n\t\t\tName:    \"SecOps\",\n\t\t\tScopeId: \"global\",\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\t_, err = boundary.LookupScope(ctx, \u0026boundary.LookupScopeArgs{\n\t\t\tName:    \"2111\",\n\t\t\tScopeId: id,\n\t\t}, nil)\n\t\tif err != nil {\n\t\t\treturn err\n\t\t}\n\t\treturn nil\n\t})\n}\n```\n```java\npackage generated_program;\n\nimport com.pulumi.Context;\nimport com.pulumi.Pulumi;\nimport com.pulumi.core.Output;\nimport com.pulumi.boundary.BoundaryFunctions;\nimport com.pulumi.boundary.inputs.GetScopeArgs;\nimport java.util.List;\nimport java.util.ArrayList;\nimport java.util.Map;\nimport java.io.File;\nimport java.nio.file.Files;\nimport java.nio.file.Paths;\n\npublic class App {\n    public static void main(String[] args) {\n        Pulumi.run(App::stack);\n    }\n\n    public static void stack(Context ctx) {\n        // Retrieve the ID of a Boundary project\n        final var org = BoundaryFunctions.getScope(GetScopeArgs.builder()\n            .name(\"SecOps\")\n            .scopeId(\"global\")\n            .build());\n\n        final var project = BoundaryFunctions.getScope(GetScopeArgs.builder()\n            .name(\"2111\")\n            .scopeId(id)\n            .build());\n\n    }\n}\n```\n```yaml\nvariables:\n  # Retrieve the ID of a Boundary project\n  org:\n    fn::invoke:\n      function: boundary:getScope\n      arguments:\n        name: SecOps\n        scopeId: global\n  project:\n    fn::invoke:\n      function: boundary:getScope\n      arguments:\n        name: '2111'\n        scopeId: ${id}\n```\n\u003c!--End PulumiCodeChooser --\u003e\n",
            "inputs": {
                "description": "A collection of arguments for invoking getScope.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the scope to retrieve.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The parent scope ID that will be queried for the scope.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "scopeId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getScope.\n",
                "properties": {
                    "description": {
                        "description": "The description of the retrieved scope.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the retrieved scope.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name of the scope to retrieve.\n",
                        "type": "string"
                    },
                    "scopeId": {
                        "description": "The parent scope ID that will be queried for the scope.\n",
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "id",
                    "name",
                    "scopeId"
                ],
                "type": "object"
            }
        },
        "boundary:index/getUser:getUser": {
            "description": "The user data source allows you to find a Boundary user.\n\n",
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The username to search for.\n"
                    },
                    "scopeId": {
                        "type": "string",
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "accountIds": {
                        "description": "Account ID's to associate with this user resource.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "authorizedActions": {
                        "description": "A list of actions that the worker is entitled to perform.\n",
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "description": {
                        "description": "The user description.\n",
                        "type": "string"
                    },
                    "id": {
                        "description": "The ID of the user.\n",
                        "type": "string"
                    },
                    "loginName": {
                        "description": "Login name for user.\n",
                        "type": "string"
                    },
                    "name": {
                        "description": "The username to search for.\n",
                        "type": "string"
                    },
                    "primaryAccountId": {
                        "description": "Primary account ID.\n",
                        "type": "string"
                    },
                    "scopeId": {
                        "description": "The scope ID in which the resource is created. Defaults `global` if unset.\n",
                        "type": "string"
                    },
                    "scopes": {
                        "items": {
                            "$ref": "#/types/boundary:index/getUserScope:getUserScope"
                        },
                        "type": "array"
                    }
                },
                "required": [
                    "accountIds",
                    "authorizedActions",
                    "description",
                    "id",
                    "loginName",
                    "name",
                    "primaryAccountId",
                    "scopes"
                ],
                "type": "object"
            }
        }
    }
}