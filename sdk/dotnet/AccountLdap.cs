// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Boundary
{
    /// <summary>
    /// The account resource allows you to configure a Boundary account.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Boundary = Pulumi.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.Scope("org", new()
    ///     {
    ///         Name = "organization_one",
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var forumsysLdap = new Boundary.AuthMethodLdap("forumsys_ldap", new()
    ///     {
    ///         Name = "forumsys public LDAP",
    ///         ScopeId = "global",
    ///         Urls = new[]
    ///         {
    ///             "ldap://ldap.forumsys.com",
    ///         },
    ///         UserDn = "dc=example,dc=com",
    ///         UserAttr = "uid",
    ///         GroupDn = "dc=example,dc=com",
    ///         BindDn = "cn=read-only-admin,dc=example,dc=com",
    ///         BindPassword = "password",
    ///         State = "active-public",
    ///         EnableGroups = true,
    ///         DiscoverDn = true,
    ///     });
    /// 
    ///     var einstein = new Boundary.AccountLdap("einstein", new()
    ///     {
    ///         AuthMethodId = forumsysLdap.Id,
    ///         LoginName = "einstein",
    ///         Name = "einstein",
    ///     });
    /// 
    ///     var einsteinUser = new Boundary.User("einstein", new()
    ///     {
    ///         Name = "einstein",
    ///         Description = "User resource for einstein",
    ///         ScopeId = "global",
    ///         AccountIds = new[]
    ///         {
    ///             einstein.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import boundary:index/accountLdap:AccountLdap foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/accountLdap:AccountLdap")]
    public partial class AccountLdap : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Output("authMethodId")]
        public Output<string> AuthMethodId { get; private set; } = null!;

        /// <summary>
        /// The account description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Output("loginName")]
        public Output<string?> LoginName { get; private set; } = null!;

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The resource type.
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a AccountLdap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public AccountLdap(string name, AccountLdapArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/accountLdap:AccountLdap", name, args ?? new AccountLdapArgs(), MakeResourceOptions(options, ""))
        {
        }

        private AccountLdap(string name, Input<string> id, AccountLdapState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/accountLdap:AccountLdap", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing AccountLdap resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static AccountLdap Get(string name, Input<string> id, AccountLdapState? state = null, CustomResourceOptions? options = null)
        {
            return new AccountLdap(name, id, state, options);
        }
    }

    public sealed class AccountLdapArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Input("authMethodId", required: true)]
        public Input<string> AuthMethodId { get; set; } = null!;

        /// <summary>
        /// The account description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AccountLdapArgs()
        {
        }
        public static new AccountLdapArgs Empty => new AccountLdapArgs();
    }

    public sealed class AccountLdapState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The resource ID for the auth method.
        /// </summary>
        [Input("authMethodId")]
        public Input<string>? AuthMethodId { get; set; }

        /// <summary>
        /// The account description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The login name for this account.
        /// </summary>
        [Input("loginName")]
        public Input<string>? LoginName { get; set; }

        /// <summary>
        /// The account name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The resource type.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public AccountLdapState()
        {
        }
        public static new AccountLdapState Empty => new AccountLdapState();
    }
}
