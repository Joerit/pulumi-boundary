// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Boundary
{
    public static class GetAccount
    {
        public static Task<GetAccountResult> InvokeAsync(GetAccountArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAccountResult>("boundary:index/getAccount:getAccount", args ?? new GetAccountArgs(), options.WithDefaults());

        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("boundary:index/getAccount:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());

        public static Output<GetAccountResult> Invoke(GetAccountInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAccountResult>("boundary:index/getAccount:getAccount", args ?? new GetAccountInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAccountArgs : global::Pulumi.InvokeArgs
    {
        [Input("authMethodId", required: true)]
        public string AuthMethodId { get; set; } = null!;

        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        public GetAccountArgs()
        {
        }
        public static new GetAccountArgs Empty => new GetAccountArgs();
    }

    public sealed class GetAccountInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("authMethodId", required: true)]
        public Input<string> AuthMethodId { get; set; } = null!;

        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        public GetAccountInvokeArgs()
        {
        }
        public static new GetAccountInvokeArgs Empty => new GetAccountInvokeArgs();
    }


    [OutputType]
    public sealed class GetAccountResult
    {
        public readonly string AuthMethodId;
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetAccountScopeResult> Scopes;
        public readonly string Type;

        [OutputConstructor]
        private GetAccountResult(
            string authMethodId,

            string description,

            string id,

            string name,

            ImmutableArray<Outputs.GetAccountScopeResult> scopes,

            string type)
        {
            AuthMethodId = authMethodId;
            Description = description;
            Id = id;
            Name = name;
            Scopes = scopes;
            Type = type;
        }
    }
}
