// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Boundary
{
    public static class GetAuthMethod
    {
        /// <summary>
        /// The boundary.AuthMethod data source allows you to find a Boundary auth method.
        /// </summary>
        public static Task<GetAuthMethodResult> InvokeAsync(GetAuthMethodArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAuthMethodResult>("boundary:index/getAuthMethod:getAuthMethod", args ?? new GetAuthMethodArgs(), options.WithDefaults());

        /// <summary>
        /// The boundary.AuthMethod data source allows you to find a Boundary auth method.
        /// </summary>
        public static Output<GetAuthMethodResult> Invoke(GetAuthMethodInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthMethodResult>("boundary:index/getAuthMethod:getAuthMethod", args ?? new GetAuthMethodInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// The boundary.AuthMethod data source allows you to find a Boundary auth method.
        /// </summary>
        public static Output<GetAuthMethodResult> Invoke(GetAuthMethodInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetAuthMethodResult>("boundary:index/getAuthMethod:getAuthMethod", args ?? new GetAuthMethodInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAuthMethodArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the auth method to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The scope ID in which the resource is created. Defaults `global` if unset.
        /// </summary>
        [Input("scopeId")]
        public string? ScopeId { get; set; }

        public GetAuthMethodArgs()
        {
        }
        public static new GetAuthMethodArgs Empty => new GetAuthMethodArgs();
    }

    public sealed class GetAuthMethodInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the auth method to retrieve.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The scope ID in which the resource is created. Defaults `global` if unset.
        /// </summary>
        [Input("scopeId")]
        public Input<string>? ScopeId { get; set; }

        public GetAuthMethodInvokeArgs()
        {
        }
        public static new GetAuthMethodInvokeArgs Empty => new GetAuthMethodInvokeArgs();
    }


    [OutputType]
    public sealed class GetAuthMethodResult
    {
        /// <summary>
        /// The description of the retrieved auth method.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The ID of the retrieved auth method.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The name of the auth method to retrieve.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// The scope ID in which the resource is created. Defaults `global` if unset.
        /// </summary>
        public readonly string? ScopeId;
        public readonly ImmutableArray<Outputs.GetAuthMethodScopeResult> Scopes;
        /// <summary>
        /// The type of the auth method
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetAuthMethodResult(
            string description,

            string id,

            string name,

            string? scopeId,

            ImmutableArray<Outputs.GetAuthMethodScopeResult> scopes,

            string type)
        {
            Description = description;
            Id = id;
            Name = name;
            ScopeId = scopeId;
            Scopes = scopes;
            Type = type;
        }
    }
}
