// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Boundary
{
    public static class GetScope
    {
        public static Task<GetScopeResult> InvokeAsync(GetScopeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetScopeResult>("boundary:index/getScope:getScope", args ?? new GetScopeArgs(), options.WithDefaults());

        public static Output<GetScopeResult> Invoke(GetScopeInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetScopeResult>("boundary:index/getScope:getScope", args ?? new GetScopeInvokeArgs(), options.WithDefaults());

        public static Output<GetScopeResult> Invoke(GetScopeInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetScopeResult>("boundary:index/getScope:getScope", args ?? new GetScopeInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetScopeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        [Input("scopeId", required: true)]
        public string ScopeId { get; set; } = null!;

        public GetScopeArgs()
        {
        }
        public static new GetScopeArgs Empty => new GetScopeArgs();
    }

    public sealed class GetScopeInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("scopeId", required: true)]
        public Input<string> ScopeId { get; set; } = null!;

        public GetScopeInvokeArgs()
        {
        }
        public static new GetScopeInvokeArgs Empty => new GetScopeInvokeArgs();
    }


    [OutputType]
    public sealed class GetScopeResult
    {
        public readonly string Description;
        public readonly string Id;
        public readonly string Name;
        public readonly string ScopeId;

        [OutputConstructor]
        private GetScopeResult(
            string description,

            string id,

            string name,

            string scopeId)
        {
            Description = description;
            Id = id;
            Name = name;
            ScopeId = scopeId;
        }
    }
}
