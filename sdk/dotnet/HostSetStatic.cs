// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Boundary
{
    /// <summary>
    /// The host_set_static resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using Boundary = Pulumi.Boundary;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var org = new Boundary.Scope("org", new()
    ///     {
    ///         Name = "organization_one",
    ///         Description = "My first scope!",
    ///         ScopeId = "global",
    ///         AutoCreateAdminRole = true,
    ///         AutoCreateDefaultRole = true,
    ///     });
    /// 
    ///     var project = new Boundary.Scope("project", new()
    ///     {
    ///         Name = "project_one",
    ///         Description = "My first scope!",
    ///         ScopeId = org.Id,
    ///         AutoCreateAdminRole = true,
    ///     });
    /// 
    ///     var example = new Boundary.HostCatalogStatic("example", new()
    ///     {
    ///         ScopeId = project.Id,
    ///     });
    /// 
    ///     var first = new Boundary.HostStatic("first", new()
    ///     {
    ///         Name = "host_1",
    ///         Description = "My first host!",
    ///         Address = "10.0.0.1",
    ///         HostCatalogId = example.Id,
    ///     });
    /// 
    ///     var second = new Boundary.HostStatic("second", new()
    ///     {
    ///         Name = "host_2",
    ///         Description = "My second host!",
    ///         Address = "10.0.0.2",
    ///         HostCatalogId = example.Id,
    ///     });
    /// 
    ///     var web = new Boundary.HostSetStatic("web", new()
    ///     {
    ///         HostCatalogId = example.Id,
    ///         HostIds = new[]
    ///         {
    ///             first.Id,
    ///             second.Id,
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// ```sh
    /// $ pulumi import boundary:index/hostSetStatic:HostSetStatic foo &lt;my-id&gt;
    /// ```
    /// </summary>
    [BoundaryResourceType("boundary:index/hostSetStatic:HostSetStatic")]
    public partial class HostSetStatic : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The host set description.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The catalog for the host set.
        /// </summary>
        [Output("hostCatalogId")]
        public Output<string> HostCatalogId { get; private set; } = null!;

        /// <summary>
        /// The list of host IDs contained in this set.
        /// </summary>
        [Output("hostIds")]
        public Output<ImmutableArray<string>> HostIds { get; private set; } = null!;

        /// <summary>
        /// The host set name. Defaults to the resource name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The type of host set
        /// </summary>
        [Output("type")]
        public Output<string?> Type { get; private set; } = null!;


        /// <summary>
        /// Create a HostSetStatic resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public HostSetStatic(string name, HostSetStaticArgs args, CustomResourceOptions? options = null)
            : base("boundary:index/hostSetStatic:HostSetStatic", name, args ?? new HostSetStaticArgs(), MakeResourceOptions(options, ""))
        {
        }

        private HostSetStatic(string name, Input<string> id, HostSetStaticState? state = null, CustomResourceOptions? options = null)
            : base("boundary:index/hostSetStatic:HostSetStatic", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing HostSetStatic resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static HostSetStatic Get(string name, Input<string> id, HostSetStaticState? state = null, CustomResourceOptions? options = null)
        {
            return new HostSetStatic(name, id, state, options);
        }
    }

    public sealed class HostSetStaticArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The host set description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The catalog for the host set.
        /// </summary>
        [Input("hostCatalogId", required: true)]
        public Input<string> HostCatalogId { get; set; } = null!;

        [Input("hostIds")]
        private InputList<string>? _hostIds;

        /// <summary>
        /// The list of host IDs contained in this set.
        /// </summary>
        public InputList<string> HostIds
        {
            get => _hostIds ?? (_hostIds = new InputList<string>());
            set => _hostIds = value;
        }

        /// <summary>
        /// The host set name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The type of host set
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public HostSetStaticArgs()
        {
        }
        public static new HostSetStaticArgs Empty => new HostSetStaticArgs();
    }

    public sealed class HostSetStaticState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The host set description.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The catalog for the host set.
        /// </summary>
        [Input("hostCatalogId")]
        public Input<string>? HostCatalogId { get; set; }

        [Input("hostIds")]
        private InputList<string>? _hostIds;

        /// <summary>
        /// The list of host IDs contained in this set.
        /// </summary>
        public InputList<string> HostIds
        {
            get => _hostIds ?? (_hostIds = new InputList<string>());
            set => _hostIds = value;
        }

        /// <summary>
        /// The host set name. Defaults to the resource name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The type of host set
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public HostSetStaticState()
        {
        }
        public static new HostSetStaticState Empty => new HostSetStaticState();
    }
}
