// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"errors"
	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The SSH private key credential resource allows you to configure a credential using a username, private key and optional passphrase.
//
// ## Import
//
// ```sh
// $ pulumi import boundary:index/credentialSshPrivateKey:CredentialSshPrivateKey example_ssh_private_key <my-id>
// ```
type CredentialSshPrivateKey struct {
	pulumi.CustomResourceState

	// ID of the credential store this credential belongs to.
	CredentialStoreId pulumi.StringOutput `pulumi:"credentialStoreId"`
	// The description of the credential.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The name of the credential. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The private key associated with the credential.
	PrivateKey pulumi.StringOutput `pulumi:"privateKey"`
	// The private key hmac.
	PrivateKeyHmac pulumi.StringOutput `pulumi:"privateKeyHmac"`
	// The passphrase of the private key associated with the credential.
	PrivateKeyPassphrase pulumi.StringPtrOutput `pulumi:"privateKeyPassphrase"`
	// The private key passphrase hmac.
	PrivateKeyPassphraseHmac pulumi.StringOutput `pulumi:"privateKeyPassphraseHmac"`
	// The username associated with the credential.
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewCredentialSshPrivateKey registers a new resource with the given unique name, arguments, and options.
func NewCredentialSshPrivateKey(ctx *pulumi.Context,
	name string, args *CredentialSshPrivateKeyArgs, opts ...pulumi.ResourceOption) (*CredentialSshPrivateKey, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CredentialStoreId == nil {
		return nil, errors.New("invalid value for required argument 'CredentialStoreId'")
	}
	if args.PrivateKey == nil {
		return nil, errors.New("invalid value for required argument 'PrivateKey'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.PrivateKey != nil {
		args.PrivateKey = pulumi.ToSecret(args.PrivateKey).(pulumi.StringInput)
	}
	if args.PrivateKeyPassphrase != nil {
		args.PrivateKeyPassphrase = pulumi.ToSecret(args.PrivateKeyPassphrase).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"privateKey",
		"privateKeyPassphrase",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CredentialSshPrivateKey
	err := ctx.RegisterResource("boundary:index/credentialSshPrivateKey:CredentialSshPrivateKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCredentialSshPrivateKey gets an existing CredentialSshPrivateKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCredentialSshPrivateKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CredentialSshPrivateKeyState, opts ...pulumi.ResourceOption) (*CredentialSshPrivateKey, error) {
	var resource CredentialSshPrivateKey
	err := ctx.ReadResource("boundary:index/credentialSshPrivateKey:CredentialSshPrivateKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CredentialSshPrivateKey resources.
type credentialSshPrivateKeyState struct {
	// ID of the credential store this credential belongs to.
	CredentialStoreId *string `pulumi:"credentialStoreId"`
	// The description of the credential.
	Description *string `pulumi:"description"`
	// The name of the credential. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The private key associated with the credential.
	PrivateKey *string `pulumi:"privateKey"`
	// The private key hmac.
	PrivateKeyHmac *string `pulumi:"privateKeyHmac"`
	// The passphrase of the private key associated with the credential.
	PrivateKeyPassphrase *string `pulumi:"privateKeyPassphrase"`
	// The private key passphrase hmac.
	PrivateKeyPassphraseHmac *string `pulumi:"privateKeyPassphraseHmac"`
	// The username associated with the credential.
	Username *string `pulumi:"username"`
}

type CredentialSshPrivateKeyState struct {
	// ID of the credential store this credential belongs to.
	CredentialStoreId pulumi.StringPtrInput
	// The description of the credential.
	Description pulumi.StringPtrInput
	// The name of the credential. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The private key associated with the credential.
	PrivateKey pulumi.StringPtrInput
	// The private key hmac.
	PrivateKeyHmac pulumi.StringPtrInput
	// The passphrase of the private key associated with the credential.
	PrivateKeyPassphrase pulumi.StringPtrInput
	// The private key passphrase hmac.
	PrivateKeyPassphraseHmac pulumi.StringPtrInput
	// The username associated with the credential.
	Username pulumi.StringPtrInput
}

func (CredentialSshPrivateKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialSshPrivateKeyState)(nil)).Elem()
}

type credentialSshPrivateKeyArgs struct {
	// ID of the credential store this credential belongs to.
	CredentialStoreId string `pulumi:"credentialStoreId"`
	// The description of the credential.
	Description *string `pulumi:"description"`
	// The name of the credential. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The private key associated with the credential.
	PrivateKey string `pulumi:"privateKey"`
	// The passphrase of the private key associated with the credential.
	PrivateKeyPassphrase *string `pulumi:"privateKeyPassphrase"`
	// The username associated with the credential.
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a CredentialSshPrivateKey resource.
type CredentialSshPrivateKeyArgs struct {
	// ID of the credential store this credential belongs to.
	CredentialStoreId pulumi.StringInput
	// The description of the credential.
	Description pulumi.StringPtrInput
	// The name of the credential. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The private key associated with the credential.
	PrivateKey pulumi.StringInput
	// The passphrase of the private key associated with the credential.
	PrivateKeyPassphrase pulumi.StringPtrInput
	// The username associated with the credential.
	Username pulumi.StringInput
}

func (CredentialSshPrivateKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialSshPrivateKeyArgs)(nil)).Elem()
}

type CredentialSshPrivateKeyInput interface {
	pulumi.Input

	ToCredentialSshPrivateKeyOutput() CredentialSshPrivateKeyOutput
	ToCredentialSshPrivateKeyOutputWithContext(ctx context.Context) CredentialSshPrivateKeyOutput
}

func (*CredentialSshPrivateKey) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialSshPrivateKey)(nil)).Elem()
}

func (i *CredentialSshPrivateKey) ToCredentialSshPrivateKeyOutput() CredentialSshPrivateKeyOutput {
	return i.ToCredentialSshPrivateKeyOutputWithContext(context.Background())
}

func (i *CredentialSshPrivateKey) ToCredentialSshPrivateKeyOutputWithContext(ctx context.Context) CredentialSshPrivateKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialSshPrivateKeyOutput)
}

// CredentialSshPrivateKeyArrayInput is an input type that accepts CredentialSshPrivateKeyArray and CredentialSshPrivateKeyArrayOutput values.
// You can construct a concrete instance of `CredentialSshPrivateKeyArrayInput` via:
//
//	CredentialSshPrivateKeyArray{ CredentialSshPrivateKeyArgs{...} }
type CredentialSshPrivateKeyArrayInput interface {
	pulumi.Input

	ToCredentialSshPrivateKeyArrayOutput() CredentialSshPrivateKeyArrayOutput
	ToCredentialSshPrivateKeyArrayOutputWithContext(context.Context) CredentialSshPrivateKeyArrayOutput
}

type CredentialSshPrivateKeyArray []CredentialSshPrivateKeyInput

func (CredentialSshPrivateKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialSshPrivateKey)(nil)).Elem()
}

func (i CredentialSshPrivateKeyArray) ToCredentialSshPrivateKeyArrayOutput() CredentialSshPrivateKeyArrayOutput {
	return i.ToCredentialSshPrivateKeyArrayOutputWithContext(context.Background())
}

func (i CredentialSshPrivateKeyArray) ToCredentialSshPrivateKeyArrayOutputWithContext(ctx context.Context) CredentialSshPrivateKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialSshPrivateKeyArrayOutput)
}

// CredentialSshPrivateKeyMapInput is an input type that accepts CredentialSshPrivateKeyMap and CredentialSshPrivateKeyMapOutput values.
// You can construct a concrete instance of `CredentialSshPrivateKeyMapInput` via:
//
//	CredentialSshPrivateKeyMap{ "key": CredentialSshPrivateKeyArgs{...} }
type CredentialSshPrivateKeyMapInput interface {
	pulumi.Input

	ToCredentialSshPrivateKeyMapOutput() CredentialSshPrivateKeyMapOutput
	ToCredentialSshPrivateKeyMapOutputWithContext(context.Context) CredentialSshPrivateKeyMapOutput
}

type CredentialSshPrivateKeyMap map[string]CredentialSshPrivateKeyInput

func (CredentialSshPrivateKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialSshPrivateKey)(nil)).Elem()
}

func (i CredentialSshPrivateKeyMap) ToCredentialSshPrivateKeyMapOutput() CredentialSshPrivateKeyMapOutput {
	return i.ToCredentialSshPrivateKeyMapOutputWithContext(context.Background())
}

func (i CredentialSshPrivateKeyMap) ToCredentialSshPrivateKeyMapOutputWithContext(ctx context.Context) CredentialSshPrivateKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialSshPrivateKeyMapOutput)
}

type CredentialSshPrivateKeyOutput struct{ *pulumi.OutputState }

func (CredentialSshPrivateKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialSshPrivateKey)(nil)).Elem()
}

func (o CredentialSshPrivateKeyOutput) ToCredentialSshPrivateKeyOutput() CredentialSshPrivateKeyOutput {
	return o
}

func (o CredentialSshPrivateKeyOutput) ToCredentialSshPrivateKeyOutputWithContext(ctx context.Context) CredentialSshPrivateKeyOutput {
	return o
}

// ID of the credential store this credential belongs to.
func (o CredentialSshPrivateKeyOutput) CredentialStoreId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.CredentialStoreId }).(pulumi.StringOutput)
}

// The description of the credential.
func (o CredentialSshPrivateKeyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The name of the credential. Defaults to the resource name.
func (o CredentialSshPrivateKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The private key associated with the credential.
func (o CredentialSshPrivateKeyOutput) PrivateKey() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.PrivateKey }).(pulumi.StringOutput)
}

// The private key hmac.
func (o CredentialSshPrivateKeyOutput) PrivateKeyHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.PrivateKeyHmac }).(pulumi.StringOutput)
}

// The passphrase of the private key associated with the credential.
func (o CredentialSshPrivateKeyOutput) PrivateKeyPassphrase() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringPtrOutput { return v.PrivateKeyPassphrase }).(pulumi.StringPtrOutput)
}

// The private key passphrase hmac.
func (o CredentialSshPrivateKeyOutput) PrivateKeyPassphraseHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.PrivateKeyPassphraseHmac }).(pulumi.StringOutput)
}

// The username associated with the credential.
func (o CredentialSshPrivateKeyOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialSshPrivateKey) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type CredentialSshPrivateKeyArrayOutput struct{ *pulumi.OutputState }

func (CredentialSshPrivateKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialSshPrivateKey)(nil)).Elem()
}

func (o CredentialSshPrivateKeyArrayOutput) ToCredentialSshPrivateKeyArrayOutput() CredentialSshPrivateKeyArrayOutput {
	return o
}

func (o CredentialSshPrivateKeyArrayOutput) ToCredentialSshPrivateKeyArrayOutputWithContext(ctx context.Context) CredentialSshPrivateKeyArrayOutput {
	return o
}

func (o CredentialSshPrivateKeyArrayOutput) Index(i pulumi.IntInput) CredentialSshPrivateKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CredentialSshPrivateKey {
		return vs[0].([]*CredentialSshPrivateKey)[vs[1].(int)]
	}).(CredentialSshPrivateKeyOutput)
}

type CredentialSshPrivateKeyMapOutput struct{ *pulumi.OutputState }

func (CredentialSshPrivateKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialSshPrivateKey)(nil)).Elem()
}

func (o CredentialSshPrivateKeyMapOutput) ToCredentialSshPrivateKeyMapOutput() CredentialSshPrivateKeyMapOutput {
	return o
}

func (o CredentialSshPrivateKeyMapOutput) ToCredentialSshPrivateKeyMapOutputWithContext(ctx context.Context) CredentialSshPrivateKeyMapOutput {
	return o
}

func (o CredentialSshPrivateKeyMapOutput) MapIndex(k pulumi.StringInput) CredentialSshPrivateKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CredentialSshPrivateKey {
		return vs[0].(map[string]*CredentialSshPrivateKey)[vs[1].(string)]
	}).(CredentialSshPrivateKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialSshPrivateKeyInput)(nil)).Elem(), &CredentialSshPrivateKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialSshPrivateKeyArrayInput)(nil)).Elem(), CredentialSshPrivateKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialSshPrivateKeyMapInput)(nil)).Elem(), CredentialSshPrivateKeyMap{})
	pulumi.RegisterOutputType(CredentialSshPrivateKeyOutput{})
	pulumi.RegisterOutputType(CredentialSshPrivateKeyArrayOutput{})
	pulumi.RegisterOutputType(CredentialSshPrivateKeyMapOutput{})
}
