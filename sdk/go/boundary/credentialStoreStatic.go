// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"errors"
	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CredentialStoreStatic struct {
	pulumi.CustomResourceState

	// The static credential store description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The static credential store name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The scope for this credential store.
	ScopeId pulumi.StringOutput `pulumi:"scopeId"`
}

// NewCredentialStoreStatic registers a new resource with the given unique name, arguments, and options.
func NewCredentialStoreStatic(ctx *pulumi.Context,
	name string, args *CredentialStoreStaticArgs, opts ...pulumi.ResourceOption) (*CredentialStoreStatic, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScopeId == nil {
		return nil, errors.New("invalid value for required argument 'ScopeId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CredentialStoreStatic
	err := ctx.RegisterResource("boundary:index/credentialStoreStatic:CredentialStoreStatic", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCredentialStoreStatic gets an existing CredentialStoreStatic resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCredentialStoreStatic(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CredentialStoreStaticState, opts ...pulumi.ResourceOption) (*CredentialStoreStatic, error) {
	var resource CredentialStoreStatic
	err := ctx.ReadResource("boundary:index/credentialStoreStatic:CredentialStoreStatic", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CredentialStoreStatic resources.
type credentialStoreStaticState struct {
	// The static credential store description.
	Description *string `pulumi:"description"`
	// The static credential store name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope for this credential store.
	ScopeId *string `pulumi:"scopeId"`
}

type CredentialStoreStaticState struct {
	// The static credential store description.
	Description pulumi.StringPtrInput
	// The static credential store name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope for this credential store.
	ScopeId pulumi.StringPtrInput
}

func (CredentialStoreStaticState) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialStoreStaticState)(nil)).Elem()
}

type credentialStoreStaticArgs struct {
	// The static credential store description.
	Description *string `pulumi:"description"`
	// The static credential store name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The scope for this credential store.
	ScopeId string `pulumi:"scopeId"`
}

// The set of arguments for constructing a CredentialStoreStatic resource.
type CredentialStoreStaticArgs struct {
	// The static credential store description.
	Description pulumi.StringPtrInput
	// The static credential store name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The scope for this credential store.
	ScopeId pulumi.StringInput
}

func (CredentialStoreStaticArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*credentialStoreStaticArgs)(nil)).Elem()
}

type CredentialStoreStaticInput interface {
	pulumi.Input

	ToCredentialStoreStaticOutput() CredentialStoreStaticOutput
	ToCredentialStoreStaticOutputWithContext(ctx context.Context) CredentialStoreStaticOutput
}

func (*CredentialStoreStatic) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialStoreStatic)(nil)).Elem()
}

func (i *CredentialStoreStatic) ToCredentialStoreStaticOutput() CredentialStoreStaticOutput {
	return i.ToCredentialStoreStaticOutputWithContext(context.Background())
}

func (i *CredentialStoreStatic) ToCredentialStoreStaticOutputWithContext(ctx context.Context) CredentialStoreStaticOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialStoreStaticOutput)
}

// CredentialStoreStaticArrayInput is an input type that accepts CredentialStoreStaticArray and CredentialStoreStaticArrayOutput values.
// You can construct a concrete instance of `CredentialStoreStaticArrayInput` via:
//
//	CredentialStoreStaticArray{ CredentialStoreStaticArgs{...} }
type CredentialStoreStaticArrayInput interface {
	pulumi.Input

	ToCredentialStoreStaticArrayOutput() CredentialStoreStaticArrayOutput
	ToCredentialStoreStaticArrayOutputWithContext(context.Context) CredentialStoreStaticArrayOutput
}

type CredentialStoreStaticArray []CredentialStoreStaticInput

func (CredentialStoreStaticArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialStoreStatic)(nil)).Elem()
}

func (i CredentialStoreStaticArray) ToCredentialStoreStaticArrayOutput() CredentialStoreStaticArrayOutput {
	return i.ToCredentialStoreStaticArrayOutputWithContext(context.Background())
}

func (i CredentialStoreStaticArray) ToCredentialStoreStaticArrayOutputWithContext(ctx context.Context) CredentialStoreStaticArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialStoreStaticArrayOutput)
}

// CredentialStoreStaticMapInput is an input type that accepts CredentialStoreStaticMap and CredentialStoreStaticMapOutput values.
// You can construct a concrete instance of `CredentialStoreStaticMapInput` via:
//
//	CredentialStoreStaticMap{ "key": CredentialStoreStaticArgs{...} }
type CredentialStoreStaticMapInput interface {
	pulumi.Input

	ToCredentialStoreStaticMapOutput() CredentialStoreStaticMapOutput
	ToCredentialStoreStaticMapOutputWithContext(context.Context) CredentialStoreStaticMapOutput
}

type CredentialStoreStaticMap map[string]CredentialStoreStaticInput

func (CredentialStoreStaticMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialStoreStatic)(nil)).Elem()
}

func (i CredentialStoreStaticMap) ToCredentialStoreStaticMapOutput() CredentialStoreStaticMapOutput {
	return i.ToCredentialStoreStaticMapOutputWithContext(context.Background())
}

func (i CredentialStoreStaticMap) ToCredentialStoreStaticMapOutputWithContext(ctx context.Context) CredentialStoreStaticMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CredentialStoreStaticMapOutput)
}

type CredentialStoreStaticOutput struct{ *pulumi.OutputState }

func (CredentialStoreStaticOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CredentialStoreStatic)(nil)).Elem()
}

func (o CredentialStoreStaticOutput) ToCredentialStoreStaticOutput() CredentialStoreStaticOutput {
	return o
}

func (o CredentialStoreStaticOutput) ToCredentialStoreStaticOutputWithContext(ctx context.Context) CredentialStoreStaticOutput {
	return o
}

// The static credential store description.
func (o CredentialStoreStaticOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CredentialStoreStatic) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The static credential store name. Defaults to the resource name.
func (o CredentialStoreStaticOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialStoreStatic) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The scope for this credential store.
func (o CredentialStoreStaticOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *CredentialStoreStatic) pulumi.StringOutput { return v.ScopeId }).(pulumi.StringOutput)
}

type CredentialStoreStaticArrayOutput struct{ *pulumi.OutputState }

func (CredentialStoreStaticArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CredentialStoreStatic)(nil)).Elem()
}

func (o CredentialStoreStaticArrayOutput) ToCredentialStoreStaticArrayOutput() CredentialStoreStaticArrayOutput {
	return o
}

func (o CredentialStoreStaticArrayOutput) ToCredentialStoreStaticArrayOutputWithContext(ctx context.Context) CredentialStoreStaticArrayOutput {
	return o
}

func (o CredentialStoreStaticArrayOutput) Index(i pulumi.IntInput) CredentialStoreStaticOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CredentialStoreStatic {
		return vs[0].([]*CredentialStoreStatic)[vs[1].(int)]
	}).(CredentialStoreStaticOutput)
}

type CredentialStoreStaticMapOutput struct{ *pulumi.OutputState }

func (CredentialStoreStaticMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CredentialStoreStatic)(nil)).Elem()
}

func (o CredentialStoreStaticMapOutput) ToCredentialStoreStaticMapOutput() CredentialStoreStaticMapOutput {
	return o
}

func (o CredentialStoreStaticMapOutput) ToCredentialStoreStaticMapOutputWithContext(ctx context.Context) CredentialStoreStaticMapOutput {
	return o
}

func (o CredentialStoreStaticMapOutput) MapIndex(k pulumi.StringInput) CredentialStoreStaticOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CredentialStoreStatic {
		return vs[0].(map[string]*CredentialStoreStatic)[vs[1].(string)]
	}).(CredentialStoreStaticOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialStoreStaticInput)(nil)).Elem(), &CredentialStoreStatic{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialStoreStaticArrayInput)(nil)).Elem(), CredentialStoreStaticArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CredentialStoreStaticMapInput)(nil)).Elem(), CredentialStoreStaticMap{})
	pulumi.RegisterOutputType(CredentialStoreStaticOutput{})
	pulumi.RegisterOutputType(CredentialStoreStaticArrayOutput{})
	pulumi.RegisterOutputType(CredentialStoreStaticMapOutput{})
}
