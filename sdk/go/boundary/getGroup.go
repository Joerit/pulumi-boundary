// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The Group data source allows you to find a Boundary group.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/joerit/pulumi-boundary/sdk/go/boundary"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			// Retrieve a user from the global scope
//			_, err := boundary.LookupGroup(ctx, &boundary.LookupGroupArgs{
//				Name: "admin",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// User from an org scope
//			org, err := boundary.LookupScope(ctx, &boundary.LookupScopeArgs{
//				Name:    "org",
//				ScopeId: "global",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = boundary.LookupGroup(ctx, &boundary.LookupGroupArgs{
//				Name:    "username",
//				ScopeId: pulumi.StringRef(org.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func LookupGroup(ctx *pulumi.Context, args *LookupGroupArgs, opts ...pulumi.InvokeOption) (*LookupGroupResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupResult
	err := ctx.Invoke("boundary:index/getGroup:getGroup", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroup.
type LookupGroupArgs struct {
	// The name of the group to retrieve.
	Name string `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId *string `pulumi:"scopeId"`
}

// A collection of values returned by getGroup.
type LookupGroupResult struct {
	// The description of the retrieved group.
	Description string `pulumi:"description"`
	// The ID of the retrieved group.
	Id string `pulumi:"id"`
	// Resource IDs for group members, these are most likely boundary users.
	MemberIds []string `pulumi:"memberIds"`
	// The name of the group to retrieve.
	Name string `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId *string         `pulumi:"scopeId"`
	Scopes  []GetGroupScope `pulumi:"scopes"`
}

func LookupGroupOutput(ctx *pulumi.Context, args LookupGroupOutputArgs, opts ...pulumi.InvokeOption) LookupGroupResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGroupResultOutput, error) {
			args := v.(LookupGroupArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("boundary:index/getGroup:getGroup", args, LookupGroupResultOutput{}, options).(LookupGroupResultOutput), nil
		}).(LookupGroupResultOutput)
}

// A collection of arguments for invoking getGroup.
type LookupGroupOutputArgs struct {
	// The name of the group to retrieve.
	Name pulumi.StringInput `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId pulumi.StringPtrInput `pulumi:"scopeId"`
}

func (LookupGroupOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupArgs)(nil)).Elem()
}

// A collection of values returned by getGroup.
type LookupGroupResultOutput struct{ *pulumi.OutputState }

func (LookupGroupResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupResult)(nil)).Elem()
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutput() LookupGroupResultOutput {
	return o
}

func (o LookupGroupResultOutput) ToLookupGroupResultOutputWithContext(ctx context.Context) LookupGroupResultOutput {
	return o
}

// The description of the retrieved group.
func (o LookupGroupResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the retrieved group.
func (o LookupGroupResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Id }).(pulumi.StringOutput)
}

// Resource IDs for group members, these are most likely boundary users.
func (o LookupGroupResultOutput) MemberIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []string { return v.MemberIds }).(pulumi.StringArrayOutput)
}

// The name of the group to retrieve.
func (o LookupGroupResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupResult) string { return v.Name }).(pulumi.StringOutput)
}

// The scope ID in which the resource is created. Defaults `global` if unset.
func (o LookupGroupResultOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupGroupResult) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

func (o LookupGroupResultOutput) Scopes() GetGroupScopeArrayOutput {
	return o.ApplyT(func(v LookupGroupResult) []GetGroupScope { return v.Scopes }).(GetGroupScopeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupResultOutput{})
}
