// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The user data source allows you to find a Boundary user.
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserResult
	err := ctx.Invoke("boundary:index/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// The username to search for.
	Name string `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId *string `pulumi:"scopeId"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	// Account ID's to associate with this user resource.
	AccountIds []string `pulumi:"accountIds"`
	// A list of actions that the worker is entitled to perform.
	AuthorizedActions []string `pulumi:"authorizedActions"`
	// The user description.
	Description string `pulumi:"description"`
	// The ID of the user.
	Id string `pulumi:"id"`
	// Login name for user.
	LoginName string `pulumi:"loginName"`
	// The username to search for.
	Name string `pulumi:"name"`
	// Primary account ID.
	PrimaryAccountId string `pulumi:"primaryAccountId"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId *string        `pulumi:"scopeId"`
	Scopes  []GetUserScope `pulumi:"scopes"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserResultOutput, error) {
			args := v.(LookupUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("boundary:index/getUser:getUser", args, LookupUserResultOutput{}, options).(LookupUserResultOutput), nil
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	// The username to search for.
	Name pulumi.StringInput `pulumi:"name"`
	// The scope ID in which the resource is created. Defaults `global` if unset.
	ScopeId pulumi.StringPtrInput `pulumi:"scopeId"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

// Account ID's to associate with this user resource.
func (o LookupUserResultOutput) AccountIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.AccountIds }).(pulumi.StringArrayOutput)
}

// A list of actions that the worker is entitled to perform.
func (o LookupUserResultOutput) AuthorizedActions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []string { return v.AuthorizedActions }).(pulumi.StringArrayOutput)
}

// The user description.
func (o LookupUserResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Description }).(pulumi.StringOutput)
}

// The ID of the user.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Login name for user.
func (o LookupUserResultOutput) LoginName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.LoginName }).(pulumi.StringOutput)
}

// The username to search for.
func (o LookupUserResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Name }).(pulumi.StringOutput)
}

// Primary account ID.
func (o LookupUserResultOutput) PrimaryAccountId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.PrimaryAccountId }).(pulumi.StringOutput)
}

// The scope ID in which the resource is created. Defaults `global` if unset.
func (o LookupUserResultOutput) ScopeId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupUserResult) *string { return v.ScopeId }).(pulumi.StringPtrOutput)
}

func (o LookupUserResultOutput) Scopes() GetUserScopeArrayOutput {
	return o.ApplyT(func(v LookupUserResult) []GetUserScope { return v.Scopes }).(GetUserScopeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
