// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"errors"
	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The host catalog resource allows you to configure a Boundary plugin-type host catalog. Host catalogs are always part of a project, so a project resource should be used inline or you should have the project ID in hand to successfully configure a host catalog.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/joerit/pulumi-boundary/sdk/go/boundary"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			org, err := boundary.NewScope(ctx, "org", &boundary.ScopeArgs{
//				Name:                  pulumi.String("organization_one"),
//				Description:           pulumi.String("My first scope!"),
//				ScopeId:               pulumi.Any(global.Id),
//				AutoCreateAdminRole:   pulumi.Bool(true),
//				AutoCreateDefaultRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			project, err := boundary.NewScope(ctx, "project", &boundary.ScopeArgs{
//				Name:                pulumi.String("project_one"),
//				Description:         pulumi.String("My first scope!"),
//				ScopeId:             org.ID(),
//				AutoCreateAdminRole: pulumi.Bool(true),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"region": "us-east-1",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"access_key_id":     "aws_access_key_id_value",
//				"secret_access_key": "aws_secret_access_key_value",
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			// For more information about the aws plugin, please visit here:
//			// https://github.com/hashicorp/boundary-plugin-host-aws
//			//
//			// For more information about aws users, please visit here:
//			// https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges
//			_, err = boundary.NewHostCatalogPlugin(ctx, "aws_example", &boundary.HostCatalogPluginArgs{
//				Name:           pulumi.String("My aws catalog"),
//				Description:    pulumi.String("My first host catalog!"),
//				ScopeId:        project.ID(),
//				PluginName:     pulumi.String("aws"),
//				AttributesJson: pulumi.String(json0),
//				SecretsJson:    pulumi.String(json1),
//			})
//			if err != nil {
//				return err
//			}
//			tmpJSON2, err := json.Marshal(map[string]interface{}{
//				"disable_credential_rotation": "true",
//				"tenant_id":                   "ARM_TENANT_ID",
//				"subscription_id":             "ARM_SUBSCRIPTION_ID",
//				"client_id":                   "ARM_CLIENT_ID",
//			})
//			if err != nil {
//				return err
//			}
//			json2 := string(tmpJSON2)
//			tmpJSON3, err := json.Marshal(map[string]interface{}{
//				"secret_value": "ARM_CLIENT_SECRET",
//			})
//			if err != nil {
//				return err
//			}
//			json3 := string(tmpJSON3)
//			// For more information about the azure plugin, please visit here:
//			// https://github.com/hashicorp/boundary-plugin-host-azure
//			//
//			// For more information about azure ad applications, please visit here:
//			// https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1
//			_, err = boundary.NewHostCatalogPlugin(ctx, "azure_example", &boundary.HostCatalogPluginArgs{
//				Name:           pulumi.String("My azure catalog"),
//				Description:    pulumi.String("My second host catalog!"),
//				ScopeId:        project.ID(),
//				PluginName:     pulumi.String("azure"),
//				AttributesJson: pulumi.String(json2),
//				SecretsJson:    pulumi.String(json3),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
// $ pulumi import boundary:index/hostCatalogPlugin:HostCatalogPlugin foo <my-id>
// ```
type HostCatalogPlugin struct {
	pulumi.CustomResourceState

	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrOutput `pulumi:"attributesJson"`
	// The host catalog description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringOutput `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringOutput `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringOutput `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringOutput `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringOutput `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringOutput `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringOutput `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrOutput `pulumi:"secretsJson"`
}

// NewHostCatalogPlugin registers a new resource with the given unique name, arguments, and options.
func NewHostCatalogPlugin(ctx *pulumi.Context,
	name string, args *HostCatalogPluginArgs, opts ...pulumi.ResourceOption) (*HostCatalogPlugin, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ScopeId == nil {
		return nil, errors.New("invalid value for required argument 'ScopeId'")
	}
	if args.SecretsJson != nil {
		args.SecretsJson = pulumi.ToSecret(args.SecretsJson).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"secretsJson",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostCatalogPlugin
	err := ctx.RegisterResource("boundary:index/hostCatalogPlugin:HostCatalogPlugin", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostCatalogPlugin gets an existing HostCatalogPlugin resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostCatalogPlugin(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostCatalogPluginState, opts ...pulumi.ResourceOption) (*HostCatalogPlugin, error) {
	var resource HostCatalogPlugin
	err := ctx.ReadResource("boundary:index/hostCatalogPlugin:HostCatalogPlugin", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostCatalogPlugin resources.
type hostCatalogPluginState struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson *string `pulumi:"attributesJson"`
	// The host catalog description.
	Description *string `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate *string `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac *string `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac *string `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId *string `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName *string `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId *string `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac *string `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson *string `pulumi:"secretsJson"`
}

type HostCatalogPluginState struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrInput
	// The host catalog description.
	Description pulumi.StringPtrInput
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringPtrInput
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringPtrInput
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringPtrInput
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringPtrInput
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringPtrInput
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringPtrInput
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringPtrInput
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrInput
}

func (HostCatalogPluginState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostCatalogPluginState)(nil)).Elem()
}

type hostCatalogPluginArgs struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson *string `pulumi:"attributesJson"`
	// The host catalog description.
	Description *string `pulumi:"description"`
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate *string `pulumi:"internalForceUpdate"`
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac *string `pulumi:"internalHmacUsedForSecretsConfigHmac"`
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac *string `pulumi:"internalSecretsConfigHmac"`
	// The host catalog name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId *string `pulumi:"pluginId"`
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName *string `pulumi:"pluginName"`
	// The scope ID in which the resource is created.
	ScopeId string `pulumi:"scopeId"`
	// The HMAC'd secrets value returned from the server.
	SecretsHmac *string `pulumi:"secretsHmac"`
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson *string `pulumi:"secretsJson"`
}

// The set of arguments for constructing a HostCatalogPlugin resource.
type HostCatalogPluginArgs struct {
	// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
	AttributesJson pulumi.StringPtrInput
	// The host catalog description.
	Description pulumi.StringPtrInput
	// Internal only. Used to force update so that we can always check the value of secrets.
	InternalForceUpdate pulumi.StringPtrInput
	// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
	InternalHmacUsedForSecretsConfigHmac pulumi.StringPtrInput
	// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
	InternalSecretsConfigHmac pulumi.StringPtrInput
	// The host catalog name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The ID of the plugin that should back the resource. This or pluginName must be defined.
	PluginId pulumi.StringPtrInput
	// The name of the plugin that should back the resource. This or pluginId must be defined.
	PluginName pulumi.StringPtrInput
	// The scope ID in which the resource is created.
	ScopeId pulumi.StringInput
	// The HMAC'd secrets value returned from the server.
	SecretsHmac pulumi.StringPtrInput
	// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
	SecretsJson pulumi.StringPtrInput
}

func (HostCatalogPluginArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostCatalogPluginArgs)(nil)).Elem()
}

type HostCatalogPluginInput interface {
	pulumi.Input

	ToHostCatalogPluginOutput() HostCatalogPluginOutput
	ToHostCatalogPluginOutputWithContext(ctx context.Context) HostCatalogPluginOutput
}

func (*HostCatalogPlugin) ElementType() reflect.Type {
	return reflect.TypeOf((**HostCatalogPlugin)(nil)).Elem()
}

func (i *HostCatalogPlugin) ToHostCatalogPluginOutput() HostCatalogPluginOutput {
	return i.ToHostCatalogPluginOutputWithContext(context.Background())
}

func (i *HostCatalogPlugin) ToHostCatalogPluginOutputWithContext(ctx context.Context) HostCatalogPluginOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostCatalogPluginOutput)
}

// HostCatalogPluginArrayInput is an input type that accepts HostCatalogPluginArray and HostCatalogPluginArrayOutput values.
// You can construct a concrete instance of `HostCatalogPluginArrayInput` via:
//
//	HostCatalogPluginArray{ HostCatalogPluginArgs{...} }
type HostCatalogPluginArrayInput interface {
	pulumi.Input

	ToHostCatalogPluginArrayOutput() HostCatalogPluginArrayOutput
	ToHostCatalogPluginArrayOutputWithContext(context.Context) HostCatalogPluginArrayOutput
}

type HostCatalogPluginArray []HostCatalogPluginInput

func (HostCatalogPluginArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostCatalogPlugin)(nil)).Elem()
}

func (i HostCatalogPluginArray) ToHostCatalogPluginArrayOutput() HostCatalogPluginArrayOutput {
	return i.ToHostCatalogPluginArrayOutputWithContext(context.Background())
}

func (i HostCatalogPluginArray) ToHostCatalogPluginArrayOutputWithContext(ctx context.Context) HostCatalogPluginArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostCatalogPluginArrayOutput)
}

// HostCatalogPluginMapInput is an input type that accepts HostCatalogPluginMap and HostCatalogPluginMapOutput values.
// You can construct a concrete instance of `HostCatalogPluginMapInput` via:
//
//	HostCatalogPluginMap{ "key": HostCatalogPluginArgs{...} }
type HostCatalogPluginMapInput interface {
	pulumi.Input

	ToHostCatalogPluginMapOutput() HostCatalogPluginMapOutput
	ToHostCatalogPluginMapOutputWithContext(context.Context) HostCatalogPluginMapOutput
}

type HostCatalogPluginMap map[string]HostCatalogPluginInput

func (HostCatalogPluginMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostCatalogPlugin)(nil)).Elem()
}

func (i HostCatalogPluginMap) ToHostCatalogPluginMapOutput() HostCatalogPluginMapOutput {
	return i.ToHostCatalogPluginMapOutputWithContext(context.Background())
}

func (i HostCatalogPluginMap) ToHostCatalogPluginMapOutputWithContext(ctx context.Context) HostCatalogPluginMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostCatalogPluginMapOutput)
}

type HostCatalogPluginOutput struct{ *pulumi.OutputState }

func (HostCatalogPluginOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostCatalogPlugin)(nil)).Elem()
}

func (o HostCatalogPluginOutput) ToHostCatalogPluginOutput() HostCatalogPluginOutput {
	return o
}

func (o HostCatalogPluginOutput) ToHostCatalogPluginOutputWithContext(ctx context.Context) HostCatalogPluginOutput {
	return o
}

// The attributes for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host catalog.
func (o HostCatalogPluginOutput) AttributesJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringPtrOutput { return v.AttributesJson }).(pulumi.StringPtrOutput)
}

// The host catalog description.
func (o HostCatalogPluginOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal only. Used to force update so that we can always check the value of secrets.
func (o HostCatalogPluginOutput) InternalForceUpdate() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.InternalForceUpdate }).(pulumi.StringOutput)
}

// Internal only. The Boundary-provided HMAC used to calculate the current value of the HMAC'd config. Used for drift detection.
func (o HostCatalogPluginOutput) InternalHmacUsedForSecretsConfigHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.InternalHmacUsedForSecretsConfigHmac }).(pulumi.StringOutput)
}

// Internal only. HMAC of (serverSecretsHmac + config secrets). Used for proper secrets handling.
func (o HostCatalogPluginOutput) InternalSecretsConfigHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.InternalSecretsConfigHmac }).(pulumi.StringOutput)
}

// The host catalog name. Defaults to the resource name.
func (o HostCatalogPluginOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The ID of the plugin that should back the resource. This or pluginName must be defined.
func (o HostCatalogPluginOutput) PluginId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.PluginId }).(pulumi.StringOutput)
}

// The name of the plugin that should back the resource. This or pluginId must be defined.
func (o HostCatalogPluginOutput) PluginName() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.PluginName }).(pulumi.StringOutput)
}

// The scope ID in which the resource is created.
func (o HostCatalogPluginOutput) ScopeId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.ScopeId }).(pulumi.StringOutput)
}

// The HMAC'd secrets value returned from the server.
func (o HostCatalogPluginOutput) SecretsHmac() pulumi.StringOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringOutput { return v.SecretsHmac }).(pulumi.StringOutput)
}

// The secrets for the host catalog. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" to clear any existing values. NOTE: Unlike "attributesJson", removing this block will NOT clear secrets from the host catalog; this allows injecting secrets for one call, then removing them for storage.
func (o HostCatalogPluginOutput) SecretsJson() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostCatalogPlugin) pulumi.StringPtrOutput { return v.SecretsJson }).(pulumi.StringPtrOutput)
}

type HostCatalogPluginArrayOutput struct{ *pulumi.OutputState }

func (HostCatalogPluginArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostCatalogPlugin)(nil)).Elem()
}

func (o HostCatalogPluginArrayOutput) ToHostCatalogPluginArrayOutput() HostCatalogPluginArrayOutput {
	return o
}

func (o HostCatalogPluginArrayOutput) ToHostCatalogPluginArrayOutputWithContext(ctx context.Context) HostCatalogPluginArrayOutput {
	return o
}

func (o HostCatalogPluginArrayOutput) Index(i pulumi.IntInput) HostCatalogPluginOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostCatalogPlugin {
		return vs[0].([]*HostCatalogPlugin)[vs[1].(int)]
	}).(HostCatalogPluginOutput)
}

type HostCatalogPluginMapOutput struct{ *pulumi.OutputState }

func (HostCatalogPluginMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostCatalogPlugin)(nil)).Elem()
}

func (o HostCatalogPluginMapOutput) ToHostCatalogPluginMapOutput() HostCatalogPluginMapOutput {
	return o
}

func (o HostCatalogPluginMapOutput) ToHostCatalogPluginMapOutputWithContext(ctx context.Context) HostCatalogPluginMapOutput {
	return o
}

func (o HostCatalogPluginMapOutput) MapIndex(k pulumi.StringInput) HostCatalogPluginOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostCatalogPlugin {
		return vs[0].(map[string]*HostCatalogPlugin)[vs[1].(string)]
	}).(HostCatalogPluginOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostCatalogPluginInput)(nil)).Elem(), &HostCatalogPlugin{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostCatalogPluginArrayInput)(nil)).Elem(), HostCatalogPluginArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostCatalogPluginMapInput)(nil)).Elem(), HostCatalogPluginMap{})
	pulumi.RegisterOutputType(HostCatalogPluginOutput{})
	pulumi.RegisterOutputType(HostCatalogPluginArrayOutput{})
	pulumi.RegisterOutputType(HostCatalogPluginMapOutput{})
}
