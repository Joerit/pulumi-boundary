// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"errors"
	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type HostSet struct {
	pulumi.CustomResourceState

	// The host set description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The catalog for the host set.
	HostCatalogId pulumi.StringOutput `pulumi:"hostCatalogId"`
	// The list of host IDs contained in this set.
	HostIds pulumi.StringArrayOutput `pulumi:"hostIds"`
	// The host set name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
	// The type of host set
	Type pulumi.StringOutput `pulumi:"type"`
}

// NewHostSet registers a new resource with the given unique name, arguments, and options.
func NewHostSet(ctx *pulumi.Context,
	name string, args *HostSetArgs, opts ...pulumi.ResourceOption) (*HostSet, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.HostCatalogId == nil {
		return nil, errors.New("invalid value for required argument 'HostCatalogId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource HostSet
	err := ctx.RegisterResource("boundary:index/hostSet:HostSet", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetHostSet gets an existing HostSet resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetHostSet(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *HostSetState, opts ...pulumi.ResourceOption) (*HostSet, error) {
	var resource HostSet
	err := ctx.ReadResource("boundary:index/hostSet:HostSet", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering HostSet resources.
type hostSetState struct {
	// The host set description.
	Description *string `pulumi:"description"`
	// The catalog for the host set.
	HostCatalogId *string `pulumi:"hostCatalogId"`
	// The list of host IDs contained in this set.
	HostIds []string `pulumi:"hostIds"`
	// The host set name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The type of host set
	Type *string `pulumi:"type"`
}

type HostSetState struct {
	// The host set description.
	Description pulumi.StringPtrInput
	// The catalog for the host set.
	HostCatalogId pulumi.StringPtrInput
	// The list of host IDs contained in this set.
	HostIds pulumi.StringArrayInput
	// The host set name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The type of host set
	Type pulumi.StringPtrInput
}

func (HostSetState) ElementType() reflect.Type {
	return reflect.TypeOf((*hostSetState)(nil)).Elem()
}

type hostSetArgs struct {
	// The host set description.
	Description *string `pulumi:"description"`
	// The catalog for the host set.
	HostCatalogId string `pulumi:"hostCatalogId"`
	// The list of host IDs contained in this set.
	HostIds []string `pulumi:"hostIds"`
	// The host set name. Defaults to the resource name.
	Name *string `pulumi:"name"`
	// The type of host set
	Type string `pulumi:"type"`
}

// The set of arguments for constructing a HostSet resource.
type HostSetArgs struct {
	// The host set description.
	Description pulumi.StringPtrInput
	// The catalog for the host set.
	HostCatalogId pulumi.StringInput
	// The list of host IDs contained in this set.
	HostIds pulumi.StringArrayInput
	// The host set name. Defaults to the resource name.
	Name pulumi.StringPtrInput
	// The type of host set
	Type pulumi.StringInput
}

func (HostSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*hostSetArgs)(nil)).Elem()
}

type HostSetInput interface {
	pulumi.Input

	ToHostSetOutput() HostSetOutput
	ToHostSetOutputWithContext(ctx context.Context) HostSetOutput
}

func (*HostSet) ElementType() reflect.Type {
	return reflect.TypeOf((**HostSet)(nil)).Elem()
}

func (i *HostSet) ToHostSetOutput() HostSetOutput {
	return i.ToHostSetOutputWithContext(context.Background())
}

func (i *HostSet) ToHostSetOutputWithContext(ctx context.Context) HostSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostSetOutput)
}

// HostSetArrayInput is an input type that accepts HostSetArray and HostSetArrayOutput values.
// You can construct a concrete instance of `HostSetArrayInput` via:
//
//	HostSetArray{ HostSetArgs{...} }
type HostSetArrayInput interface {
	pulumi.Input

	ToHostSetArrayOutput() HostSetArrayOutput
	ToHostSetArrayOutputWithContext(context.Context) HostSetArrayOutput
}

type HostSetArray []HostSetInput

func (HostSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostSet)(nil)).Elem()
}

func (i HostSetArray) ToHostSetArrayOutput() HostSetArrayOutput {
	return i.ToHostSetArrayOutputWithContext(context.Background())
}

func (i HostSetArray) ToHostSetArrayOutputWithContext(ctx context.Context) HostSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostSetArrayOutput)
}

// HostSetMapInput is an input type that accepts HostSetMap and HostSetMapOutput values.
// You can construct a concrete instance of `HostSetMapInput` via:
//
//	HostSetMap{ "key": HostSetArgs{...} }
type HostSetMapInput interface {
	pulumi.Input

	ToHostSetMapOutput() HostSetMapOutput
	ToHostSetMapOutputWithContext(context.Context) HostSetMapOutput
}

type HostSetMap map[string]HostSetInput

func (HostSetMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostSet)(nil)).Elem()
}

func (i HostSetMap) ToHostSetMapOutput() HostSetMapOutput {
	return i.ToHostSetMapOutputWithContext(context.Background())
}

func (i HostSetMap) ToHostSetMapOutputWithContext(ctx context.Context) HostSetMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(HostSetMapOutput)
}

type HostSetOutput struct{ *pulumi.OutputState }

func (HostSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**HostSet)(nil)).Elem()
}

func (o HostSetOutput) ToHostSetOutput() HostSetOutput {
	return o
}

func (o HostSetOutput) ToHostSetOutputWithContext(ctx context.Context) HostSetOutput {
	return o
}

// The host set description.
func (o HostSetOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *HostSet) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The catalog for the host set.
func (o HostSetOutput) HostCatalogId() pulumi.StringOutput {
	return o.ApplyT(func(v *HostSet) pulumi.StringOutput { return v.HostCatalogId }).(pulumi.StringOutput)
}

// The list of host IDs contained in this set.
func (o HostSetOutput) HostIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *HostSet) pulumi.StringArrayOutput { return v.HostIds }).(pulumi.StringArrayOutput)
}

// The host set name. Defaults to the resource name.
func (o HostSetOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *HostSet) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The type of host set
func (o HostSetOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *HostSet) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

type HostSetArrayOutput struct{ *pulumi.OutputState }

func (HostSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*HostSet)(nil)).Elem()
}

func (o HostSetArrayOutput) ToHostSetArrayOutput() HostSetArrayOutput {
	return o
}

func (o HostSetArrayOutput) ToHostSetArrayOutputWithContext(ctx context.Context) HostSetArrayOutput {
	return o
}

func (o HostSetArrayOutput) Index(i pulumi.IntInput) HostSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *HostSet {
		return vs[0].([]*HostSet)[vs[1].(int)]
	}).(HostSetOutput)
}

type HostSetMapOutput struct{ *pulumi.OutputState }

func (HostSetMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*HostSet)(nil)).Elem()
}

func (o HostSetMapOutput) ToHostSetMapOutput() HostSetMapOutput {
	return o
}

func (o HostSetMapOutput) ToHostSetMapOutputWithContext(ctx context.Context) HostSetMapOutput {
	return o
}

func (o HostSetMapOutput) MapIndex(k pulumi.StringInput) HostSetOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *HostSet {
		return vs[0].(map[string]*HostSet)[vs[1].(string)]
	}).(HostSetOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*HostSetInput)(nil)).Elem(), &HostSet{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostSetArrayInput)(nil)).Elem(), HostSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*HostSetMapInput)(nil)).Elem(), HostSetMap{})
	pulumi.RegisterOutputType(HostSetOutput{})
	pulumi.RegisterOutputType(HostSetArrayOutput{})
	pulumi.RegisterOutputType(HostSetMapOutput{})
}
