// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package boundary

import (
	"context"
	"reflect"

	"errors"
	"github.com/joerit/pulumi-boundary/sdk/go/boundary/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ManagedGroupLdap struct {
	pulumi.CustomResourceState

	// The resource ID for the auth method.
	AuthMethodId pulumi.StringOutput `pulumi:"authMethodId"`
	// The managed group description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The list of groups that make up the managed group.
	GroupNames pulumi.StringArrayOutput `pulumi:"groupNames"`
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringOutput `pulumi:"name"`
}

// NewManagedGroupLdap registers a new resource with the given unique name, arguments, and options.
func NewManagedGroupLdap(ctx *pulumi.Context,
	name string, args *ManagedGroupLdapArgs, opts ...pulumi.ResourceOption) (*ManagedGroupLdap, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AuthMethodId == nil {
		return nil, errors.New("invalid value for required argument 'AuthMethodId'")
	}
	if args.GroupNames == nil {
		return nil, errors.New("invalid value for required argument 'GroupNames'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ManagedGroupLdap
	err := ctx.RegisterResource("boundary:index/managedGroupLdap:ManagedGroupLdap", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetManagedGroupLdap gets an existing ManagedGroupLdap resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetManagedGroupLdap(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ManagedGroupLdapState, opts ...pulumi.ResourceOption) (*ManagedGroupLdap, error) {
	var resource ManagedGroupLdap
	err := ctx.ReadResource("boundary:index/managedGroupLdap:ManagedGroupLdap", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ManagedGroupLdap resources.
type managedGroupLdapState struct {
	// The resource ID for the auth method.
	AuthMethodId *string `pulumi:"authMethodId"`
	// The managed group description.
	Description *string `pulumi:"description"`
	// The list of groups that make up the managed group.
	GroupNames []string `pulumi:"groupNames"`
	// The managed group name. Defaults to the resource name.
	Name *string `pulumi:"name"`
}

type ManagedGroupLdapState struct {
	// The resource ID for the auth method.
	AuthMethodId pulumi.StringPtrInput
	// The managed group description.
	Description pulumi.StringPtrInput
	// The list of groups that make up the managed group.
	GroupNames pulumi.StringArrayInput
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringPtrInput
}

func (ManagedGroupLdapState) ElementType() reflect.Type {
	return reflect.TypeOf((*managedGroupLdapState)(nil)).Elem()
}

type managedGroupLdapArgs struct {
	// The resource ID for the auth method.
	AuthMethodId string `pulumi:"authMethodId"`
	// The managed group description.
	Description *string `pulumi:"description"`
	// The list of groups that make up the managed group.
	GroupNames []string `pulumi:"groupNames"`
	// The managed group name. Defaults to the resource name.
	Name *string `pulumi:"name"`
}

// The set of arguments for constructing a ManagedGroupLdap resource.
type ManagedGroupLdapArgs struct {
	// The resource ID for the auth method.
	AuthMethodId pulumi.StringInput
	// The managed group description.
	Description pulumi.StringPtrInput
	// The list of groups that make up the managed group.
	GroupNames pulumi.StringArrayInput
	// The managed group name. Defaults to the resource name.
	Name pulumi.StringPtrInput
}

func (ManagedGroupLdapArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*managedGroupLdapArgs)(nil)).Elem()
}

type ManagedGroupLdapInput interface {
	pulumi.Input

	ToManagedGroupLdapOutput() ManagedGroupLdapOutput
	ToManagedGroupLdapOutputWithContext(ctx context.Context) ManagedGroupLdapOutput
}

func (*ManagedGroupLdap) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGroupLdap)(nil)).Elem()
}

func (i *ManagedGroupLdap) ToManagedGroupLdapOutput() ManagedGroupLdapOutput {
	return i.ToManagedGroupLdapOutputWithContext(context.Background())
}

func (i *ManagedGroupLdap) ToManagedGroupLdapOutputWithContext(ctx context.Context) ManagedGroupLdapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupLdapOutput)
}

// ManagedGroupLdapArrayInput is an input type that accepts ManagedGroupLdapArray and ManagedGroupLdapArrayOutput values.
// You can construct a concrete instance of `ManagedGroupLdapArrayInput` via:
//
//	ManagedGroupLdapArray{ ManagedGroupLdapArgs{...} }
type ManagedGroupLdapArrayInput interface {
	pulumi.Input

	ToManagedGroupLdapArrayOutput() ManagedGroupLdapArrayOutput
	ToManagedGroupLdapArrayOutputWithContext(context.Context) ManagedGroupLdapArrayOutput
}

type ManagedGroupLdapArray []ManagedGroupLdapInput

func (ManagedGroupLdapArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedGroupLdap)(nil)).Elem()
}

func (i ManagedGroupLdapArray) ToManagedGroupLdapArrayOutput() ManagedGroupLdapArrayOutput {
	return i.ToManagedGroupLdapArrayOutputWithContext(context.Background())
}

func (i ManagedGroupLdapArray) ToManagedGroupLdapArrayOutputWithContext(ctx context.Context) ManagedGroupLdapArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupLdapArrayOutput)
}

// ManagedGroupLdapMapInput is an input type that accepts ManagedGroupLdapMap and ManagedGroupLdapMapOutput values.
// You can construct a concrete instance of `ManagedGroupLdapMapInput` via:
//
//	ManagedGroupLdapMap{ "key": ManagedGroupLdapArgs{...} }
type ManagedGroupLdapMapInput interface {
	pulumi.Input

	ToManagedGroupLdapMapOutput() ManagedGroupLdapMapOutput
	ToManagedGroupLdapMapOutputWithContext(context.Context) ManagedGroupLdapMapOutput
}

type ManagedGroupLdapMap map[string]ManagedGroupLdapInput

func (ManagedGroupLdapMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedGroupLdap)(nil)).Elem()
}

func (i ManagedGroupLdapMap) ToManagedGroupLdapMapOutput() ManagedGroupLdapMapOutput {
	return i.ToManagedGroupLdapMapOutputWithContext(context.Background())
}

func (i ManagedGroupLdapMap) ToManagedGroupLdapMapOutputWithContext(ctx context.Context) ManagedGroupLdapMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ManagedGroupLdapMapOutput)
}

type ManagedGroupLdapOutput struct{ *pulumi.OutputState }

func (ManagedGroupLdapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ManagedGroupLdap)(nil)).Elem()
}

func (o ManagedGroupLdapOutput) ToManagedGroupLdapOutput() ManagedGroupLdapOutput {
	return o
}

func (o ManagedGroupLdapOutput) ToManagedGroupLdapOutputWithContext(ctx context.Context) ManagedGroupLdapOutput {
	return o
}

// The resource ID for the auth method.
func (o ManagedGroupLdapOutput) AuthMethodId() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedGroupLdap) pulumi.StringOutput { return v.AuthMethodId }).(pulumi.StringOutput)
}

// The managed group description.
func (o ManagedGroupLdapOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ManagedGroupLdap) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The list of groups that make up the managed group.
func (o ManagedGroupLdapOutput) GroupNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ManagedGroupLdap) pulumi.StringArrayOutput { return v.GroupNames }).(pulumi.StringArrayOutput)
}

// The managed group name. Defaults to the resource name.
func (o ManagedGroupLdapOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ManagedGroupLdap) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

type ManagedGroupLdapArrayOutput struct{ *pulumi.OutputState }

func (ManagedGroupLdapArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ManagedGroupLdap)(nil)).Elem()
}

func (o ManagedGroupLdapArrayOutput) ToManagedGroupLdapArrayOutput() ManagedGroupLdapArrayOutput {
	return o
}

func (o ManagedGroupLdapArrayOutput) ToManagedGroupLdapArrayOutputWithContext(ctx context.Context) ManagedGroupLdapArrayOutput {
	return o
}

func (o ManagedGroupLdapArrayOutput) Index(i pulumi.IntInput) ManagedGroupLdapOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ManagedGroupLdap {
		return vs[0].([]*ManagedGroupLdap)[vs[1].(int)]
	}).(ManagedGroupLdapOutput)
}

type ManagedGroupLdapMapOutput struct{ *pulumi.OutputState }

func (ManagedGroupLdapMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ManagedGroupLdap)(nil)).Elem()
}

func (o ManagedGroupLdapMapOutput) ToManagedGroupLdapMapOutput() ManagedGroupLdapMapOutput {
	return o
}

func (o ManagedGroupLdapMapOutput) ToManagedGroupLdapMapOutputWithContext(ctx context.Context) ManagedGroupLdapMapOutput {
	return o
}

func (o ManagedGroupLdapMapOutput) MapIndex(k pulumi.StringInput) ManagedGroupLdapOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ManagedGroupLdap {
		return vs[0].(map[string]*ManagedGroupLdap)[vs[1].(string)]
	}).(ManagedGroupLdapOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedGroupLdapInput)(nil)).Elem(), &ManagedGroupLdap{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedGroupLdapArrayInput)(nil)).Elem(), ManagedGroupLdapArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ManagedGroupLdapMapInput)(nil)).Elem(), ManagedGroupLdapMap{})
	pulumi.RegisterOutputType(ManagedGroupLdapOutput{})
	pulumi.RegisterOutputType(ManagedGroupLdapArrayOutput{})
	pulumi.RegisterOutputType(ManagedGroupLdapMapOutput{})
}
