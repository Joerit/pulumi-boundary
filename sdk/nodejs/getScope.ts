// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The scope data source allows you to discover an existing Boundary scope by name.
 * Please note that the Global scope will always have an id of "global", and does not need to be discovered with this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@pulumi/boundary";
 *
 * // Retrieve the ID of a Boundary project
 * const org = boundary.getScope({
 *     name: "SecOps",
 *     scopeId: "global",
 * });
 * const project = boundary.getScope({
 *     name: "2111",
 *     scopeId: id,
 * });
 * ```
 */
export function getScope(args: GetScopeArgs, opts?: pulumi.InvokeOptions): Promise<GetScopeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("boundary:index/getScope:getScope", {
        "name": args.name,
        "scopeId": args.scopeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getScope.
 */
export interface GetScopeArgs {
    /**
     * The name of the scope to retrieve.
     */
    name: string;
    /**
     * The parent scope ID that will be queried for the scope.
     */
    scopeId: string;
}

/**
 * A collection of values returned by getScope.
 */
export interface GetScopeResult {
    /**
     * The description of the retrieved scope.
     */
    readonly description: string;
    /**
     * The ID of the retrieved scope.
     */
    readonly id: string;
    /**
     * The name of the scope to retrieve.
     */
    readonly name: string;
    /**
     * The parent scope ID that will be queried for the scope.
     */
    readonly scopeId: string;
}
/**
 * The scope data source allows you to discover an existing Boundary scope by name.
 * Please note that the Global scope will always have an id of "global", and does not need to be discovered with this data source.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@pulumi/boundary";
 *
 * // Retrieve the ID of a Boundary project
 * const org = boundary.getScope({
 *     name: "SecOps",
 *     scopeId: "global",
 * });
 * const project = boundary.getScope({
 *     name: "2111",
 *     scopeId: id,
 * });
 * ```
 */
export function getScopeOutput(args: GetScopeOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetScopeResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("boundary:index/getScope:getScope", {
        "name": args.name,
        "scopeId": args.scopeId,
    }, opts);
}

/**
 * A collection of arguments for invoking getScope.
 */
export interface GetScopeOutputArgs {
    /**
     * The name of the scope to retrieve.
     */
    name: pulumi.Input<string>;
    /**
     * The parent scope ID that will be queried for the scope.
     */
    scopeId: pulumi.Input<string>;
}
