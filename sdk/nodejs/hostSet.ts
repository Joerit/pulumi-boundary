// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Deprecated: use `boundary.HostSetStatic` instead.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@pulumi/boundary";
 *
 * const org = new boundary.Scope("org", {
 *     name: "organization_one",
 *     description: "My first scope!",
 *     scopeId: "global",
 *     autoCreateAdminRole: true,
 *     autoCreateDefaultRole: true,
 * });
 * const project = new boundary.Scope("project", {
 *     name: "project_one",
 *     description: "My first scope!",
 *     scopeId: org.id,
 *     autoCreateAdminRole: true,
 * });
 * const static = new boundary.HostCatalog("static", {
 *     type: "static",
 *     scopeId: project.id,
 * });
 * const first = new boundary.Host("first", {
 *     type: "static",
 *     name: "host_1",
 *     description: "My first host!",
 *     address: "10.0.0.1",
 *     hostCatalogId: static.id,
 * });
 * const second = new boundary.Host("second", {
 *     type: "static",
 *     name: "host_2",
 *     description: "My second host!",
 *     address: "10.0.0.2",
 *     hostCatalogId: static.id,
 * });
 * const web = new boundary.HostSet("web", {
 *     hostCatalogId: static.id,
 *     type: "static",
 *     hostIds: [
 *         first.id,
 *         second.id,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import boundary:index/hostSet:HostSet foo <my-id>
 * ```
 */
export class HostSet extends pulumi.CustomResource {
    /**
     * Get an existing HostSet resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostSetState, opts?: pulumi.CustomResourceOptions): HostSet {
        return new HostSet(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/hostSet:HostSet';

    /**
     * Returns true if the given object is an instance of HostSet.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostSet {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostSet.__pulumiType;
    }

    /**
     * The host set description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The catalog for the host set.
     */
    public readonly hostCatalogId!: pulumi.Output<string>;
    /**
     * The list of host IDs contained in this set.
     */
    public readonly hostIds!: pulumi.Output<string[] | undefined>;
    /**
     * The host set name. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The type of host set
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a HostSet resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostSetArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostSetArgs | HostSetState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostSetState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hostCatalogId"] = state ? state.hostCatalogId : undefined;
            resourceInputs["hostIds"] = state ? state.hostIds : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as HostSetArgs | undefined;
            if ((!args || args.hostCatalogId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostCatalogId'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostCatalogId"] = args ? args.hostCatalogId : undefined;
            resourceInputs["hostIds"] = args ? args.hostIds : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostSet.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostSet resources.
 */
export interface HostSetState {
    /**
     * The host set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The catalog for the host set.
     */
    hostCatalogId?: pulumi.Input<string>;
    /**
     * The list of host IDs contained in this set.
     */
    hostIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The host set name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of host set
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostSet resource.
 */
export interface HostSetArgs {
    /**
     * The host set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The catalog for the host set.
     */
    hostCatalogId: pulumi.Input<string>;
    /**
     * The list of host IDs contained in this set.
     */
    hostIds?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The host set name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The type of host set
     */
    type: pulumi.Input<string>;
}
