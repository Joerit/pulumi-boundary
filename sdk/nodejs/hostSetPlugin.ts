// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * The hostSetPlugin resource allows you to configure a Boundary host set. Host sets are always part of a host catalog, so a host catalog resource should be used inline or you should have the host catalog ID in hand to successfully configure a host set.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as boundary from "@pulumi/boundary";
 *
 * const org = new boundary.Scope("org", {
 *     name: "organization_one",
 *     description: "My first scope!",
 *     scopeId: "global",
 *     autoCreateAdminRole: true,
 *     autoCreateDefaultRole: true,
 * });
 * const project = new boundary.Scope("project", {
 *     name: "project_one",
 *     description: "My first scope!",
 *     scopeId: org.id,
 *     autoCreateAdminRole: true,
 * });
 * // For more information about the aws plugin, please visit here:
 * // https://github.com/hashicorp/boundary-plugin-host-aws
 * //
 * // For more information about aws users, please visit here:
 * // https://learn.hashicorp.com/tutorials/boundary/aws-host-catalogs?in=boundary/oss-access-management#configure-terraform-and-iam-user-privileges
 * const awsExample = new boundary.HostCatalogPlugin("aws_example", {
 *     name: "My aws catalog",
 *     description: "My first host catalog!",
 *     scopeId: project.id,
 *     pluginName: "aws",
 *     attributesJson: JSON.stringify({
 *         region: "us-east-1",
 *     }),
 *     secretsJson: JSON.stringify({
 *         access_key_id: "aws_access_key_id_value",
 *         secret_access_key: "aws_secret_access_key_value",
 *     }),
 * });
 * const web = new boundary.HostSetPlugin("web", {
 *     name: "My web host set plugin",
 *     hostCatalogId: awsExample.id,
 *     attributesJson: JSON.stringify({
 *         filters: ["tag:service-type=web"],
 *     }),
 * });
 * const foobar = new boundary.HostSetPlugin("foobar", {
 *     name: "My foobar host set plugin",
 *     hostCatalogId: awsExample.id,
 *     preferredEndpoints: ["cidr:54.0.0.0/8"],
 *     attributesJson: JSON.stringify({
 *         filters: [
 *             "tag-key=foo",
 *             "tag-key=bar",
 *         ],
 *     }),
 * });
 * const launch = new boundary.HostSetPlugin("launch", {
 *     name: "My launch host set plugin",
 *     hostCatalogId: awsExample.id,
 *     syncIntervalSeconds: 60,
 *     attributesJson: JSON.stringify({
 *         filters: [
 *             "tag:development=prod,dev",
 *             "launch-time=2022-01-04T*",
 *         ],
 *     }),
 * });
 * // For more information about the azure plugin, please visit here:
 * // https://github.com/hashicorp/boundary-plugin-host-azure
 * //
 * // For more information about azure ad applications, please visit here:
 * // https://learn.hashicorp.com/tutorials/boundary/azure-host-catalogs#register-a-new-azure-ad-application-1
 * const azureExample = new boundary.HostCatalogPlugin("azure_example", {
 *     name: "My azure catalog",
 *     description: "My second host catalog!",
 *     scopeId: project.id,
 *     pluginName: "azure",
 *     attributesJson: JSON.stringify({
 *         disable_credential_rotation: "true",
 *         tenant_id: "ARM_TENANT_ID",
 *         subscription_id: "ARM_SUBSCRIPTION_ID",
 *         client_id: "ARM_CLIENT_ID",
 *     }),
 *     secretsJson: JSON.stringify({
 *         secret_value: "ARM_CLIENT_SECRET",
 *     }),
 * });
 * const database = new boundary.HostSetPlugin("database", {
 *     name: "My database host set plugin",
 *     hostCatalogId: azureExample.id,
 *     attributesJson: JSON.stringify({
 *         filter: "tagName eq 'service-type' and tagValue eq 'database'",
 *     }),
 * });
 * const foodev = new boundary.HostSetPlugin("foodev", {
 *     name: "My foodev host set plugin",
 *     hostCatalogId: azureExample.id,
 *     preferredEndpoints: ["cidr:54.0.0.0/8"],
 *     syncIntervalSeconds: 60,
 *     attributesJson: JSON.stringify({
 *         filter: "tagName eq 'tag-key' and tagValue eq 'foo'",
 *         filter: "tagName eq 'application' and tagValue eq 'dev'",
 *     }),
 * });
 * ```
 *
 * ## Import
 *
 * ```sh
 * $ pulumi import boundary:index/hostSetPlugin:HostSetPlugin foo <my-id>
 * ```
 */
export class HostSetPlugin extends pulumi.CustomResource {
    /**
     * Get an existing HostSetPlugin resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: HostSetPluginState, opts?: pulumi.CustomResourceOptions): HostSetPlugin {
        return new HostSetPlugin(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'boundary:index/hostSetPlugin:HostSetPlugin';

    /**
     * Returns true if the given object is an instance of HostSetPlugin.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is HostSetPlugin {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === HostSetPlugin.__pulumiType;
    }

    /**
     * The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
     */
    public readonly attributesJson!: pulumi.Output<string | undefined>;
    /**
     * The host set description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * The catalog for the host set.
     */
    public readonly hostCatalogId!: pulumi.Output<string>;
    /**
     * The host set name. Defaults to the resource name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ordered list of preferred endpoints.
     */
    public readonly preferredEndpoints!: pulumi.Output<string[] | undefined>;
    /**
     * The value to set for the sync interval seconds.
     */
    public readonly syncIntervalSeconds!: pulumi.Output<number | undefined>;
    /**
     * The type of host set
     */
    public readonly type!: pulumi.Output<string | undefined>;

    /**
     * Create a HostSetPlugin resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: HostSetPluginArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: HostSetPluginArgs | HostSetPluginState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as HostSetPluginState | undefined;
            resourceInputs["attributesJson"] = state ? state.attributesJson : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["hostCatalogId"] = state ? state.hostCatalogId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["preferredEndpoints"] = state ? state.preferredEndpoints : undefined;
            resourceInputs["syncIntervalSeconds"] = state ? state.syncIntervalSeconds : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as HostSetPluginArgs | undefined;
            if ((!args || args.hostCatalogId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'hostCatalogId'");
            }
            resourceInputs["attributesJson"] = args ? args.attributesJson : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["hostCatalogId"] = args ? args.hostCatalogId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["preferredEndpoints"] = args ? args.preferredEndpoints : undefined;
            resourceInputs["syncIntervalSeconds"] = args ? args.syncIntervalSeconds : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(HostSetPlugin.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering HostSetPlugin resources.
 */
export interface HostSetPluginState {
    /**
     * The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
     */
    attributesJson?: pulumi.Input<string>;
    /**
     * The host set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The catalog for the host set.
     */
    hostCatalogId?: pulumi.Input<string>;
    /**
     * The host set name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ordered list of preferred endpoints.
     */
    preferredEndpoints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value to set for the sync interval seconds.
     */
    syncIntervalSeconds?: pulumi.Input<number>;
    /**
     * The type of host set
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a HostSetPlugin resource.
 */
export interface HostSetPluginArgs {
    /**
     * The attributes for the host set. Either values encoded with the "jsonencode" function, pre-escaped JSON string, or a file:// or env:// path. Set to a string "null" or remove the block to clear all attributes in the host set.
     */
    attributesJson?: pulumi.Input<string>;
    /**
     * The host set description.
     */
    description?: pulumi.Input<string>;
    /**
     * The catalog for the host set.
     */
    hostCatalogId: pulumi.Input<string>;
    /**
     * The host set name. Defaults to the resource name.
     */
    name?: pulumi.Input<string>;
    /**
     * The ordered list of preferred endpoints.
     */
    preferredEndpoints?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The value to set for the sync interval seconds.
     */
    syncIntervalSeconds?: pulumi.Input<number>;
    /**
     * The type of host set
     */
    type?: pulumi.Input<string>;
}
