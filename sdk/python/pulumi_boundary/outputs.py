# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities

__all__ = [
    'GetAccountScopeResult',
    'GetAuthMethodScopeResult',
    'GetGroupScopeResult',
    'GetUserScopeResult',
]

@pulumi.output_type
class GetAccountScopeResult(dict):
    def __init__(__self__, *,
                 description: str,
                 id: str,
                 name: str,
                 parent_scope_id: str,
                 type: str):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "parent_scope_id", parent_scope_id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="parentScopeId")
    def parent_scope_id(self) -> str:
        return pulumi.get(self, "parent_scope_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


@pulumi.output_type
class GetAuthMethodScopeResult(dict):
    def __init__(__self__, *,
                 description: str,
                 id: str,
                 name: str,
                 parent_scope_id: str,
                 type: str):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "parent_scope_id", parent_scope_id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="parentScopeId")
    def parent_scope_id(self) -> str:
        return pulumi.get(self, "parent_scope_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


@pulumi.output_type
class GetGroupScopeResult(dict):
    def __init__(__self__, *,
                 description: str,
                 id: str,
                 name: str,
                 parent_scope_id: str,
                 type: str):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "parent_scope_id", parent_scope_id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="parentScopeId")
    def parent_scope_id(self) -> str:
        return pulumi.get(self, "parent_scope_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


@pulumi.output_type
class GetUserScopeResult(dict):
    def __init__(__self__, *,
                 description: str,
                 id: str,
                 name: str,
                 parent_scope_id: str,
                 type: str):
        pulumi.set(__self__, "description", description)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "parent_scope_id", parent_scope_id)
        pulumi.set(__self__, "type", type)

    @property
    @pulumi.getter
    def description(self) -> str:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="parentScopeId")
    def parent_scope_id(self) -> str:
        return pulumi.get(self, "parent_scope_id")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")


